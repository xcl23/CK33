<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\app.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\app.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060750: Last Updated: Tue Sep 28 18:17:40 2021
<BR><P>
<H3>Maximum Stack Usage =        948 bytes + Unknown(Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
ancs_client_cb &rArr; app_ancsc_data_analysis &rArr; ancs_data_parse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1a3]">ADC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[83]">BP_info_window_BP_cmd</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[80]">BP_info_window_act</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[7f]">BP_info_window_display</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[7e]">BP_info_window_exit</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[82]">BP_info_window_heart_touch</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[7d]">BP_info_window_init</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[81]">BP_info_window_real_heart</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[84]">BP_info_window_touch_move</a> from bp_child_window.o(.text) referenced from bp_child_window.o(.constdata)
 <LI><a href="#[89]">BP_window_act</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[87]">BP_window_display</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[86]">BP_window_exit</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[85]">BP_window_init</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[88]">BP_window_touch_click</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[8a]">BP_window_touch_move</a> from bp_window.o(.text) referenced from bp_window.o(.constdata)
 <LI><a href="#[194]">BTMAC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18c]">BusFault_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[6]">DLPS_IO_EnterDlpsCb</a> from rtl876x_io_dlps.o(.ram.dataon.data) referenced from rtl876x_io_dlps.o(.text)
 <LI><a href="#[7]">DLPS_IO_ExitDlpsCb</a> from rtl876x_io_dlps.o(.ram.dataon.data) referenced from rtl876x_io_dlps.o(.text)
 <LI><a href="#[18f]">DebugMon_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[5]">Default_Handler</a> from startup_rtl8762c.o(.text) referenced from system_rtl8762c.o(.text)
 <LI><a href="#[8]">FLASH_GDMA_HANDLER</a> from flash_hs_read.o(.ram.dataon.data) referenced from flash_hs_read.o(.text)
 <LI><a href="#[1b]">FontMenu_find_char</a> from fontmenu.o(.text) referenced 2 times from gui_font_digit.o(.text)
 <LI><a href="#[1a5]">GDMA0_Channel0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a6]">GDMA0_Channel1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a7]">GDMA0_Channel2_Handler</a> from lcd.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a8]">GDMA0_Channel3_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a9]">GDMA0_Channel4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1aa]">GDMA0_Channel5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19a]">GPIO4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19b]">GPIO5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1af]">GPIO_Group0_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1ae]">GPIO_Group1_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1ac]">GPIO_Group2_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1ab]">GPIO_Group3_Handler</a> from system_rtl8762c.o(.ram.dataon.data) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18a]">HardFault_Handler</a> from startup_rtl8762c.o(.text) referenced 2 times from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a1]">I2C0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a2]">I2C1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[198]">I2S0_RX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[197]">I2S0_TX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1bc]">I2S1_RX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1bb]">I2S1_TX_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1ad]">IR_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b7]">Keyscan_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1bd]">LCD_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b9]">LPCOMP_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18b]">MemManage_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[189]">NMI_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[107]">O2_info_window_O2_cmd</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[104]">O2_info_window_act</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[103]">O2_info_window_display</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[102]">O2_info_window_exit</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[106]">O2_info_window_heart_touch</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[101]">O2_info_window_init</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[105]">O2_info_window_real_heart</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[108]">O2_info_window_touch_move</a> from o2_child_window.o(.text) referenced from o2_child_window.o(.constdata)
 <LI><a href="#[1c6]">O2_real_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[10d]">O2_window_act</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[10b]">O2_window_display</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[10a]">O2_window_exit</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[109]">O2_window_init</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[10c]">O2_window_touch_click</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[10e]">O2_window_touch_move</a> from o2_window.o(.text) referenced from o2_window.o(.constdata)
 <LI><a href="#[15f]">OTA_window_act</a> from ota_window.o(.text) referenced from ota_window.o(.constdata)
 <LI><a href="#[160]">OTA_window_ble_connect_status</a> from ota_window.o(.text) referenced from ota_window.o(.constdata)
 <LI><a href="#[15e]">OTA_window_display</a> from ota_window.o(.text) referenced from ota_window.o(.constdata)
 <LI><a href="#[15d]">OTA_window_exit</a> from ota_window.o(.text) referenced from ota_window.o(.constdata)
 <LI><a href="#[15c]">OTA_window_init</a> from ota_window.o(.text) referenced from ota_window.o(.constdata)
 <LI><a href="#[1ba]">PTA_Mailbox_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[190]">PendSV_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a4]">Peripheral_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[c4]">QR_code_window_act</a> from qr_code_window.o(.text) referenced from qr_code_window.o(.constdata)
 <LI><a href="#[c3]">QR_code_window_display</a> from qr_code_window.o(.text) referenced from qr_code_window.o(.constdata)
 <LI><a href="#[c2]">QR_code_window_exit</a> from qr_code_window.o(.text) referenced from qr_code_window.o(.constdata)
 <LI><a href="#[c1]">QR_code_window_init</a> from qr_code_window.o(.text) referenced from qr_code_window.o(.constdata)
 <LI><a href="#[c5]">QR_code_window_touch_click</a> from qr_code_window.o(.text) referenced from qr_code_window.o(.constdata)
 <LI><a href="#[184]">Q_rsqrt</a> from arithmetic_common.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[1b6]">Qdecode_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19e]">RTC_Handler</a> from rtc.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[188]">Reset_Handler</a> from startup_rtl8762c.o(RESET) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19f]">SPI0_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1a0]">SPI1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b8]">SPI2W_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b5]">SPI_Flash_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18e]">SVC_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[191]">SysTick_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[2]">SystemInit</a> from system_rtl8762c.o(.app.flash.text) referenced from startup_rtl8762c.o(RESET)
 <LI><a href="#[192]">System_Handler</a> from gpio_interrupt.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[12]">TP_irq_callback</a> from tp_cst816.o(.text) referenced from tp_cst816.o(.text)
 <LI><a href="#[21d]">TP_irq_timer_handler</a> from tp_cst816.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[21e]">TP_irq_timer_release_handler</a> from tp_cst816.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[196]">Timer2_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[195]">Timer3_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[199]">Timer4_7_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b1]">Timer4_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b2]">Timer5_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b3]">Timer6_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b4]">Timer7_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19d]">UART0_Handler</a> from io_uart.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[19c]">UART1_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[1b0]">UART2_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[18d]">UsageFault_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[193]">WDG_Handler</a> from startup_rtl8762c.o(.text) referenced from startup_rtl8762c.o(VECTOR)
 <LI><a href="#[22]">_get_lc_ctype</a> from lc_ctype_c.o(locale$$code) referenced from rt_ctype_table.o(.text)
 <LI><a href="#[1f]">_printf_input_char</a> from _printf_char_common.o(.text) referenced from _printf_char_common.o(.text)
 <LI><a href="#[1e]">_sbackspace</a> from _sgetc.o(.text) referenced 2 times from __0sscanf.o(.text)
 <LI><a href="#[20]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[1d]">_sgetc</a> from _sgetc.o(.text) referenced 2 times from __0sscanf.o(.text)
 <LI><a href="#[1c]">_snputc</a> from _snputc.o(.text) referenced from __2snprintf.o(.text)
 <LI><a href="#[187]">_window_display</a> from ui_lib.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[186]">_window_refresh</a> from ui_lib.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[a6]">about_window_display</a> from about_window.o(.text) referenced from about_window.o(.constdata)
 <LI><a href="#[a5]">about_window_exit</a> from about_window.o(.text) referenced from about_window.o(.constdata)
 <LI><a href="#[a4]">about_window_init</a> from about_window.o(.text) referenced from about_window.o(.constdata)
 <LI><a href="#[a7]">about_window_key1_short</a> from about_window.o(.text) referenced from about_window.o(.constdata)
 <LI><a href="#[112]">alarm_window_act</a> from alarm_window.o(.text) referenced from alarm_window.o(.constdata)
 <LI><a href="#[111]">alarm_window_display</a> from alarm_window.o(.text) referenced from alarm_window.o(.constdata)
 <LI><a href="#[110]">alarm_window_exit</a> from alarm_window.o(.text) referenced from alarm_window.o(.constdata)
 <LI><a href="#[10f]">alarm_window_init</a> from alarm_window.o(.text) referenced from alarm_window.o(.constdata)
 <LI><a href="#[113]">alarm_window_touch_move</a> from alarm_window.o(.text) referenced from alarm_window.o(.constdata)
 <LI><a href="#[32]">ams_ble_client_disconnect_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[2e]">ams_ble_client_discover_result_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[2d]">ams_ble_client_discover_state_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[31]">ams_ble_client_notif_ind_result_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[2f]">ams_ble_client_read_result_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[30]">ams_ble_client_write_result_cb</a> from ams_client.o(.text) referenced from ams_client.o(.constdata)
 <LI><a href="#[13]">ams_client_cb</a> from ams.o(.text) referenced from ams.o(.text)
 <LI><a href="#[3b9]">ancs_client_cb</a> from ancs.o(.text) referenced from ancs.o(.text)
 <LI><a href="#[2c]">ancs_client_disc_cb</a> from ancs_client.o(.text) referenced from ancs_client.o(.constdata)
 <LI><a href="#[29]">ancs_client_discover_result_cb</a> from ancs_client.o(.text) referenced from ancs_client.o(.constdata)
 <LI><a href="#[28]">ancs_client_discover_state_cb</a> from ancs_client.o(.text) referenced from ancs_client.o(.constdata)
 <LI><a href="#[2b]">ancs_client_notify_ind_cb</a> from ancs_client.o(.text) referenced from ancs_client.o(.constdata)
 <LI><a href="#[2a]">ancs_client_write_result_cb</a> from ancs_client.o(.text) referenced from ancs_client.o(.constdata)
 <LI><a href="#[23]">app_cb0_wdg_reset</a> from system_rtl8762c.o(.text) referenced from system_rtl8762c.o(.constdata)
 <LI><a href="#[24]">app_cb5_dfu_status</a> from system_rtl8762c.o(.text) referenced from system_rtl8762c.o(.constdata)
 <LI><a href="#[14]">app_gap_callback</a> from peripheral_app.o(.text) referenced from ble_common.o(.text)
 <LI><a href="#[17a]">app_language_window_act</a> from app_language_window.o(.text) referenced from app_language_window.o(.constdata)
 <LI><a href="#[179]">app_language_window_display</a> from app_language_window.o(.text) referenced from app_language_window.o(.constdata)
 <LI><a href="#[178]">app_language_window_exit</a> from app_language_window.o(.text) referenced from app_language_window.o(.constdata)
 <LI><a href="#[177]">app_language_window_init</a> from app_language_window.o(.text) referenced from app_language_window.o(.constdata)
 <LI><a href="#[3be]">app_main_task</a> from app_task.o(.text) referenced from app_task.o(.text)
 <LI><a href="#[117]">app_pair_window_act</a> from app_pair_window.o(.text) referenced from app_pair_window.o(.constdata)
 <LI><a href="#[116]">app_pair_window_display</a> from app_pair_window.o(.text) referenced from app_pair_window.o(.constdata)
 <LI><a href="#[115]">app_pair_window_exit</a> from app_pair_window.o(.text) referenced from app_pair_window.o(.constdata)
 <LI><a href="#[114]">app_pair_window_init</a> from app_pair_window.o(.text) referenced from app_pair_window.o(.constdata)
 <LI><a href="#[15]">app_profile_callback</a> from peripheral_app.o(.text) referenced from ble_common.o(.text)
 <LI><a href="#[d8]">app_sport_window_act</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[db]">app_sport_window_app_sport_cmd</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[dc]">app_sport_window_ble_connect_status</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[d7]">app_sport_window_display</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[d6]">app_sport_window_exit</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[d5]">app_sport_window_init</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[da]">app_sport_window_key_short</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[d9]">app_sport_window_touch_click</a> from app_sport_window.o(.text) referenced from app_sport_window.o(.constdata)
 <LI><a href="#[215]">arithmetic_fifo_set_timer_handler</a> from arithmetic_common.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[20d]">battery_charge_timer_handler</a> from battery_manager.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[11b]">battery_charging_window_battery_charger</a> from battery_charging_window.o(.text) referenced from battery_charging_window.o(.constdata)
 <LI><a href="#[11a]">battery_charging_window_display</a> from battery_charging_window.o(.text) referenced from battery_charging_window.o(.constdata)
 <LI><a href="#[119]">battery_charging_window_exit</a> from battery_charging_window.o(.text) referenced from battery_charging_window.o(.constdata)
 <LI><a href="#[118]">battery_charging_window_init</a> from battery_charging_window.o(.text) referenced from battery_charging_window.o(.constdata)
 <LI><a href="#[20e]">battery_power_off_timer_handler</a> from battery_manager.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[20c]">battery_sample_timer_handler</a> from battery_manager.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[222]">ble_ams_cmd_timer_handler</a> from ams.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[209]">ble_ancs_get_timer_handler</a> from ancs.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1ff]">ble_connect_init_timer_handler</a> from data_transfer.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[200]">ble_param_updata_timer_handler</a> from peripheral_app.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[206]">ble_read_timer_handler</a> from data_passthrough.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[207]">ble_send_timer_handler</a> from data_passthrough.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[183]">block_spi_flash_read_high_speed</a> from data_manager.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[1c5]">bp_real_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[f3]">breath_child_window_act</a> from breath_child_window.o(.text) referenced from breath_child_window.o(.constdata)
 <LI><a href="#[f2]">breath_child_window_display</a> from breath_child_window.o(.text) referenced from breath_child_window.o(.constdata)
 <LI><a href="#[f1]">breath_child_window_exit</a> from breath_child_window.o(.text) referenced from breath_child_window.o(.constdata)
 <LI><a href="#[f0]">breath_child_window_init</a> from breath_child_window.o(.text) referenced from breath_child_window.o(.constdata)
 <LI><a href="#[f6]">breath_setting_window_display</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[f5]">breath_setting_window_exit</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[f4]">breath_setting_window_init</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[f9]">breath_setting_window_key_short</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[f7]">breath_setting_window_touch_click</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[f8]">breath_setting_window_touch_move</a> from breath_setting_window.o(.text) referenced from breath_setting_window.o(.constdata)
 <LI><a href="#[aa]">brightness_window_display</a> from brightness_window.o(.text) referenced from brightness_window.o(.constdata)
 <LI><a href="#[a9]">brightness_window_exit</a> from brightness_window.o(.text) referenced from brightness_window.o(.constdata)
 <LI><a href="#[a8]">brightness_window_init</a> from brightness_window.o(.text) referenced from brightness_window.o(.constdata)
 <LI><a href="#[ab]">brightness_window_touch_click</a> from brightness_window.o(.text) referenced from brightness_window.o(.constdata)
 <LI><a href="#[11f]">call_window_act</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[122]">call_window_ble_connect_status</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[120]">call_window_call_cmd</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[11e]">call_window_display</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[11d]">call_window_exit</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[11c]">call_window_init</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[123]">call_window_key1_short</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[121]">call_window_touch_click</a> from call_window.o(.text) referenced from call_window.o(.constdata)
 <LI><a href="#[1fe]">check_app_active_timer_handler</a> from data_transfer.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[204]">check_sensor_data_timer_handler</a> from data_manager_sensor.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[b]">chg_interrupt_callback</a> from battery_manager.o(.text) referenced from battery_manager.o(.text)
 <LI><a href="#[17e]">circle_menu_window_act</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[17d]">circle_menu_window_display</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[17c]">circle_menu_window_exit</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[17b]">circle_menu_window_init</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[17f]">circle_menu_window_touch_click</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[180]">circle_menu_window_touch_move</a> from circle_menu_window.o(.text) referenced from circle_menu_window.o(.constdata)
 <LI><a href="#[219]">clear_arithmetic_24H_data_timer_handler</a> from arithmetic_common.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[3]">common_main</a> from system_rtl8762c.o(.text) referenced from system_rtl8762c.o(.app.flash.text)
 <LI><a href="#[36]">data_manager_OTA_handler</a> from ota.o(.text) referenced from data_manager.o(.constdata)
 <LI><a href="#[33]">data_manager_flash_handler</a> from data_manager.o(.text) referenced from data_manager.o(.constdata)
 <LI><a href="#[37]">data_manager_message_handler</a> from data_manager_message.o(.text) referenced from data_manager.o(.constdata)
 <LI><a href="#[34]">data_manager_sensor_handler</a> from data_manager_sensor.o(.text) referenced from data_manager.o(.constdata)
 <LI><a href="#[515]">data_manager_thread_init</a> from data_manager_timer_thread.o(.text) referenced from data_manager_timer_thread.o(.text)
 <LI><a href="#[35]">data_manager_user_info_handler</a> from data_manager_user_info.o(.text) referenced from data_manager.o(.constdata)
 <LI><a href="#[128]">drink_alarm_window_act</a> from drink_alarm_window.o(.text) referenced from drink_alarm_window.o(.constdata)
 <LI><a href="#[126]">drink_alarm_window_display</a> from drink_alarm_window.o(.text) referenced from drink_alarm_window.o(.constdata)
 <LI><a href="#[125]">drink_alarm_window_exit</a> from drink_alarm_window.o(.text) referenced from drink_alarm_window.o(.constdata)
 <LI><a href="#[124]">drink_alarm_window_init</a> from drink_alarm_window.o(.text) referenced from drink_alarm_window.o(.constdata)
 <LI><a href="#[127]">drink_alarm_window_timeout</a> from drink_alarm_window.o(.text) referenced 2 times from drink_alarm_window.o(.constdata)
 <LI><a href="#[ae]">factory_reset_window_display</a> from factory_reset_window.o(.text) referenced from factory_reset_window.o(.constdata)
 <LI><a href="#[ad]">factory_reset_window_exit</a> from factory_reset_window.o(.text) referenced from factory_reset_window.o(.constdata)
 <LI><a href="#[ac]">factory_reset_window_init</a> from factory_reset_window.o(.text) referenced from factory_reset_window.o(.constdata)
 <LI><a href="#[af]">factory_reset_window_touch_click</a> from factory_reset_window.o(.text) referenced from factory_reset_window.o(.constdata)
 <LI><a href="#[1d9]">factory_test_adv_display_handler</a> from factory_test.o(.text) referenced from factory_test.o(.data)
 <LI><a href="#[1da]">factory_test_adv_stop_timer_handler</a> from factory_test.o(.text) referenced from factory_test.o(.data)
 <LI><a href="#[1db]">factory_test_sleep_timer_handler</a> from factory_test.o(.text) referenced from factory_test.o(.data)
 <LI><a href="#[19]">factory_test_task</a> from factory_test.o(.text) referenced from factory_test.o(.text)
 <LI><a href="#[1d8]">factory_test_uart_read_timer_handler</a> from factory_test.o(.text) referenced from factory_test.o(.data)
 <LI><a href="#[12d]">find_device_window_act</a> from find_device_window.o(.text) referenced from find_device_window.o(.constdata)
 <LI><a href="#[12c]">find_device_window_ble_connect_status</a> from find_device_window.o(.text) referenced from find_device_window.o(.constdata)
 <LI><a href="#[12b]">find_device_window_display</a> from find_device_window.o(.text) referenced from find_device_window.o(.constdata)
 <LI><a href="#[12a]">find_device_window_exit</a> from find_device_window.o(.text) referenced from find_device_window.o(.constdata)
 <LI><a href="#[129]">find_device_window_init</a> from find_device_window.o(.text) referenced from find_device_window.o(.constdata)
 <LI><a href="#[b3]">find_phone_window_act</a> from find_phone_window.o(.text) referenced from find_phone_window.o(.constdata)
 <LI><a href="#[b2]">find_phone_window_display</a> from find_phone_window.o(.text) referenced from find_phone_window.o(.constdata)
 <LI><a href="#[b1]">find_phone_window_exit</a> from find_phone_window.o(.text) referenced from find_phone_window.o(.constdata)
 <LI><a href="#[b0]">find_phone_window_init</a> from find_phone_window.o(.text) referenced from find_phone_window.o(.constdata)
 <LI><a href="#[1d6]">font_to_pic_timer_handler</a> from window_common.o(.text) referenced from window_timer_thread.o(.data)
 <LI><a href="#[1a]">free_task_function</a> from factory_test.o(.text) referenced from factory_test.o(.text)
 <LI><a href="#[594]">gap_lib_handle_btif_msg</a> from gap_lib.o(.text) referenced from gap_lib.o(.text)
 <LI><a href="#[b7]">goodbye_window_act</a> from goodbye_window.o(.text) referenced from goodbye_window.o(.constdata)
 <LI><a href="#[b6]">goodbye_window_display</a> from goodbye_window.o(.text) referenced from goodbye_window.o(.constdata)
 <LI><a href="#[b5]">goodbye_window_exit</a> from goodbye_window.o(.text) referenced from goodbye_window.o(.constdata)
 <LI><a href="#[b4]">goodbye_window_init</a> from goodbye_window.o(.text) referenced from goodbye_window.o(.constdata)
 <LI><a href="#[21c]">gsensor_check_init_timer_handler</a> from sc7a20_driver.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[213]">gsensor_intr_timer_handler</a> from sc7a20_driver.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[8e]">heart_info_window_act</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[8d]">heart_info_window_display</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[8c]">heart_info_window_exit</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[90]">heart_info_window_heart_touch</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[8b]">heart_info_window_init</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[8f]">heart_info_window_real_heart</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[91]">heart_info_window_touch_move</a> from heart_child_window.o(.text) referenced from heart_child_window.o(.constdata)
 <LI><a href="#[96]">heart_window_act</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[94]">heart_window_display</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[93]">heart_window_exit</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[92]">heart_window_init</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[95]">heart_window_touch_click</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[97]">heart_window_touch_move</a> from heart_window.o(.text) referenced from heart_window.o(.constdata)
 <LI><a href="#[1c1]">hr_5min_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[216]">hr_acc_set_timer_handler</a> from arithmetic_common.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1c4]">hr_fall_off_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[20f]">hr_module_set_timer_handler</a> from hr.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1c3]">hr_real_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[1c2]">hr_sport_handler</a> from hr.o(.text) referenced from hr.o(.data)
 <LI><a href="#[210]">hr_touch_timeout_timer_handler</a> from hr.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[211]">hr_value_timeout_timer_handler</a> from hr.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[212]">hrs3300_data_timer_handler</a> from hrs3300.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[21a]">init_person_info_timer_handler</a> from arithmetic_common.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[16]">io_dlps_enter_cb</a> from sys_init.o(.text) referenced from ble_common.o(.text)
 <LI><a href="#[17]">io_dlps_exit_cb</a> from sys_init.o(.text) referenced from ble_common.o(.text)
 <LI><a href="#[21]">isspace</a> from isspace.o(.text) referenced 2 times from scanf_char.o(.text)
 <LI><a href="#[9]">key1_irq_callback</a> from key1.o(.text) referenced from key1.o(.text)
 <LI><a href="#[220]">key1_long_timer_handler</a> from key1.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[221]">key1_press_timer_handler</a> from key1.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[21f]">key1_short_timer_handler</a> from key1.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[173]">language_window_display</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[172]">language_window_exit</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[171]">language_window_init</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[176]">language_window_key1_short</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[174]">language_window_touch_click</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[175]">language_window_touch_move</a> from language_window.o(.text) referenced from language_window.o(.constdata)
 <LI><a href="#[ba]">lcd_timeout_window_display</a> from lcd_timeout_window.o(.text) referenced from lcd_timeout_window.o(.constdata)
 <LI><a href="#[b9]">lcd_timeout_window_exit</a> from lcd_timeout_window.o(.text) referenced from lcd_timeout_window.o(.constdata)
 <LI><a href="#[b8]">lcd_timeout_window_init</a> from lcd_timeout_window.o(.text) referenced from lcd_timeout_window.o(.constdata)
 <LI><a href="#[bb]">lcd_timeout_window_touch_click</a> from lcd_timeout_window.o(.text) referenced from lcd_timeout_window.o(.constdata)
 <LI><a href="#[133]">led_onoff_window_act</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[130]">led_onoff_window_display</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[12f]">led_onoff_window_exit</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[12e]">led_onoff_window_init</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[131]">led_onoff_window_touch_click</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[132]">led_onoff_window_touch_move</a> from led_onoff_window.o(.text) referenced from led_onoff_window.o(.constdata)
 <LI><a href="#[4]">log_direct</a> from ROM.lib(ABSOLUTE) referenced from startup_rtl8762c.o(.text)
 <LI><a href="#[66]">logo_window_act</a> from logo_window.o(.text) referenced from logo_window.o(.constdata)
 <LI><a href="#[65]">logo_window_display</a> from logo_window.o(.text) referenced from logo_window.o(.constdata)
 <LI><a href="#[64]">logo_window_exit</a> from logo_window.o(.text) referenced from logo_window.o(.constdata)
 <LI><a href="#[63]">logo_window_init</a> from logo_window.o(.text) referenced from logo_window.o(.constdata)
 <LI><a href="#[1c9]">low_power_adc_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[1ca]">low_power_adv_stop_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[d]">low_power_chg_interrupt_callback</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.text)
 <LI><a href="#[1cc]">low_power_display_timeout_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[1cb]">low_power_display_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[c]">low_power_key1_interrupt_callback</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.text)
 <LI><a href="#[1ce]">low_power_key1_long_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[1cd]">low_power_key1_press_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[e]">low_power_thread_init</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.text)
 <LI><a href="#[1c8]">low_power_usb_charge_timer_handler</a> from low_power_mode.o(.text) referenced from low_power_mode.o(.data)
 <LI><a href="#[138]">low_power_window_act</a> from low_power_window.o(.text) referenced from low_power_window.o(.constdata)
 <LI><a href="#[136]">low_power_window_display</a> from low_power_window.o(.text) referenced from low_power_window.o(.constdata)
 <LI><a href="#[135]">low_power_window_exit</a> from low_power_window.o(.text) referenced from low_power_window.o(.constdata)
 <LI><a href="#[137]">low_power_window_go_home</a> from low_power_window.o(.text) referenced from low_power_window.o(.constdata)
 <LI><a href="#[134]">low_power_window_init</a> from low_power_window.o(.text) referenced from low_power_window.o(.constdata)
 <LI><a href="#[71]">main_window_22</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6a]">main_window_22_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[72]">main_window_23</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6b]">main_window_23_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6d]">main_window_24</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[70]">main_window_26</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[69]">main_window_26_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6e]">main_window_27</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[67]">main_window_27_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6f]">main_window_28</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[68]">main_window_28_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[73]">main_window_40</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[6c]">main_window_40_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[79]">main_window_act</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[78]">main_window_display</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[77]">main_window_exit</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[76]">main_window_init</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[7c]">main_window_key1_short</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[74]">main_window_setting</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[7b]">main_window_touch_click</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[7a]">main_window_touch_move</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[75]">main_window_user_define</a> from main_window.o(.text) referenced from main_window.o(.constdata)
 <LI><a href="#[9a]">message_info_child_window_display</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[99]">message_info_child_window_exit</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[9d]">message_info_child_window_go_home</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[98]">message_info_child_window_init</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[9c]">message_info_child_window_message</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[9b]">message_info_child_window_touch_move</a> from message_info_child_window.o(.text) referenced from message_info_child_window.o(.constdata)
 <LI><a href="#[a0]">message_info_window_display</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[9f]">message_info_window_exit</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[9e]">message_info_window_init</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[a3]">message_info_window_message</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[a2]">message_info_window_touch_click</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[a1]">message_info_window_touch_move</a> from message_info_window.o(.text) referenced from message_info_window.o(.constdata)
 <LI><a href="#[18]">mix_thread_init</a> from mix_timer_thread.o(.text) referenced from mix_timer_thread.o(.text)
 <LI><a href="#[be]">more_info_window_display</a> from more_info_window.o(.text) referenced from more_info_window.o(.constdata)
 <LI><a href="#[bd]">more_info_window_exit</a> from more_info_window.o(.text) referenced from more_info_window.o(.constdata)
 <LI><a href="#[bc]">more_info_window_init</a> from more_info_window.o(.text) referenced from more_info_window.o(.constdata)
 <LI><a href="#[bf]">more_info_window_touch_click</a> from more_info_window.o(.text) referenced from more_info_window.o(.constdata)
 <LI><a href="#[c0]">more_info_window_touch_move</a> from more_info_window.o(.text) referenced from more_info_window.o(.constdata)
 <LI><a href="#[208]">motor_msg_timer_handler</a> from motor.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[fc]">music_window_act</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[fd]">music_window_display</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[fb]">music_window_exit</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[fa]">music_window_init</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[fe]">music_window_key1_short</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[ff]">music_window_touch_click</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[100]">music_window_touch_move</a> from music_window.o(.text) referenced from music_window.o(.constdata)
 <LI><a href="#[202]">new_day_timer_handler</a> from data_manager_user_info.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[163]">null_window_display</a> from null_window.o(.text) referenced from null_window.o(.constdata)
 <LI><a href="#[162]">null_window_exit</a> from null_window.o(.text) referenced from null_window.o(.constdata)
 <LI><a href="#[161]">null_window_init</a> from null_window.o(.text) referenced from null_window.o(.constdata)
 <LI><a href="#[182]">oled_area_display</a> from lcd.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[181]">oled_get_status</a> from lcd.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[205]">ota_finish_timer_handler</a> from ota.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[ef]">photograph_child_window_act</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[ea]">photograph_child_window_display</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[e9]">photograph_child_window_exit</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[e8]">photograph_child_window_init</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[ed]">photograph_child_window_key1_short</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[ee]">photograph_child_window_photograph</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[eb]">photograph_child_window_shake_device</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[ec]">photograph_child_window_touch_click</a> from photograph_child_window.o(.text) referenced from photograph_child_window.o(.constdata)
 <LI><a href="#[13b]">power_analysis_window_display</a> from power_analysis_window.o(.text) referenced from power_analysis_window.o(.constdata)
 <LI><a href="#[13a]">power_analysis_window_exit</a> from power_analysis_window.o(.text) referenced from power_analysis_window.o(.constdata)
 <LI><a href="#[139]">power_analysis_window_init</a> from power_analysis_window.o(.text) referenced from power_analysis_window.o(.constdata)
 <LI><a href="#[250]">pre_main</a> from system_rtl8762c.o(.app.flash.text) referenced from system_rtl8762c.o(.app.flash.text)
 <LI><a href="#[14d]">quick_window_display</a> from quick_window.o(.text) referenced from quick_window.o(.constdata)
 <LI><a href="#[14c]">quick_window_exit</a> from quick_window.o(.text) referenced from quick_window.o(.constdata)
 <LI><a href="#[14b]">quick_window_init</a> from quick_window.o(.text) referenced from quick_window.o(.constdata)
 <LI><a href="#[14f]">quick_window_touch_click</a> from quick_window.o(.text) referenced from quick_window.o(.constdata)
 <LI><a href="#[14e]">quick_window_touch_move</a> from quick_window.o(.text) referenced from quick_window.o(.constdata)
 <LI><a href="#[42]">receive_OTA_data_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[5e]">receive_ack_all_sensor_from_app</a> from data_receive_package.o(.text) referenced 10 times from data_receive_package.o(.constdata)
 <LI><a href="#[3c]">receive_alarmInfo_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[55]">receive_app_sport_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[3e]">receive_app_sync_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[58]">receive_app_test_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4f]">receive_call_alarm_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[46]">receive_call_control_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4e]">receive_drink_alarm_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4d]">receive_find_device_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[45]">receive_forget_disturb_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[51]">receive_hand_rise_switch_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[52]">receive_heart_auto_switch_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[39]">receive_language_setting_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[3d]">receive_messageInfo_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[50]">receive_message_alarm_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[48]">receive_message_switch_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[43]">receive_music_content_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[5b]">receive_no_ack_app_close_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[41]">receive_open_ble_pair_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4a]">receive_pair_finish_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4c]">receive_photograph_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[56]">receive_real_BP_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[57]">receive_real_O2_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[5c]">receive_request_ancs_status_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[5d]">receive_request_ota_status_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[47]">receive_reset_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[3f]">receive_set_data_switch_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[40]">receive_set_target_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[49]">receive_shutdown_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[44]">receive_sitting_remind_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[53]">receive_target_alarm_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[3a]">receive_timeInfo_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[4b]">receive_unit_setting_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[38]">receive_userInfo_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[54]">receive_watch_setting_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[59]">receive_watchface_sync_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[3b]">receive_weather_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[5a]">receive_woman_stage_info_from_app</a> from data_receive_package.o(.text) referenced from data_receive_package.o(.constdata)
 <LI><a href="#[20a]">reset_factory_timer_handler</a> from data_manager.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1be]">rtc_compare0_timer_handler</a> from rtc.o(.text) referenced from rtc.o(.data)
 <LI><a href="#[1be]">rtc_compare0_timer_handler</a> from rtc.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1bf]">rtc_overflow_timer_handler</a> from rtc.o(.text) referenced from rtc.o(.data)
 <LI><a href="#[1bf]">rtc_overflow_timer_handler</a> from rtc.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[295]">rtc_thread_init</a> from rtc.o(.text) referenced from rtc.o(.text)
 <LI><a href="#[214]">sc7a20_fifo_timer_handler</a> from sc7a20_driver.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[a]">sc7a20_wakeup_int2_callback</a> from sc7a20_driver.o(.text) referenced from sc7a20_driver.o(.text)
 <LI><a href="#[140]">sedentary_remind_window_act</a> from sedentary_remind_window.o(.text) referenced from sedentary_remind_window.o(.constdata)
 <LI><a href="#[13e]">sedentary_remind_window_display</a> from sedentary_remind_window.o(.text) referenced from sedentary_remind_window.o(.constdata)
 <LI><a href="#[13d]">sedentary_remind_window_exit</a> from sedentary_remind_window.o(.text) referenced from sedentary_remind_window.o(.constdata)
 <LI><a href="#[13f]">sedentary_remind_window_go_home</a> from sedentary_remind_window.o(.text) referenced from sedentary_remind_window.o(.constdata)
 <LI><a href="#[13c]">sedentary_remind_window_init</a> from sedentary_remind_window.o(.text) referenced from sedentary_remind_window.o(.constdata)
 <LI><a href="#[201]">send_cmd_timer_handler</a> from data_transfer.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[5f]">set_alarm_info_handler</a> from data_transfer_package.o(.text) referenced from data_transfer_package.o(.constdata)
 <LI><a href="#[61]">set_dev_sync_handler</a> from data_transfer_package.o(.text) referenced from data_transfer_package.o(.constdata)
 <LI><a href="#[60]">set_sensor_data_handler</a> from data_transfer_package.o(.text) referenced 10 times from data_transfer_package.o(.constdata)
 <LI><a href="#[62]">set_watchface_data_handler</a> from data_transfer_package.o(.text) referenced from data_transfer_package.o(.constdata)
 <LI><a href="#[1d1]">shutdown_adv_stop_timer_handler</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.data)
 <LI><a href="#[10]">shutdown_chg_interrupt_callback</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.text)
 <LI><a href="#[f]">shutdown_key1_interrupt_callback</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.text)
 <LI><a href="#[1d0]">shutdown_key1_timer_handler</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.data)
 <LI><a href="#[11]">shutdown_mode_thread_init</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.text)
 <LI><a href="#[1cf]">shutdown_usb_charge_timer_handler</a> from shutdown_mode.o(.text) referenced from shutdown_mode.o(.data)
 <LI><a href="#[c8]">shutdown_window_display</a> from shutdown_window.o(.text) referenced from shutdown_window.o(.constdata)
 <LI><a href="#[c7]">shutdown_window_exit</a> from shutdown_window.o(.text) referenced from shutdown_window.o(.constdata)
 <LI><a href="#[c6]">shutdown_window_init</a> from shutdown_window.o(.text) referenced from shutdown_window.o(.constdata)
 <LI><a href="#[c9]">shutdown_window_touch_click</a> from shutdown_window.o(.text) referenced from shutdown_window.o(.constdata)
 <LI><a href="#[25]">simp_ble_service_attr_read_cb</a> from simple_ble_service.o(.text) referenced from simple_ble_service.o(.constdata)
 <LI><a href="#[26]">simp_ble_service_attr_write_cb</a> from simple_ble_service.o(.text) referenced from simple_ble_service.o(.constdata)
 <LI><a href="#[27]">simp_ble_service_cccd_update_cb</a> from simple_ble_service.o(.text) referenced from simple_ble_service.o(.constdata)
 <LI><a href="#[387]">simple_write_post_callback</a> from simple_ble_service.o(.text) referenced from simple_ble_service.o(.text)
 <LI><a href="#[217]">sleep_acc_set_timer_handler</a> from arithmetic_common.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[218]">sleep_data_handler_timer_handler</a> from arithmetic_sleep.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[21b]">sleep_date_check_timer_handler</a> from arithmetic_sleep.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[152]">sleep_window_display</a> from sleep_window.o(.text) referenced from sleep_window.o(.constdata)
 <LI><a href="#[151]">sleep_window_exit</a> from sleep_window.o(.text) referenced from sleep_window.o(.constdata)
 <LI><a href="#[150]">sleep_window_init</a> from sleep_window.o(.text) referenced from sleep_window.o(.constdata)
 <LI><a href="#[153]">sleep_window_touch_move</a> from sleep_window.o(.text) referenced from sleep_window.o(.constdata)
 <LI><a href="#[20b]">software_reset_timer_handler</a> from data_manager.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[e0]">sport_info_data_window_act</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[df]">sport_info_data_window_display</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[de]">sport_info_data_window_exit</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[dd]">sport_info_data_window_init</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[e1]">sport_info_data_window_key1_short</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[e2]">sport_info_data_window_touch_click</a> from sport_info_data_window.o(.text) referenced from sport_info_data_window.o(.constdata)
 <LI><a href="#[e5]">sport_info_window_display</a> from sport_info_window.o(.text) referenced from sport_info_window.o(.constdata)
 <LI><a href="#[e4]">sport_info_window_exit</a> from sport_info_window.o(.text) referenced from sport_info_window.o(.constdata)
 <LI><a href="#[e3]">sport_info_window_init</a> from sport_info_window.o(.text) referenced from sport_info_window.o(.constdata)
 <LI><a href="#[e6]">sport_info_window_touch_click</a> from sport_info_window.o(.text) referenced from sport_info_window.o(.constdata)
 <LI><a href="#[e7]">sport_info_window_touch_move</a> from sport_info_window.o(.text) referenced from sport_info_window.o(.constdata)
 <LI><a href="#[156]">steps_window_display</a> from steps_window.o(.text) referenced from steps_window.o(.constdata)
 <LI><a href="#[155]">steps_window_exit</a> from steps_window.o(.text) referenced from steps_window.o(.constdata)
 <LI><a href="#[154]">steps_window_init</a> from steps_window.o(.text) referenced from steps_window.o(.constdata)
 <LI><a href="#[157]">steps_window_touch_move</a> from steps_window.o(.text) referenced from steps_window.o(.constdata)
 <LI><a href="#[ce]">stopwatch_window_act</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[cc]">stopwatch_window_display</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[cb]">stopwatch_window_exit</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[ca]">stopwatch_window_init</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[cf]">stopwatch_window_timeout</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[cd]">stopwatch_window_touch_click</a> from stopwatch_window.o(.text) referenced from stopwatch_window.o(.constdata)
 <LI><a href="#[185]">sys_delay</a> from sys_init.o(.text) referenced from ui_lib.o(.constdata)
 <LI><a href="#[1c0]">sys_timer_function</a> from sys_timer_thread.o(.text) referenced 7 times from rtc.o(.data)
 <LI><a href="#[143]">target_window_display</a> from target_window.o(.text) referenced from target_window.o(.constdata)
 <LI><a href="#[142]">target_window_exit</a> from target_window.o(.text) referenced from target_window.o(.constdata)
 <LI><a href="#[141]">target_window_init</a> from target_window.o(.text) referenced from target_window.o(.constdata)
 <LI><a href="#[144]">target_window_timeout</a> from target_window.o(.text) referenced from target_window.o(.constdata)
 <LI><a href="#[14a]">test_window_act</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[148]">test_window_app_test</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[147]">test_window_display</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[146]">test_window_exit</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[145]">test_window_init</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[149]">test_window_key_short</a> from test_window.o(.text) referenced from test_window.o(.constdata)
 <LI><a href="#[203]">wait_ack_timeout_timer_handler</a> from data_transfer.o(.text) referenced from mix_timer_thread.o(.ram.sharecacheram.text)
 <LI><a href="#[1c7]">watchdog_timer_handler</a> from wdt.o(.text) referenced 4 times from low_power_mode.o(.data)
 <LI><a href="#[d2]">watchface_select_window_display</a> from watchface_select_window.o(.text) referenced from watchface_select_window.o(.constdata)
 <LI><a href="#[d1]">watchface_select_window_exit</a> from watchface_select_window.o(.text) referenced from watchface_select_window.o(.constdata)
 <LI><a href="#[d0]">watchface_select_window_init</a> from watchface_select_window.o(.text) referenced from watchface_select_window.o(.constdata)
 <LI><a href="#[d3]">watchface_select_window_touch_click</a> from watchface_select_window.o(.text) referenced from watchface_select_window.o(.constdata)
 <LI><a href="#[d4]">watchface_select_window_touch_move</a> from watchface_select_window.o(.text) referenced from watchface_select_window.o(.constdata)
 <LI><a href="#[15a]">weather_window_display</a> from weather_window.o(.text) referenced from weather_window.o(.constdata)
 <LI><a href="#[159]">weather_window_exit</a> from weather_window.o(.text) referenced from weather_window.o(.constdata)
 <LI><a href="#[158]">weather_window_init</a> from weather_window.o(.text) referenced from weather_window.o(.constdata)
 <LI><a href="#[15b]">weather_window_touch_move</a> from weather_window.o(.text) referenced from weather_window.o(.constdata)
 <LI><a href="#[1d3]">window_act_timer_handler</a> from window_manager.o(.text) referenced 6 times from window_timer_thread.o(.data)
 <LI><a href="#[1f9]">window_event_BP_cmd</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f8]">window_event_O2_cmd</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1fb]">window_event_OTA</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e2]">window_event_act</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e9]">window_event_alarm</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f1]">window_event_alarm_heart</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e6]">window_event_app_language</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f5]">window_event_app_sport</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1fa]">window_event_app_test</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1eb]">window_event_battery_charger</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e5]">window_event_bt_pair</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e8]">window_event_call</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f4]">window_event_drink_alarm</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f3]">window_event_find_device</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e4]">window_event_force_timeout</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1fd]">window_event_go_home</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1ef]">window_event_hide</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e1]">window_event_key1_long</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e0]">window_event_key1_short</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1ec]">window_event_light_on</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1ee]">window_event_low_power_alarm</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e7]">window_event_message</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f2]">window_event_photograph</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1ed]">window_event_reboot</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1df]">window_event_refresh</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1ea]">window_event_sedentary_reminder</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1de]">window_event_start_display</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1dd]">window_event_start_exit</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1dc]">window_event_start_init</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f0]">window_event_target_finish</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1e3]">window_event_timeout</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1d2]">window_event_timer_handler</a> from window_manager.o(.text) referenced from window_timer_thread.o(.data)
 <LI><a href="#[1f7]">window_event_touch_click</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1f6]">window_event_touch_move</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1fc]">window_event_woman_alarm</a> from window_manager.o(.text) referenced from window_manager.o(.ram.sharecacheram.text)
 <LI><a href="#[1d5]">window_go_home_timer_handler</a> from window_manager.o(.text) referenced from window_timer_thread.o(.data)
 <LI><a href="#[1d7]">window_move_scroll_timer_handler</a> from window_common.o(.text) referenced from window_timer_thread.o(.data)
 <LI><a href="#[514]">window_thread_init</a> from window_timer_thread.o(.text) referenced from window_timer_thread.o(.text)
 <LI><a href="#[1d4]">window_timeout_timer_handler</a> from window_manager.o(.text) referenced from window_timer_thread.o(.data)
 <LI><a href="#[170]">woman_alarm_window_act</a> from woman_alarm_window.o(.text) referenced from woman_alarm_window.o(.constdata)
 <LI><a href="#[16f]">woman_alarm_window_display</a> from woman_alarm_window.o(.text) referenced from woman_alarm_window.o(.constdata)
 <LI><a href="#[16e]">woman_alarm_window_exit</a> from woman_alarm_window.o(.text) referenced from woman_alarm_window.o(.constdata)
 <LI><a href="#[16d]">woman_alarm_window_init</a> from woman_alarm_window.o(.text) referenced from woman_alarm_window.o(.constdata)
 <LI><a href="#[166]">woman_child_window_display</a> from woman_child_window.o(.text) referenced from woman_child_window.o(.constdata)
 <LI><a href="#[165]">woman_child_window_exit</a> from woman_child_window.o(.text) referenced from woman_child_window.o(.constdata)
 <LI><a href="#[164]">woman_child_window_init</a> from woman_child_window.o(.text) referenced from woman_child_window.o(.constdata)
 <LI><a href="#[167]">woman_child_window_touch_move</a> from woman_child_window.o(.text) referenced from woman_child_window.o(.constdata)
 <LI><a href="#[16a]">woman_window_display</a> from woman_window.o(.text) referenced from woman_window.o(.constdata)
 <LI><a href="#[169]">woman_window_exit</a> from woman_window.o(.text) referenced from woman_window.o(.constdata)
 <LI><a href="#[168]">woman_window_init</a> from woman_window.o(.text) referenced from woman_window.o(.constdata)
 <LI><a href="#[16b]">woman_window_touch_click</a> from woman_window.o(.text) referenced from woman_window.o(.constdata)
 <LI><a href="#[16c]">woman_window_touch_move</a> from woman_window.o(.text) referenced from woman_window.o(.constdata)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[266]"></a>RamVectorTableInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
</UL>

<P><STRONG><a name="[274]"></a>RamVectorTableUpdate</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
</UL>

<P><STRONG><a name="[25b]"></a>SystemCall</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
</UL>

<P><STRONG><a name="[249]"></a>btxfcs</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
</UL>

<P><STRONG><a name="[24a]"></a>platform_random</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
</UL>

<P><STRONG><a name="[4]"></a>log_direct</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_init
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_long_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(.text)
</UL>
<P><STRONG><a name="[24e]"></a>log_buffer</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_driver_init
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertise_param_init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_gap_callback
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_mtu_info_evt
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_handle_msg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notification_information
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_send_msg_to_app
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_data_analysis
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_start_discovery
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_disconnect_cb
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_result_cb
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_read_result_cb
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_discover_result_cb
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_discover_state_cb
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_remote_cmd
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_update
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_attribute
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_read_by_handle
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_remote_cmd_cccd
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_entity_update_cccd
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_add_client
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_ctrl
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_read_result_handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_add_client
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_perform_notification_action
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_notification_attr
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_data_source_notify
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_notification_source_notify
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_hdl_cache
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_hdl_cache
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_start_discovery
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_disc_cb
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_write_result_cb
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_discover_result_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_discover_state_cb
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_add_service
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_attr_write_cb
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_attr_read_cb
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_reset_reason
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_overflow_timer_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_thread_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_write_authen_payload_timeout
<LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_dev_bond_info
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_rsp
</UL>

<P><STRONG><a name="[3cf]"></a>trace_bdaddr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
</UL>

<P><STRONG><a name="[254]"></a>trace_string</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
</UL>

<P><STRONG><a name="[259]"></a>log_module_trace_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[268]"></a>dlps_hw_control_cb_reg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IORegister
</UL>

<P><STRONG><a name="[3ec]"></a>lps_mode_set</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
</UL>

<P><STRONG><a name="[27e]"></a>flash_lock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read_locked
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_split_read_locked
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_dma_read_locked
</UL>

<P><STRONG><a name="[281]"></a>flash_unlock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_split_read_locked
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GDMA_HANDLER
</UL>

<P><STRONG><a name="[280]"></a>flash_split_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_split_read_locked
</UL>

<P><STRONG><a name="[43c]"></a>flash_erase_locked</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>

<P><STRONG><a name="[24f]"></a>flash_ioctl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_try_high_speed
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_reset_reason
</UL>

<P><STRONG><a name="[43a]"></a>flash_write_locked</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
</UL>

<P><STRONG><a name="[43b]"></a>flash_read_locked</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
</UL>

<P><STRONG><a name="[256]"></a>check_hci_mode_flag</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[277]"></a>NVIC_Init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[2bc]"></a>Pinmux_Config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_uart_init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
</UL>

<P><STRONG><a name="[2ba]"></a>Pinmux_Deinit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
</UL>

<P><STRONG><a name="[2bb]"></a>Pad_Config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_uart_init
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_exit_dlps
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enter_dlps
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_exit_dlps
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_enter_dlps
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_exit_dlps
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_enter_dlps
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_exit_dlps
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_enter_dlps
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_exit_dlps
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_enter_dlps
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_8080_exit_dlps
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_8080_enter_dlps
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_reset
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_exit_dlps
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_enter_dlps
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
<LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
<LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_EnterDlpsCb
</UL>

<P><STRONG><a name="[2f9]"></a>System_WakeUpPinEnable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_enter_dlps
</UL>

<P><STRONG><a name="[306]"></a>System_WakeUpPinDisable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[304]"></a>System_WakeUpInterruptValue</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[307]"></a>Pad_ClearAllWakeupINT</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[305]"></a>Pad_ClearWakeupINTPendingBit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
</UL>

<P><STRONG><a name="[2af]"></a>RTC_WriteReg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearOverFlowINT
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearCompINT
</UL>

<P><STRONG><a name="[2b0]"></a>RTC_DeInit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[2b1]"></a>RTC_SetPrescaler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[2a3]"></a>RTC_SetComp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[2b5]"></a>RTC_RunCmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[2b2]"></a>RTC_MaskINTConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[2b3]"></a>RTC_CompINTConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[291]"></a>RTC_GetINTStatus</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>

<P><STRONG><a name="[2b4]"></a>RTC_SystemWakeupConfig</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>

<P><STRONG><a name="[362]"></a>WDG_ClockEnable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[363]"></a>WDG_Config</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[364]"></a>WDG_Enable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
</UL>

<P><STRONG><a name="[257]"></a>WDG_Disable</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[361]"></a>WDG_Restart</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchdog_timer_handler
</UL>

<P><STRONG><a name="[5bf]"></a>btif_send_cmd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_read_remote_version_req
</UL>

<P><STRONG><a name="[58a]"></a>btif_vendor_cmd_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_more_precise_32k_option
<LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_write_authen_payload_timeout
<LI><a href="#[593]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_shift_frequency_band
<LI><a href="#[592]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_get_ce_info_addr
<LI><a href="#[591]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_record_ce_info
<LI><a href="#[590]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_measure_master_clk_freq_mode
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
<LI><a href="#[58d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_modify_bt_le_fw_policy
<LI><a href="#[58c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_vendor_cmd_req
<LI><a href="#[58b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_trigger_internal_32k_calibration
<LI><a href="#[589]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_lps_bootup_active_time
</UL>

<P><STRONG><a name="[5a3]"></a>btif_just_work_req_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_just_work_confirm
</UL>

<P><STRONG><a name="[59f]"></a>btif_sw_reset_req</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sw_reset_req
</UL>

<P><STRONG><a name="[5aa]"></a>btif_le_disconn_cfm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_ind
</UL>

<P><STRONG><a name="[5a5]"></a>btif_le_gen_rand_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
</UL>

<P><STRONG><a name="[25e]"></a>os_mem_alloc_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[260]"></a>os_mem_zalloc_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_add_client
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_add_client
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calloc
</UL>

<P><STRONG><a name="[262]"></a>os_mem_free</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;realloc
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>

<P><STRONG><a name="[3bd]"></a>os_msg_queue_create_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
</UL>

<P><STRONG><a name="[3ae]"></a>os_msg_send_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_send_msg_to_app
</UL>

<P><STRONG><a name="[3ba]"></a>os_msg_recv_intern</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_handle_msg
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[401]"></a>os_delay</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;software_reset_timer_handler
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_factory_timer_handler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_task_function
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
</UL>

<P><STRONG><a name="[258]"></a>os_sched_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[2e6]"></a>os_lock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
</UL>

<P><STRONG><a name="[2e7]"></a>os_unlock</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
</UL>

<P><STRONG><a name="[3f6]"></a>os_sem_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>

<P><STRONG><a name="[3fa]"></a>os_sem_take</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_function
</UL>

<P><STRONG><a name="[3fe]"></a>os_sem_give</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>

<P><STRONG><a name="[30e]"></a>os_mutex_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_handler
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_CRITICAL
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[310]"></a>os_mutex_take</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_handler
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_CRITICAL
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mutex_take
</UL>

<P><STRONG><a name="[312]"></a>os_mutex_give</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_handler
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXIT_CRITICAL
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mutex_give
</UL>

<P><STRONG><a name="[3c3]"></a>os_task_create</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>

<P><STRONG><a name="[289]"></a>btaon_fast_read_safe</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Enter
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Exit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogCircuitConfig
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[28a]"></a>btaon_fast_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Enter
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Exit
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_AnalogCircuitConfig
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
</UL>

<P><STRONG><a name="[59c]"></a>gap_register_extend_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
</UL>

<P><STRONG><a name="[3bf]"></a>gap_start_bt_stack</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[3c0]"></a>gap_handle_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[3e2]"></a>gap_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[3dd]"></a>gap_get_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dev_mac_addr
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertise_param_init
</UL>

<P><STRONG><a name="[5bb]"></a>le_bond_delete_by_idx</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[3d8]"></a>le_bond_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3e5]"></a>le_bond_pair</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_pair
</UL>

<P><STRONG><a name="[3d7]"></a>le_bond_passkey_input_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d9]"></a>le_bond_oob_input_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d4]"></a>le_bond_get_display_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d6]"></a>le_bond_user_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d5]"></a>le_bond_passkey_display_confirm</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3ee]"></a>le_gap_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[3e3]"></a>le_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[3e0]"></a>le_set_gap_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[5a0]"></a>gap_send_dev_state</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_sw_reset_rsp
</UL>

<P><STRONG><a name="[5a9]"></a>le_link_release</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>

<P><STRONG><a name="[5a7]"></a>le_link_find_by_link_id</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_read_remote_version_rsp
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>

<P><STRONG><a name="[5c1]"></a>le_link_check_conn_id_internal</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_write_authen_payload_timeout
<LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_read_remote_version
</UL>

<P><STRONG><a name="[3a4]"></a>le_get_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ams_cmd_timer_handler
</UL>

<P><STRONG><a name="[59e]"></a>le_get_active_link_num</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_sw_reset_req
</UL>

<P><STRONG><a name="[3ce]"></a>le_get_conn_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
</UL>

<P><STRONG><a name="[3e6]"></a>le_disconnect</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_disconnect
</UL>

<P><STRONG><a name="[3c5]"></a>le_update_conn_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_connect_param
</UL>

<P><STRONG><a name="[3ea]"></a>client_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[39a]"></a>client_register_spec_client_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_add_client
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_add_client
</UL>

<P><STRONG><a name="[38d]"></a>client_by_uuid128_srv_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_start_discovery
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_start_discovery
</UL>

<P><STRONG><a name="[397]"></a>client_all_char_discovery</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_discover_state_cb
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_discover_state_cb
</UL>

<P><STRONG><a name="[3ac]"></a>client_attr_read</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_read_by_handle
</UL>

<P><STRONG><a name="[391]"></a>client_attr_write</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_remote_cmd
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_update
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_attribute
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_remote_cmd_cccd
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_entity_update_cccd
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_perform_notification_action
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_notification_attr
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_data_source_notify
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_notification_source_notify
</UL>

<P><STRONG><a name="[598]"></a>client_handle_btif_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[3e8]"></a>server_init</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[3e9]"></a>server_register_app_cb</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[38b]"></a>server_add_service</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_add_service
</UL>

<P><STRONG><a name="[389]"></a>server_send_data</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_send_v3_notify
</UL>

<P><STRONG><a name="[5ac]"></a>le_find_key_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
<LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
</UL>

<P><STRONG><a name="[5b9]"></a>le_allocate_key_entry</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5a2]"></a>le_get_key</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_sec_level
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
</UL>

<P><STRONG><a name="[5ba]"></a>le_get_low_priority_bond</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5b8]"></a>le_find_entry_by_aes</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5bd]"></a>bond_priority_queue_add</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5bc]"></a>imp_flash_save</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5ae]"></a>imp_flash_load</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_dev_bond_info
</UL>

<P><STRONG><a name="[5b0]"></a>flash_load_le_remote_bd</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b1]"></a>flash_load_le_local_ltk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b2]"></a>flash_load_le_remote_ltk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b3]"></a>flash_load_le_remote_irk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b4]"></a>flash_load_le_local_csrk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b5]"></a>flash_load_le_remote_csrk</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5b6]"></a>flash_read_le_cccd_length</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[3e1]"></a>le_adv_set_param</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[3cd]"></a>le_adv_start</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
</UL>

<P><STRONG><a name="[357]"></a>le_adv_stop</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_adv_stop_timer_handler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adv_stop_timer_handler
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adv_stop_timer_handler
</UL>

<P><STRONG><a name="[5a8]"></a>gap_send_conn_state_msg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>

<P><STRONG><a name="[253]"></a>setlocale</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[398]"></a>memcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_current_scenario_index
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_discover_result_cb
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_discover_result_cb
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_woman_stage_info_from_app
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_watch_setting_from_app
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_target_alarm_from_app
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_heart_auto_switch_from_app
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_hand_rise_switch_from_app
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_message_alarm_from_app
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_alarm_from_app
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_drink_alarm_from_app
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_unit_setting_from_app
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_pair_finish_from_app
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_message_switch_from_app
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_forget_disturb_from_app
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_sitting_remind_from_app
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_target_from_app
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_alarmInfo_from_app
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_weather_from_app
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_timeInfo_from_app
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_language_setting_from_app
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_user_info
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_item_from_flash
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
<LI><a href="#[5a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_check_privacy_bond
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
</UL>

<P><STRONG><a name="[395]"></a>strlen</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len_
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GB2312_HZ_DispStringAt
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[246]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_data
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_data_analysis
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_set
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_read_result_handler
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_app_attr
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_notification_attr
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_hdl_cache
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_hdl_cache
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_woman_stage_info_from_app
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_watch_setting_from_app
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_forget_disturb_from_app
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_target_from_app
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_alarmInfo_from_app
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_weather_from_app
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_receive_data_handler
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mix_package
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_package
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ic_euid
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_event
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_get
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_once
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
</UL>

<P><STRONG><a name="[265]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_info
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dev_sync_handler
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_event
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete_repeat
</UL>

<P><STRONG><a name="[5d8]"></a>__aeabi_memset</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
</UL>

<P><STRONG><a name="[247]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_start_discovery
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_disconnect_cb
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_set
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_clear
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_read_result_handler
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_start_discovery
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_disc_cb
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_24h_data
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_items
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
<LI><a href="#[5ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_dev_bond_info
<LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_part_area_set
<LI><a href="#[5e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_black_once
</UL>

<P><STRONG><a name="[29b]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ancs_info
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ack_timeout_timer_handler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_ble_send_timer_handler
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_file_check
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_start
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic_stop
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic_stop
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arithmetic_24H_data_timer_handler
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_smooth_data
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_finish
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_display
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_display
<LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_init
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
<LI><a href="#[569]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_info_clear
<LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_data
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_26
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
<LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime_r
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[244]"></a>exit</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[640]"></a>strcmp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, ROM.lib(ABSOLUTE))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[1ab]"></a>GPIO_Group3_Handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Group3_Handler &rArr; GPIO23_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO23_Handler
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO19_Handler
<LI><a href="#[65a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO7_Handler
<LI><a href="#[659]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO3_Handler
<LI><a href="#[65e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO31_Handler
<LI><a href="#[65d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO27_Handler
<LI><a href="#[65c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO15_Handler
<LI><a href="#[65b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO11_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1ac]"></a>GPIO_Group2_Handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Group2_Handler &rArr; GPIO18_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO18_Handler
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_Handler
<LI><a href="#[660]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO6_Handler
<LI><a href="#[664]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO30_Handler
<LI><a href="#[65f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO2_Handler
<LI><a href="#[663]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO26_Handler
<LI><a href="#[662]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO22_Handler
<LI><a href="#[661]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO14_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1ae]"></a>GPIO_Group1_Handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Group1_Handler &rArr; GPIO21_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO21_Handler
<LI><a href="#[666]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO9_Handler
<LI><a href="#[66a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO29_Handler
<LI><a href="#[669]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO25_Handler
<LI><a href="#[665]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO1_Handler
<LI><a href="#[668]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO17_Handler
<LI><a href="#[667]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO13_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1af]"></a>GPIO_Group0_Handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, system_rtl8762c.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_Group0_Handler &rArr; GPIO16_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO16_Handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[66c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO8_Handler
<LI><a href="#[66f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO28_Handler
<LI><a href="#[66e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO24_Handler
<LI><a href="#[66d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO12_Handler
<LI><a href="#[66b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO0_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[6]"></a>DLPS_IO_EnterDlpsCb</STRONG> (Thumb, 318 bytes, Stack size 24 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DLPS_IO_EnterDlpsCb &rArr; ADC_DLPS_Enter
</UL>
<BR>[Calls]<UL><LI><a href="#[672]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Enter
<LI><a href="#[671]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_DLPS_Enter
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtl876x_io_dlps.o(.text)
</UL>
<P><STRONG><a name="[7]"></a>DLPS_IO_ExitDlpsCb</STRONG> (Thumb, 296 bytes, Stack size 32 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DLPS_IO_ExitDlpsCb &rArr; GPIO_DLPS_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[673]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_DLPS_Exit
<LI><a href="#[674]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DLPS_Exit
<LI><a href="#[670]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DLPS_Exit
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtl876x_io_dlps.o(.text)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_GDMA_HANDLER</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, flash_hs_read.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = FLASH_GDMA_HANDLER &rArr; GDMA_INTConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_seq_trans_enable
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_ClearINTPendingBit
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_INTConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> flash_hs_read.o(.text)
</UL>
<P><STRONG><a name="[188]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_rtl8762c.o(RESET))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[223]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;common_main
</UL>

<P><STRONG><a name="[225]"></a>_printf_f</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_f.o(.ARM.Collect$$_printf_percent$$00000003))
<BR><BR>[Stack]<UL><LI>Max Depth = 324 + Unknown Stack Size
<LI>Call Chain = _printf_f &rArr; _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[5fe]"></a>_printf_percent</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>

<P><STRONG><a name="[227]"></a>_printf_i</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_i.o(.ARM.Collect$$_printf_percent$$00000008))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_i &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[229]"></a>_printf_d</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_d.o(.ARM.Collect$$_printf_percent$$00000009))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_d &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[22a]"></a>_printf_u</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = _printf_u &rArr; _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[22b]"></a>_printf_o</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_o &rArr; _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
</UL>

<P><STRONG><a name="[22d]"></a>_printf_x</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = _printf_x &rArr; _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
</UL>

<P><STRONG><a name="[675]"></a>_printf_l</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_l.o(.ARM.Collect$$_printf_percent$$00000012))

<P><STRONG><a name="[22f]"></a>_printf_c</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_c.o(.ARM.Collect$$_printf_percent$$00000013))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_c &rArr; _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[231]"></a>_printf_s</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_s.o(.ARM.Collect$$_printf_percent$$00000014))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = _printf_s &rArr; _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
</UL>

<P><STRONG><a name="[233]"></a>_printf_lc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = _printf_lc &rArr; _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[676]"></a>_printf_percent_end</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017))

<P><STRONG><a name="[241]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[235]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[677]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[678]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[237]"></a>__rt_lib_init_rand_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_rand_2 &rArr; _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[679]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[239]"></a>__rt_lib_init_lc_common</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))
<BR><BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>

<P><STRONG><a name="[67a]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[67b]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[23b]"></a>__rt_lib_init_lc_ctype_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000012))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_ctype_2 &rArr; _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_ctype
</UL>

<P><STRONG><a name="[67c]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[67d]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[23c]"></a>__rt_lib_init_lc_numeric_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000016))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_lc_numeric_2 &rArr; _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_get_lc_numeric
</UL>

<P><STRONG><a name="[67e]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[67f]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[680]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[681]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[682]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[683]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[684]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[685]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[686]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[687]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[688]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[689]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[68a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[224]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[68b]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[23e]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[240]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[68c]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[242]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 300 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; sys_init &rArr; TP_init &rArr; ctp_hynitron_update &rArr; cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[68d]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[245]"></a>ram_init</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ram_init
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[248]"></a>random_seed_init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = random_seed_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;platform_random
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btxfcs
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[24d]"></a>print_reset_reason</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = print_reset_reason
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ioctl
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[250]"></a>pre_main</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = pre_main &rArr; AppUpdateVectorTable
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;load_overlay
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;print_reset_reason
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ram_init
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppUpdateVectorTable
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setlocale
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.app.flash.text)
</UL>
<P><STRONG><a name="[2]"></a>SystemInit</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, system_rtl8762c.o(.app.flash.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_hci_mode_flag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(RESET)
</UL>
<P><STRONG><a name="[24c]"></a>rand</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rand.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
<LI><a href="#[5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gen_rand_addr
</UL>

<P><STRONG><a name="[1a3]"></a>ADC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[194]"></a>BTMAC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18c]"></a>BusFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18f]"></a>DebugMon_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[5]"></a>Default_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.text)
</UL>
<P><STRONG><a name="[1a5]"></a>GDMA0_Channel0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a6]"></a>GDMA0_Channel1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a8]"></a>GDMA0_Channel3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a9]"></a>GDMA0_Channel4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1aa]"></a>GDMA0_Channel5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[66b]"></a>GPIO0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[65b]"></a>GPIO11_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[66d]"></a>GPIO12_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[667]"></a>GPIO13_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[661]"></a>GPIO14_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[65c]"></a>GPIO15_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[668]"></a>GPIO17_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[665]"></a>GPIO1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[662]"></a>GPIO22_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[66e]"></a>GPIO24_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[669]"></a>GPIO25_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[663]"></a>GPIO26_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[65d]"></a>GPIO27_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[66f]"></a>GPIO28_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[66a]"></a>GPIO29_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[65f]"></a>GPIO2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[664]"></a>GPIO30_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[65e]"></a>GPIO31_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[659]"></a>GPIO3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[19a]"></a>GPIO4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[19b]"></a>GPIO5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[660]"></a>GPIO6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[65a]"></a>GPIO7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[66c]"></a>GPIO8_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[666]"></a>GPIO9_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[18a]"></a>HardFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a1]"></a>I2C0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a2]"></a>I2C1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[198]"></a>I2S0_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[197]"></a>I2S0_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1bc]"></a>I2S1_RX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1bb]"></a>I2S1_TX_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1ad]"></a>IR_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b7]"></a>Keyscan_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1bd]"></a>LCD_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b9]"></a>LPCOMP_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18b]"></a>MemManage_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[189]"></a>NMI_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1ba]"></a>PTA_Mailbox_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[190]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a4]"></a>Peripheral_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b6]"></a>Qdecode_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[19f]"></a>SPI0_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1a0]"></a>SPI1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b8]"></a>SPI2W_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b5]"></a>SPI_Flash_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18e]"></a>SVC_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[191]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[196]"></a>Timer2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[195]"></a>Timer3_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[199]"></a>Timer4_7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b1]"></a>Timer4_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b2]"></a>Timer5_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b3]"></a>Timer6_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b4]"></a>Timer7_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[19c]"></a>UART1_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[1b0]"></a>UART2_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[18d]"></a>UsageFault_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[193]"></a>WDG_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[23f]"></a>__user_setup_stackheap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[3]"></a>common_main</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, system_rtl8762c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = common_main
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Disable
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_module_trace_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.app.flash.text)
</UL>
<P><STRONG><a name="[25a]"></a>WDG_SystemReset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCall
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;software_reset_timer_handler
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_factory_timer_handler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
</UL>

<P><STRONG><a name="[25c]"></a>flash_try_high_speed</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, system_rtl8762c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = flash_try_high_speed
</UL>
<BR>[Calls]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_ioctl
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[25d]"></a>malloc</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_alloc_intern
</UL>

<P><STRONG><a name="[25f]"></a>calloc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_zalloc_intern
</UL>

<P><STRONG><a name="[261]"></a>realloc</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_free
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_alloc_intern
</UL>

<P><STRONG><a name="[263]"></a>free</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_free
</UL>

<P><STRONG><a name="[23]"></a>app_cb0_wdg_reset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>app_cb5_dfu_status</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> system_rtl8762c.o(.constdata)
</UL>
<P><STRONG><a name="[68e]"></a>get_cpu_clock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, system_rtl8762c.o(.text), UNUSED)

<P><STRONG><a name="[264]"></a>get_ic_euid</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, system_rtl8762c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[68f]"></a>get_ic_type</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, system_rtl8762c.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>DLPS_IORegister</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DLPS_IORegister
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dlps_hw_control_cb_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
</UL>

<P><STRONG><a name="[269]"></a>GPIO_DeInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[2bf]"></a>GPIO_Init</STRONG> (Thumb, 190 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
</UL>

<P><STRONG><a name="[2bd]"></a>GPIO_StructInit</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
</UL>

<P><STRONG><a name="[2f3]"></a>GPIO_INTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
</UL>

<P><STRONG><a name="[2f7]"></a>GPIO_ClearINTPendingBit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>

<P><STRONG><a name="[2f2]"></a>GPIO_MaskINTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
</UL>

<P><STRONG><a name="[2be]"></a>GPIO_GetPin</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_timer_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_usb_charge_timer_handler
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_long_timer_handler
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_charger
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_enter_dlps
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_exit_dlps
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_enter_dlps
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_deinit
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_get_status
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_power_off
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
</UL>

<P><STRONG><a name="[690]"></a>GPIO_GetNum</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[691]"></a>GPIO_DBClkCmd</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtl876x_gpio.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>RCC_PeriphClockCmd</STRONG> (Thumb, 292 bytes, Stack size 20 bytes, rtl876x_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_DeInit
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_DeInit
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DeInit
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DeInit
</UL>

<P><STRONG><a name="[692]"></a>RCC_SPIClkDivConfig</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[693]"></a>RCC_I2CClkDivConfig</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[694]"></a>RCC_UARTClkDivConfig</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[695]"></a>RCC_PeriClockConfig</STRONG> (Thumb, 106 bytes, Stack size 12 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[696]"></a>RCC_PeriFunctionConfig</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, rtl876x_rcc.o(.text), UNUSED)

<P><STRONG><a name="[26b]"></a>LCD_DeInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[2dc]"></a>LCD_PinGroupConfig</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[2de]"></a>LCD_Init</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[2dd]"></a>LCD_StructInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[2ce]"></a>LCD_Cmd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
</UL>

<P><STRONG><a name="[26e]"></a>LCD_SendCommand</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write
</UL>

<P><STRONG><a name="[26f]"></a>LCD_SendData</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write
</UL>

<P><STRONG><a name="[271]"></a>LCD_ReceiveData</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, rtl876x_lcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read
</UL>

<P><STRONG><a name="[26c]"></a>LCD_Write</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rtl876x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendData
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendCommand
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCS
</UL>

<P><STRONG><a name="[270]"></a>LCD_Read</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, rtl876x_lcd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_ReceiveData
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendCommand
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCS
</UL>

<P><STRONG><a name="[2d0]"></a>LCD_SetCmdSequence</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, rtl876x_lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = LCD_SetCmdSequence
</UL>
<BR>[Called By]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
</UL>

<P><STRONG><a name="[697]"></a>LCD_MaskINTConfig</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[698]"></a>LCD_GetINTStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[699]"></a>LCD_GetFlagStatus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text), UNUSED)

<P><STRONG><a name="[272]"></a>GDMA_DeInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtl876x_gdma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[276]"></a>GDMA_Init</STRONG> (Thumb, 520 bytes, Stack size 20 bytes, rtl876x_gdma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GDMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
</UL>

<P><STRONG><a name="[275]"></a>GDMA_StructInit</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rtl876x_gdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
</UL>

<P><STRONG><a name="[27a]"></a>GDMA_Cmd</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtl876x_gdma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GDMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_dma_read
</UL>

<P><STRONG><a name="[278]"></a>GDMA_INTConfig</STRONG> (Thumb, 134 bytes, Stack size 12 bytes, rtl876x_gdma.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GDMA_INTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GDMA_HANDLER
</UL>

<P><STRONG><a name="[2d6]"></a>GDMA_ClearINTPendingBit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtl876x_gdma.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA0_Channel2_Handler
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GDMA_HANDLER
</UL>

<P><STRONG><a name="[27c]"></a>flash_seq_trans_enable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, flash_hs_read.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLASH_GDMA_HANDLER
</UL>

<P><STRONG><a name="[273]"></a>flash_dma_init</STRONG> (Thumb, 254 bytes, Stack size 136 bytes, flash_hs_read.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableUpdate
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_INTConfig
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_StructInit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_dma_read
</UL>

<P><STRONG><a name="[279]"></a>flash_auto_dma_read</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, flash_hs_read.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_dma_read_locked
</UL>

<P><STRONG><a name="[27b]"></a>flash_auto_seq_trans_dma_read</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, flash_hs_read.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_dma_init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_seq_trans_enable
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read_locked
</UL>

<P><STRONG><a name="[27d]"></a>flash_auto_dma_read_locked</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, flash_hs_read.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_dma_read
</UL>

<P><STRONG><a name="[27f]"></a>flash_split_read_locked</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, flash_hs_read.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_split_read
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_unlock
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
</UL>

<P><STRONG><a name="[282]"></a>flash_auto_seq_trans_dma_read_locked</STRONG> (Thumb, 42 bytes, Stack size 32 bytes, flash_hs_read.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_lock
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_auto_seq_trans_dma_read
</UL>

<P><STRONG><a name="[283]"></a>I2C_DeInit</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>

<P><STRONG><a name="[30c]"></a>I2C_Init</STRONG> (Thumb, 388 bytes, Stack size 16 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
</UL>

<P><STRONG><a name="[30b]"></a>I2C_StructInit</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
</UL>

<P><STRONG><a name="[30d]"></a>I2C_Cmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
</UL>

<P><STRONG><a name="[285]"></a>I2C_CheckAbortStatus</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RepeatRead
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRead
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWrite
</UL>

<P><STRONG><a name="[284]"></a>I2C_MasterWrite</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_MasterWrite
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckAbortStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
</UL>

<P><STRONG><a name="[286]"></a>I2C_MasterRead</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, rtl876x_i2c.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckAbortStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read
</UL>

<P><STRONG><a name="[287]"></a>I2C_RepeatRead</STRONG> (Thumb, 200 bytes, Stack size 32 bytes, rtl876x_i2c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_RepeatRead
</UL>
<BR>[Calls]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_CheckAbortStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
</UL>

<P><STRONG><a name="[69a]"></a>I2C_INTConfig</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text), UNUSED)

<P><STRONG><a name="[69b]"></a>I2C_ClearINTPendingBit</STRONG> (Thumb, 134 bytes, Stack size 0 bytes, rtl876x_i2c.o(.text), UNUSED)

<P><STRONG><a name="[288]"></a>ADC_Init</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, rtl876x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
</UL>

<P><STRONG><a name="[332]"></a>ADC_StructInit</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, rtl876x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
</UL>

<P><STRONG><a name="[28b]"></a>ADC_DeInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, rtl876x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ADC_DeInit &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
</UL>

<P><STRONG><a name="[333]"></a>ADC_INTConfig</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
</UL>

<P><STRONG><a name="[32a]"></a>ADC_ReadByScheduleIndex</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtl876x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
</UL>

<P><STRONG><a name="[329]"></a>ADC_Cmd</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, rtl876x_adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ADC_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
</UL>

<P><STRONG><a name="[69c]"></a>ADC_SchTableConfig</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, rtl876x_adc.o(.text), UNUSED)

<P><STRONG><a name="[69d]"></a>ADC_GetFifoData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_adc.o(.text), UNUSED)

<P><STRONG><a name="[328]"></a>ADC_BypassCmd</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtl876x_adc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
</UL>

<P><STRONG><a name="[28c]"></a>ADC_GetRes</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rtl876x_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetVoltage
</UL>

<P><STRONG><a name="[28e]"></a>ADC_AnalogCircuitConfig</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rtl876x_adc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
</UL>

<P><STRONG><a name="[69e]"></a>ADC_PowerCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtl876x_adc.o(.text), UNUSED)

<P><STRONG><a name="[69f]"></a>ADC_GetPowerOnStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtl876x_adc.o(.text), UNUSED)

<P><STRONG><a name="[368]"></a>UART_Init</STRONG> (Thumb, 194 bytes, Stack size 8 bytes, rtl876x_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
</UL>

<P><STRONG><a name="[28f]"></a>UART_DeInit</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, rtl876x_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_uninit
</UL>

<P><STRONG><a name="[367]"></a>UART_StructInit</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, rtl876x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
</UL>

<P><STRONG><a name="[36d]"></a>UART_ReceiveData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[6a0]"></a>UART_SendData</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtl876x_uart.o(.text), UNUSED)

<P><STRONG><a name="[369]"></a>UART_INTConfig</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, rtl876x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_uninit
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
</UL>

<P><STRONG><a name="[36c]"></a>UART_GetFlagState</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rtl876x_uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_senddata_continuous
</UL>

<P><STRONG><a name="[6a1]"></a>UART_LoopBackCmd</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, rtl876x_uart.o(.text), UNUSED)

<P><STRONG><a name="[6a2]"></a>UART_ChangeBaudRate</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, rtl876x_uart.o(.text), UNUSED)

<P><STRONG><a name="[6a3]"></a>UART_ChangeParams</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rtl876x_uart.o(.text), UNUSED)

<P><STRONG><a name="[19e]"></a>RTC_Handler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC_Handler &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_GetINTStatus
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearOverFlowINT
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ClearCompINT
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[297]"></a>rtc_sec_get</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = rtc_sec_get
</UL>
<BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
</UL>

<P><STRONG><a name="[295]"></a>rtc_thread_init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_thread_init &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_thread_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rtc.o(.text)
</UL>
<P><STRONG><a name="[296]"></a>rtc_time_get</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = rtc_time_get &rArr; rtc_sec_get
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_get
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[299]"></a>rtc_sec_set</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rtc_sec_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_get
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_set
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>

<P><STRONG><a name="[29a]"></a>rtc_time_set</STRONG> (Thumb, 66 bytes, Stack size 64 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = rtc_time_set &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[29d]"></a>rtc_init</STRONG> (Thumb, 174 bytes, Stack size 48 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rtc_init &rArr; rtc_time_set &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_config
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[2a0]"></a>rtc_timer_thread_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = rtc_timer_thread_init &rArr; sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
</UL>

<P><STRONG><a name="[1be]"></a>rtc_compare0_timer_handler</STRONG> (Thumb, 296 bytes, Stack size 56 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = rtc_compare0_timer_handler &rArr; woman_stage_alarm &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetComp
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_alarm
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_rtc_minute_handle
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_compare
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_new_day_time
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_manager_check
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_compare
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_get
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
<LI> rtc.o(.data)
</UL>
<P><STRONG><a name="[1bf]"></a>rtc_overflow_timer_handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rtc_overflow_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 2]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
<LI> rtc.o(.data)
</UL>
<P><STRONG><a name="[6a4]"></a>rtc_tick_get</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, rtc.o(.text), UNUSED)

<P><STRONG><a name="[3f7]"></a>rtc_ms_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, rtc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread_min
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_thread_alarm_check
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_thread_schedule
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>

<P><STRONG><a name="[2b6]"></a>send_motor_msg</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_motor_msg
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_init
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_act
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_act
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_touch_click
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_shake_device
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_init
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_app_sport_cmd
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_init
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_init
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_init
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_init
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_init
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_message
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_message
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_message
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_act
</UL>

<P><STRONG><a name="[2b9]"></a>motor_table_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = motor_table_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Deinit
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_thread_init
</UL>

<P><STRONG><a name="[2c0]"></a>motor_get_status</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = motor_get_status
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_enter_dlps
</UL>

<P><STRONG><a name="[2c1]"></a>close_motor_msg</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_power_off
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_exit
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_act
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_exit
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_exit
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_exit
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_exit
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_exit
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_exit
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_exit
</UL>

<P><STRONG><a name="[208]"></a>motor_msg_timer_handler</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = motor_msg_timer_handler &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_power_off
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[2c4]"></a>low_power_motor_init</STRONG> (Thumb, 88 bytes, Stack size 32 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = low_power_motor_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[2c5]"></a>motor_enter_dlps</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = motor_enter_dlps &rArr; motor_get_status
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_get_status
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[2c6]"></a>motor_exit_dlps</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = motor_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[2c9]"></a>lcd_8080_enter_dlps</STRONG> (Thumb, 198 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_8080_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[2ca]"></a>lcd_8080_exit_dlps</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_8080_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[501]"></a>oled_display_wait_set</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
</UL>

<P><STRONG><a name="[2d5]"></a>oled_display_wait</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = oled_display_wait &rArr; GDMA_Cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GDMACmd
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SwitchMode
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_ClearINTPendingBit
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Cmd
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear_all
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_area_display
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
</UL>

<P><STRONG><a name="[182]"></a>oled_area_display</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = oled_area_display &rArr; driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[2d7]"></a>oled_clear_all</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = oled_clear_all &rArr; driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
</UL>

<P><STRONG><a name="[2d9]"></a>oled_init</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = oled_init &rArr; external_lcd_init &rArr; oled_clear_all &rArr; driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_buf_switch
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_lcd_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cmd
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_StructInit
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PinGroupConfig
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_thread_init
</UL>

<P><STRONG><a name="[2e0]"></a>oled_open</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = oled_open &rArr; external_lcd_init &rArr; oled_clear_all &rArr; driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_buf_switch
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
</UL>

<P><STRONG><a name="[2e1]"></a>oled_deinit</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = oled_deinit &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_deinit
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_reset
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timeout_timer_handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adv_stop_timer_handler
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
</UL>

<P><STRONG><a name="[181]"></a>oled_get_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_callback
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lift_wrist_arithmetic
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_exit
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
<LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_touch_move
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_key1_long
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_refresh
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Right
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[2e3]"></a>oled_backlight_set</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = oled_backlight_set &rArr; update_pwm
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_exit
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adv_display_handler
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_thread_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_touch_click
</UL>

<P><STRONG><a name="[537]"></a>oled_backlight_get</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
</UL>

<P><STRONG><a name="[2e4]"></a>oled_set_display_area</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = oled_set_display_area &rArr; write_data &rArr; LCD_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_move_info
</UL>

<P><STRONG><a name="[2e5]"></a>oled_set_move</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = oled_set_move &rArr; write_data &rArr; LCD_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
</UL>

<P><STRONG><a name="[1a7]"></a>GDMA0_Channel2_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_ClearINTPendingBit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[2e2]"></a>pwm_deinit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pwm_deinit
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
</UL>

<P><STRONG><a name="[2df]"></a>update_pwm</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = update_pwm
</UL>
<BR>[Calls]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_unlock
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_lock
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_open
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_init
</UL>

<P><STRONG><a name="[2e8]"></a>pwm_init</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pwm_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_deinit
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[2e9]"></a>pwm_enter_dlps</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[2eb]"></a>pwm_exit_dlps</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, pwm.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadOutputDataBit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[21f]"></a>key1_short_timer_handler</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, key1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = key1_short_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[220]"></a>key1_long_timer_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, key1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = key1_long_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[221]"></a>key1_press_timer_handler</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, key1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = key1_press_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[6a5]"></a>get_key1_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, key1.o(.text), UNUSED)

<P><STRONG><a name="[2f0]"></a>key1_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, key1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = key1_init &rArr; GPIO_irq_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[2f1]"></a>GPIO_irq_init</STRONG> (Thumb, 168 bytes, Stack size 64 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GPIO_irq_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_MaskINTConfig
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INTConfig
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[2f4]"></a>GPIO_irq_status_set</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_irq_status_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_MaskINTConfig
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_INTConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_wakeup
</UL>

<P><STRONG><a name="[2f5]"></a>GPIO_Interrupt_Handler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_MaskINTConfig
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearINTPendingBit
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_Handler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO21_Handler
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO18_Handler
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO16_Handler
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO20_Handler
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO10_Handler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO23_Handler
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO19_Handler
</UL>

<P><STRONG><a name="[2fa]"></a>GPIO_irq_enter_dlps</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIO_irq_enter_dlps &rArr; GPIO_pin_irq_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_enter_dlps
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[2fb]"></a>GPIO_irq_exit_dlps</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_irq_exit_dlps &rArr; GPIO_pin_irq_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_exit_dlps
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[2fd]"></a>GPIO19_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO19_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[2fe]"></a>GPIO23_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO23_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group3_Handler
</UL>

<P><STRONG><a name="[2ff]"></a>GPIO10_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO10_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[300]"></a>GPIO20_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO20_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[301]"></a>GPIO16_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO16_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group0_Handler
</UL>

<P><STRONG><a name="[302]"></a>GPIO18_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO18_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group2_Handler
</UL>

<P><STRONG><a name="[303]"></a>GPIO21_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO21_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Group1_Handler
</UL>

<P><STRONG><a name="[192]"></a>System_Handler</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = System_Handler &rArr; GPIO_Interrupt_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_ClearWakeupINTPendingBit
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_ClearAllWakeupINT
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpInterruptValue
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[308]"></a>twi0_enter_dlps</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = twi0_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[309]"></a>twi0_exit_dlps</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = twi0_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[30a]"></a>twi0_init</STRONG> (Thumb, 130 bytes, Stack size 56 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_create
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Cmd
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_StructInit
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[30f]"></a>I2C0_mutex_take</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_take
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
</UL>

<P><STRONG><a name="[311]"></a>I2C0_mutex_give</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2c0.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_give
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
</UL>

<P><STRONG><a name="[313]"></a>twi0_write</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagState
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetSlaveAddress
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
</UL>

<P><STRONG><a name="[316]"></a>twi0_read</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, i2c0.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagState
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetSlaveAddress
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterRead
</UL>

<P><STRONG><a name="[317]"></a>twi0_write_reg</STRONG> (Thumb, 166 bytes, Stack size 56 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagState
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetSlaveAddress
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_MasterWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
</UL>

<P><STRONG><a name="[318]"></a>twi0_read_reg</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, i2c0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_GetFlagState
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_SetSlaveAddress
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RepeatRead
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_read_reg
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
</UL>

<P><STRONG><a name="[319]"></a>sc7a20_set_wakeup_mode</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = sc7a20_set_wakeup_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init_timer_handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_close_fifo
</UL>

<P><STRONG><a name="[31c]"></a>sc7a20_set_fifo_mode</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = sc7a20_set_fifo_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_acc_set_timer_handler
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_acc_set_timer_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set_timer_handler
</UL>

<P><STRONG><a name="[213]"></a>gsensor_intr_timer_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gsensor_intr_timer_handler &rArr; arithmetic_fifo_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[214]"></a>sc7a20_fifo_timer_handler</STRONG> (Thumb, 244 bytes, Stack size 232 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 412<LI>Call Chain = sc7a20_fifo_timer_handler &rArr; sc7a20_set_wakeup_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SC7A20_DATA_EXE
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[21c]"></a>gsensor_check_init_timer_handler</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = gsensor_check_init_timer_handler &rArr; sc7a20_set_wakeup_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[320]"></a>sc7a20_init</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = sc7a20_init &rArr; sc7a20_set_wakeup_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_thread_init
</UL>

<P><STRONG><a name="[2ad]"></a>gsensor_check_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gsensor_check_init &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[321]"></a>sc7a20_enter_low_mode</STRONG> (Thumb, 148 bytes, Stack size 48 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = sc7a20_enter_low_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Write
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[322]"></a>test_sc7a20_device</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = test_sc7a20_device &rArr; SL_MEMS_i2c_spi_Read &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SL_MEMS_i2c_spi_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_display
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[324]"></a>adc_driver_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = adc_driver_init &rArr; driver_adc_init &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CalibrationInit
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_adc_init
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
</UL>

<P><STRONG><a name="[327]"></a>adc_sample_get</STRONG> (Thumb, 214 bytes, Stack size 32 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = adc_sample_get &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetVoltage
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_BypassCmd
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Cmd
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ReadByScheduleIndex
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
</UL>

<P><STRONG><a name="[330]"></a>adc_enter_dlps</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[331]"></a>adc_exit_dlps</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = adc_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[20f]"></a>hr_module_set_timer_handler</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = hr_module_set_timer_handler &rArr; hrs3300_open &rArr; Hrs3300_alg_open &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_get_onoff
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_close
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;acc_hr_set
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_send_close_event
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[33a]"></a>hr_set_real_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hr_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_display
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_exit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_exit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_init
</UL>

<P><STRONG><a name="[33b]"></a>O2_set_real_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = O2_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_exit
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_init
</UL>

<P><STRONG><a name="[33c]"></a>bp_set_real_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bp_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_exit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_init
</UL>

<P><STRONG><a name="[33d]"></a>hr_set_sport_mode</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_continue
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_pause
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_start
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_exit
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_init
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_exit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_init
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_cmd_handler
</UL>

<P><STRONG><a name="[2a8]"></a>hr_rtc_minute_handle</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = hr_rtc_minute_handle &rArr; sys_time_get &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[33f]"></a>hr_close_all</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>

<P><STRONG><a name="[340]"></a>hr_fall_off_handle</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hr_fall_off_handle &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
</UL>

<P><STRONG><a name="[210]"></a>hr_touch_timeout_timer_handler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hr_touch_timeout_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[211]"></a>hr_value_timeout_timer_handler</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hr_value_timeout_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[341]"></a>hr_data_handler</STRONG> (Thumb, 296 bytes, Stack size 48 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hr_data_handler &rArr; sys_time_get &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
</UL>

<P><STRONG><a name="[529]"></a>hr_result_get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
</UL>

<P><STRONG><a name="[347]"></a>low_power_hr_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = low_power_hr_init &rArr; hr_init &rArr; hrs3300_open &rArr; Hrs3300_alg_open &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[34d]"></a>battery_read</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adc_timer_handler
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_sample_timer_handler
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adc
</UL>

<P><STRONG><a name="[20c]"></a>battery_sample_timer_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = battery_sample_timer_handler &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[20d]"></a>battery_charge_timer_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = battery_charge_timer_handler &rArr; battery_sample_timer_handler &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_sample_timer_handler
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_charger
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[20e]"></a>battery_power_off_timer_handler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = battery_power_off_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[403]"></a>pg_int_enter_dlps</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, battery_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_enter_cb
</UL>

<P><STRONG><a name="[404]"></a>pg_int_exit_dlps</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, battery_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;io_dlps_exit_cb
</UL>

<P><STRONG><a name="[2aa]"></a>battery_manager_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = battery_manager_check &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[34e]"></a>battery_init</STRONG> (Thumb, 140 bytes, Stack size 40 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = battery_init &rArr; adc_driver_init &rArr; driver_adc_init &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_driver_init
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[2ee]"></a>get_battery_info</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, battery_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_picture_display
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adc_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_window_display
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_init
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_battery_charger
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adc
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_exit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
</UL>

<P><STRONG><a name="[35a]"></a>enter_low_power_mode</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = enter_low_power_mode &rArr; sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_mode
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_timer_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[35d]"></a>shutdown_wakeup</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shutdown_wakeup &rArr; system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_timer_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_usb_charge_timer_handler
</UL>

<P><STRONG><a name="[360]"></a>check_shutdown_mode</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = check_shutdown_mode &rArr; sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_mode
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_timer_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[1c7]"></a>watchdog_timer_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, wdt.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Restart
</UL>
<BR>[Address Reference Count : 4]<UL><LI> low_power_mode.o(.data)
<LI> shutdown_mode.o(.data)
<LI> factory_test.o(.data)
<LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[35c]"></a>wdt_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, wdt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = wdt_init
</UL>
<BR>[Calls]<UL><LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Restart
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Enable
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Config
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_ClockEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
</UL>

<P><STRONG><a name="[365]"></a>board_uart_init</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, io_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = board_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
</UL>

<P><STRONG><a name="[366]"></a>driver_uart_init</STRONG> (Thumb, 108 bytes, Stack size 56 bytes, io_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = driver_uart_init &rArr; board_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;board_uart_init
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTConfig
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_StructInit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
</UL>

<P><STRONG><a name="[36a]"></a>driver_uart_uninit</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, io_uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTConfig
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DeInit
</UL>

<P><STRONG><a name="[36b]"></a>uart_senddata_continuous</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, io_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_senddata_continuous
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagState
</UL>
<BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
</UL>

<P><STRONG><a name="[19d]"></a>UART0_Handler</STRONG> (Thumb, 218 bytes, Stack size 88 bytes, io_uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = UART0_Handler &rArr; factory_test_receive_data_handler &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_receive_data_handler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetFlagState
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_INTConfig
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_rtl8762c.o(VECTOR)
</UL>
<P><STRONG><a name="[36f]"></a>Hrs3300_write_reg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_disable
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_enable
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_init
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_normal_power
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_low_power
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_hlow_power
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_adcgain_mode
</UL>

<P><STRONG><a name="[370]"></a>Hrs3300_read_reg</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Hrs3300_read_reg &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_init
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_adcgain_mode
</UL>

<P><STRONG><a name="[371]"></a>Hrs3300_chip_enable</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Hrs3300_chip_enable &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[372]"></a>Hrs3300_chip_disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Hrs3300_chip_disable &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_close
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[373]"></a>heart_rate_meas_timeout_handler</STRONG> (Thumb, 288 bytes, Stack size 48 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = heart_rate_meas_timeout_handler &rArr; Hrs3300_alg_send_data &rArr; Hrs3300_agc &rArr; Hrs3300_adcgain_mode &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_get_results
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_get_bp_results
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_read_reg
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_data_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_data_timer_handler
</UL>

<P><STRONG><a name="[212]"></a>hrs3300_data_timer_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = hrs3300_data_timer_handler &rArr; heart_rate_meas_timeout_handler &rArr; Hrs3300_alg_send_data &rArr; Hrs3300_agc &rArr; Hrs3300_adcgain_mode &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[6a6]"></a>hr_false_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hrs3300.o(.text), UNUSED)

<P><STRONG><a name="[337]"></a>hrs3300_open</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = hrs3300_open &rArr; Hrs3300_alg_open &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_set_exinf
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_open
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_enable
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_init
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
</UL>

<P><STRONG><a name="[338]"></a>hrs3300_close</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = hrs3300_close &rArr; Hrs3300_chip_disable &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_disable
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_init
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
</UL>

<P><STRONG><a name="[335]"></a>hrs3300_get_onoff</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hrs3300.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
</UL>

<P><STRONG><a name="[348]"></a>hr_init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = hr_init &rArr; hrs3300_open &rArr; Hrs3300_alg_open &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_close
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_hr_init
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_thread_init
</UL>

<P><STRONG><a name="[21e]"></a>TP_irq_timer_release_handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TP_irq_timer_release_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[21d]"></a>TP_irq_timer_handler</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = TP_irq_timer_handler &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_handler
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[382]"></a>TP_init</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = TP_init &rArr; ctp_hynitron_update &rArr; cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctp_hynitron_update
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_delayms
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[359]"></a>TP_enter_deep_sleep_mode</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = TP_enter_deep_sleep_mode &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
</UL>

<P><STRONG><a name="[384]"></a>TP_check_exist</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = TP_check_exist &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_wakeup
</UL>

<P><STRONG><a name="[385]"></a>TP_wakeup</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_status_set
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_check_exist
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
</UL>

<P><STRONG><a name="[25]"></a>simp_ble_service_attr_read_cb</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, simple_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = simp_ble_service_attr_read_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simple_ble_service.o(.constdata)
</UL>
<P><STRONG><a name="[387]"></a>simple_write_post_callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, simple_ble_service.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> simple_ble_service.o(.text)
</UL>
<P><STRONG><a name="[26]"></a>simp_ble_service_attr_write_cb</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, simple_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = simp_ble_service_attr_write_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simple_ble_service.o(.constdata)
</UL>
<P><STRONG><a name="[388]"></a>simp_ble_service_send_v3_notify</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, simple_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = simp_ble_service_send_v3_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_data
</UL>

<P><STRONG><a name="[27]"></a>simp_ble_service_cccd_update_cb</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, simple_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = simp_ble_service_cccd_update_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> simple_ble_service.o(.constdata)
</UL>
<P><STRONG><a name="[38a]"></a>simp_ble_service_add_service</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, simple_ble_service.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = simp_ble_service_add_service
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_add_service
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[38c]"></a>ancs_start_discovery</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ancs_start_discovery
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_by_uuid128_srv_discovery
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
</UL>

<P><STRONG><a name="[38e]"></a>ancs_get_hdl_cache</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ancs_client.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[38f]"></a>ancs_set_hdl_cache</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, ancs_client.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[390]"></a>ancs_set_notification_source_notify</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ancs_set_notification_source_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[392]"></a>ancs_set_data_source_notify</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ancs_set_data_source_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[393]"></a>ancs_get_notification_attr</STRONG> (Thumb, 118 bytes, Stack size 64 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_handle_msg
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_ntf_data
</UL>

<P><STRONG><a name="[394]"></a>ancs_get_app_attr</STRONG> (Thumb, 180 bytes, Stack size 64 bytes, ancs_client.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_free
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_zalloc_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[396]"></a>ancs_perform_notification_action</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ancs_perform_notification_action
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_handle_msg
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_call_control
</UL>

<P><STRONG><a name="[399]"></a>ancs_add_client</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ancs_add_client
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_register_spec_client_cb
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_zalloc_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
</UL>

<P><STRONG><a name="[3a1]"></a>ams_init</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ams_init &rArr; ams_ble_add_client
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_add_client
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[222]"></a>ble_ams_cmd_timer_handler</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ble_ams_cmd_timer_handler &rArr; ams_ble_client_write_entity_update
</UL>
<BR>[Calls]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_update
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_read_by_handle
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[55b]"></a>remote_music_info_get</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ams.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_vol_ctrl
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
</UL>

<P><STRONG><a name="[3a6]"></a>remote_music_info_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ams.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_disconnect_cb
</UL>

<P><STRONG><a name="[3a7]"></a>remote_music_info_set</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = remote_music_info_set
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_music_content_from_app
</UL>

<P><STRONG><a name="[3a8]"></a>remote_music_ctrl</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = remote_music_ctrl &rArr; ams_ble_client_write_remote_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_remote_cmd
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_control_handler
</UL>

<P><STRONG><a name="[3ab]"></a>ams_start_discovery</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_start_discovery
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_by_uuid128_srv_discovery
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[3a3]"></a>ams_ble_client_read_by_handle</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ams_ble_client_read_by_handle
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_read
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ams_cmd_timer_handler
</UL>

<P><STRONG><a name="[3aa]"></a>ams_ble_client_write_remote_cmd</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_ble_client_write_remote_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_ctrl
</UL>

<P><STRONG><a name="[3a5]"></a>ams_ble_client_write_entity_update</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_ble_client_write_entity_update
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ams_cmd_timer_handler
</UL>

<P><STRONG><a name="[39c]"></a>ams_ble_client_write_entity_attribute</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_ble_client_write_entity_attribute
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
</UL>

<P><STRONG><a name="[39e]"></a>ams_ble_client_enable_remote_cmd_cccd</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ams_ble_client_enable_remote_cmd_cccd
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
</UL>

<P><STRONG><a name="[3a0]"></a>ams_ble_client_enable_entity_update_cccd</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ams_ble_client_enable_entity_update_cccd
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_attr_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
</UL>

<P><STRONG><a name="[3a2]"></a>ams_ble_add_client</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_ble_add_client
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_register_spec_client_cb
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_zalloc_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_init
</UL>

<P><STRONG><a name="[3ad]"></a>ancs_send_msg_to_app</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ancs_send_msg_to_app
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_send_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[3af]"></a>ble_ancs_get_notification_information</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = ble_ancs_get_notification_information &rArr; app_ancsc_get_ntf_data &rArr; ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_get_ntf_data
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_timer_handler
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
</UL>

<P><STRONG><a name="[3b6]"></a>clear_ancs_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ancs.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[3b7]"></a>ancs_phone_control</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ancs_phone_control &rArr; app_ancsc_call_control &rArr; ancs_perform_notification_action
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_call_control
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_control_handler
</UL>

<P><STRONG><a name="[209]"></a>ble_ancs_get_timer_handler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_ancs_get_timer_handler &rArr; ble_ancs_get_notification_information &rArr; app_ancsc_get_ntf_data &rArr; ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notification_information
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[41a]"></a>get_ancs_call_flag</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ancs.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_call_flag
</UL>

<P><STRONG><a name="[3b9]"></a>ancs_client_cb</STRONG> (Thumb, 350 bytes, Stack size 64 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 948<LI>Call Chain = ancs_client_cb &rArr; app_ancsc_data_analysis &rArr; ancs_data_parse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ancs_info
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_send_msg_to_app
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_data_analysis
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_start_discovery
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_data_source_notify
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_set_notification_source_notify
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_recv_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs.o(.text)
</UL>
<P><STRONG><a name="[3bb]"></a>ancs_handle_msg</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ancs_handle_msg &rArr; ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_perform_notification_action
<LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_notification_attr
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_recv_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[3bc]"></a>ancs_init</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ancs_init &rArr; ancs_add_client
</UL>
<BR>[Calls]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_add_client
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_queue_create_intern
<LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_zalloc_intern
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
</UL>

<P><STRONG><a name="[3be]"></a>app_main_task</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = app_main_task &rArr; app_handle_io_msg &rArr; app_handle_gap_msg &rArr; app_handle_conn_state_evt &rArr; ble_connect_init &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_handle_msg
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_start_bt_stack
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_recv_intern
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_msg_queue_create_intern
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_task.o(.text)
</UL>
<P><STRONG><a name="[3c2]"></a>app_task_init</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, app_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_task_init
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;task_init
</UL>

<P><STRONG><a name="[200]"></a>ble_param_updata_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_param_updata_timer_handler &rArr; ble_update_connect_param
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_connect_param
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[3c6]"></a>fast_conn_params_updata</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = fast_conn_params_updata &rArr; ble_update_connect_param
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_update_connect_param
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_ota_data
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
</UL>

<P><STRONG><a name="[3c7]"></a>app_handle_authen_state_evt</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_handle_authen_state_evt &rArr; ancs_start_discovery
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_disconnect
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_start_discovery
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3c9]"></a>app_handle_conn_param_update_evt</STRONG> (Thumb, 148 bytes, Stack size 40 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_handle_conn_param_update_evt &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3ca]"></a>app_handle_conn_mtu_info_evt</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_handle_conn_mtu_info_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3cb]"></a>app_handle_conn_state_evt</STRONG> (Thumb, 234 bytes, Stack size 72 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = app_handle_conn_state_evt &rArr; ble_connect_init &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_start
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_param
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_bdaddr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d0]"></a>app_handle_dev_state_evt</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_handle_dev_state_evt &rArr; le_vendor_more_precise_32k_option
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_more_precise_32k_option
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_start
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[3d2]"></a>app_handle_gap_msg</STRONG> (Thumb, 346 bytes, Stack size 32 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = app_handle_gap_msg &rArr; app_handle_conn_state_evt &rArr; ble_connect_init &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_just_work_confirm
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_mtu_info_evt
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_passkey_display_confirm
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_user_confirm
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_get_display_key
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_oob_input_confirm
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_passkey_input_confirm
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_io_msg
</UL>

<P><STRONG><a name="[3c1]"></a>app_handle_io_msg</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = app_handle_io_msg &rArr; app_handle_gap_msg &rArr; app_handle_conn_state_evt &rArr; ble_connect_init &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_handle_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_main_task
</UL>

<P><STRONG><a name="[14]"></a>app_gap_callback</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_gap_callback
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_common.o(.text)
</UL>
<P><STRONG><a name="[15]"></a>app_profile_callback</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_profile_callback &rArr; ble_read_data &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_data
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_common.o(.text)
</UL>
<P><STRONG><a name="[251]"></a>load_overlay</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, overlay_mgr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = load_overlay
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[3db]"></a>get_current_scenario_index</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, overlay_mgr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>

<P><STRONG><a name="[3df]"></a>app_le_gap_init</STRONG> (Thumb, 410 bytes, Stack size 192 bytes, ble_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = app_le_gap_init &rArr; ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertise_param_init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_set_param
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_gap_param
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_register_app_cb
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_set_param
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_set_param
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[3e4]"></a>ble_ancs_pair</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_pair
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_pair_finish_from_app
</UL>

<P><STRONG><a name="[3c8]"></a>ble_disconnect</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ble_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_disconnect
</UL>
<BR>[Called By]<UL><LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_authen_state_evt
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_app_active_timer_handler
</UL>

<P><STRONG><a name="[3e7]"></a>app_le_profile_init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = app_le_profile_init &rArr; ancs_init &rArr; ancs_add_client
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_init
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_init
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_add_service
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_register_app_cb
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;server_init
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_init
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[3eb]"></a>pwr_mgr_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, ble_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwr_mgr_init &rArr; DLPS_IORegister
</UL>
<BR>[Calls]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lps_mode_set
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IORegister
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[3ed]"></a>task_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ble_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
</UL>

<P><STRONG><a name="[358]"></a>ble_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ble_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = ble_init &rArr; app_le_gap_init &rArr; ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dev_mac_addr
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_init
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwr_mgr_init
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_profile_init
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_task_init
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_gap_init
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[3b5]"></a>ancs_data_parse</STRONG> (Thumb, 492 bytes, Stack size 352 bytes, ancs_parse_data.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 860<LI>Call Chain = ancs_data_parse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_ancs
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_ancsc_data_analysis
</UL>

<P><STRONG><a name="[2a1]"></a>sys_timer_thread_create</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sem_create
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_timer_thread_create
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_timer_thread_init
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_timer_thread_create
</UL>

<P><STRONG><a name="[2ec]"></a>HAL_GetTickMS</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_timer_thread.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notification_information
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_heart_data
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_control_handler
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shake_arithmetic
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_touch_click
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_shake_device
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_init
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_time_get
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_time_get
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stopwatch_time
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_touch_click
<LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_release
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_press
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_window_display
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_init
</UL>

<P><STRONG><a name="[1c0]"></a>sys_timer_function</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_timer_function &rArr; get_timer_thread_min
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread_min
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_thread_alarm_check
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_thread_schedule
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sem_take
</UL>
<BR>[Address Reference Count : 7]<UL><LI> rtc.o(.data)
<LI> low_power_mode.o(.data)
<LI> shutdown_mode.o(.data)
<LI> window_timer_thread.o(.data)
<LI> mix_timer_thread.o(.data)
<LI> factory_test.o(.data)
<LI> data_manager_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[3fc]"></a>HAL_GetTick</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sys_timer_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>

<P><STRONG><a name="[292]"></a>sys_timer_set</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sem_give
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_data_timer_handler
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_receive_data_handler
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_interrupt_callback
<LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_chg_interrupt_callback
<LI><a href="#[e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_thread_init
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adc_timer_handler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_press_timer_handler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_usb_charge_timer_handler
<LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_interrupt_callback
<LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_chg_interrupt_callback
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chg_interrupt_callback
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_data_handler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_wakeup_int2_callback
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_data
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_param_update_evt
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_conn_params_updata
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ams_cmd_timer_handler
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_callback
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_datatype_info_to_app
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ack_to_app
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_out_queue
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_data_switch_from_app
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_userInfo_from_app
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_24h_data
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_acc_set
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_finish
<LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_irq_callback
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_new_day_time
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_manager_check
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_thread_init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_exit
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_thread_init
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_start
</UL>

<P><STRONG><a name="[2a2]"></a>sys_timer_clear</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_data_timer_handler
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_adv_stop_timer_handler
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_timer_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_usb_charge_timer_handler
<LI><a href="#[f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_interrupt_callback
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adv_stop_timer_handler
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timeout_timer_handler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_long_timer_handler
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_press_timer_handler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_usb_charge_timer_handler
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_power_off_timer_handler
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_timer_handler
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_sample_timer_handler
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_value_timeout_timer_handler
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_touch_timeout_timer_handler
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init_timer_handler
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_intr_timer_handler
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_long_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_param_updata_timer_handler
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_timer_handler
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ams_cmd_timer_handler
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_timer_handler
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_timer_release_handler
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ack_timeout_timer_handler
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd_timer_handler
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_app_active_timer_handler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_ack_handler
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_ble_send_timer_handler
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_day_timer_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;software_reset_timer_handler
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_factory_timer_handler
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check_timer_handler
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler_timer_handler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_acc_set_timer_handler
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_acc_set_timer_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set_timer_handler
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_person_info_timer_handler
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arithmetic_24H_data_timer_handler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_overflow_timer_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_sleep_timer_handler
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adv_stop_timer_handler
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adv_display_handler
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_uart_read_timer_handler
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_timeout_timer_handler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_go_home_timer_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_act_timer_handler
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_to_pic_timer_handler
</UL>

<P><STRONG><a name="[3ff]"></a>sys_timer_get_period</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_timer_get_period
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
</UL>

<P><STRONG><a name="[400]"></a>sys_timer_get_info</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, sys_timer_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_timer_thread
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[40c]"></a>SysInitStatus_Set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37b]"></a>SysInitStatus_Query</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_info
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_period
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_font_to_pic_init
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_lable_check
</UL>

<P><STRONG><a name="[185]"></a>sys_delay</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_driver_init
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_delayms
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_click
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_font_to_pic_init
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_lable_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[2ef]"></a>system_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_all_reset_user_info
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_wakeup
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_adc_timer_handler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_long_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_shutdown
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_task_function
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_act
</UL>

<P><STRONG><a name="[402]"></a>system_shutdown</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = system_shutdown &rArr; system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_act
</UL>

<P><STRONG><a name="[16]"></a>io_dlps_enter_cb</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = io_dlps_enter_cb &rArr; GPIO_irq_enter_dlps &rArr; GPIO_pin_irq_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pg_int_enter_dlps
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_enter_dlps
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_enter_dlps
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_enter_dlps
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_enter_dlps
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_8080_enter_dlps
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_enter_dlps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_common.o(.text)
</UL>
<P><STRONG><a name="[17]"></a>io_dlps_exit_cb</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = io_dlps_exit_cb &rArr; GPIO_irq_exit_dlps &rArr; GPIO_pin_irq_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pg_int_exit_dlps
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_exit_dlps
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_exit_dlps
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_exit_dlps
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_exit_dlps
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_8080_exit_dlps
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_exit_dlps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_common.o(.text)
</UL>
<P><STRONG><a name="[536]"></a>get_config_file_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sys_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
</UL>

<P><STRONG><a name="[407]"></a>sys_init</STRONG> (Thumb, 118 bytes, Stack size 8 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = sys_init &rArr; TP_init &rArr; ctp_hynitron_update &rArr; cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_init
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_init
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ram_struct
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_file_check
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_try_high_speed
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_direct
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_init
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[243]"></a>main</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = main &rArr; sys_init &rArr; TP_init &rArr; ctp_hynitron_update &rArr; cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_timer_thread_create
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Init
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Set
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
</UL>
<BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[35b]"></a>set_system_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_shutdown_mode
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_low_power_mode
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[290]"></a>get_system_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_receive_data_handler
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_average_adc
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_exit_dlps
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_enter_dlps
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_dev_mac_addr
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_callback
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_thread_init
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>

<P><STRONG><a name="[40e]"></a>sys_offset_sec_get</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_set
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
</UL>

<P><STRONG><a name="[40d]"></a>sys_sec_set</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_sec_set &rArr; rtc_sec_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_offset_sec_get
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_timeInfo_from_app
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_set
</UL>

<P><STRONG><a name="[342]"></a>sys_sec_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = sys_sec_get &rArr; rtc_sec_get
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_offset_sec_get
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_sec_get
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_heart_handler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_sport_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_5min_handler
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_heart_data
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_24h_data
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get_12h
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler_timer_handler
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_start
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arithmetic_24H_data_timer_handler
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_steps_start_time
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_alarm
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
</UL>

<P><STRONG><a name="[3f4]"></a>time_to_sec</STRONG> (Thumb, 66 bytes, Stack size 56 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_offset_sec_get
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_set
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather
</UL>

<P><STRONG><a name="[40f]"></a>sys_time_set</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, data_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_set
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
</UL>

<P><STRONG><a name="[410]"></a>sec_to_time</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_offset_sec_get
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>
<BR>[Called By]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_24h_data
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get_12h
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check_timer_handler
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_alarm
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[33e]"></a>sys_time_get</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_time_get &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_data_handler
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_day_timer_handler
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check_timer_handler
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lift_wrist_arithmetic
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_alarm
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_rtc_minute_handle
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_compare
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_compare
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
</UL>

<P><STRONG><a name="[411]"></a>sys_time_get_12h</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sys_time_get_12h &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_act
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_display
</UL>

<P><STRONG><a name="[412]"></a>cmp_user_info</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = cmp_user_info
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_userInfo_from_app
</UL>

<P><STRONG><a name="[34c]"></a>set_battery_info</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_dataconnect
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
</UL>

<P><STRONG><a name="[4d7]"></a>get_battery_capacity</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[51b]"></a>get_battery_level</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27
</UL>

<P><STRONG><a name="[415]"></a>find_phone</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = find_phone &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_exit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_init
</UL>

<P><STRONG><a name="[416]"></a>music_control_handler</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = music_control_handler &rArr; remote_music_ctrl &rArr; ams_ble_client_write_remote_cmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_ctrl
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
</UL>

<P><STRONG><a name="[417]"></a>hr_control_handler</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hr_control_handler &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_exit
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_exit
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_exit
</UL>

<P><STRONG><a name="[418]"></a>call_control_handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = call_control_handler &rArr; ancs_phone_control &rArr; app_ancsc_call_control &rArr; ancs_perform_notification_action
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_phone_control
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_touch_click
</UL>

<P><STRONG><a name="[419]"></a>set_call_flag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = set_call_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ancs_call_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_control_from_app
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
</UL>

<P><STRONG><a name="[55f]"></a>get_call_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_act
</UL>

<P><STRONG><a name="[29f]"></a>char_to_int</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_tag_info
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_tag_info
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensor_info
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_check
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_file_check
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_status_save
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_handler
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_finish
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_item_from_flash
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_ble_connect_status
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_act
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_cmd_handler
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_data
</UL>

<P><STRONG><a name="[343]"></a>int_to_char</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = int_to_char
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_heart_handler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_sport_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_5min_handler
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_watchface_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tag_info
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_heart_data
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_sensor_tag
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_status_save
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_start
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_handler
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
</UL>

<P><STRONG><a name="[41b]"></a>target_check</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = target_check &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
</UL>

<P><STRONG><a name="[41d]"></a>heart_check</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, data_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>

<P><STRONG><a name="[41e]"></a>take_photo</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = take_photo &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_key1_short
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_touch_click
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_shake_device
</UL>

<P><STRONG><a name="[3de]"></a>calculate_crc16</STRONG> (Thumb, 64 bytes, Stack size 20 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = calculate_crc16
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertise_param_init
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_crc16
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
</UL>

<P><STRONG><a name="[41f]"></a>woman_stage_calculate</STRONG> (Thumb, 384 bytes, Stack size 64 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_woman_stage_info_from_app
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_24h_data
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_init
</UL>

<P><STRONG><a name="[2ae]"></a>woman_stage_alarm</STRONG> (Thumb, 198 bytes, Stack size 48 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = woman_stage_alarm &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[2c3]"></a>power_analysis_handler</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, data_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_sample_timer_handler
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_close
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_open
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_power_off
</UL>

<P><STRONG><a name="[420]"></a>spi_flash_crc16</STRONG> (Thumb, 66 bytes, Stack size 288 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = spi_flash_crc16 &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc16
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_handler
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
</UL>

<P><STRONG><a name="[424]"></a>flash_mutex_take</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, data_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_take
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[425]"></a>flash_mutex_give</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, data_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_give
</UL>
<BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[426]"></a>block_flash_handler</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_power_up
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_power_down
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mutex_give
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_mutex_take
</UL>
<BR>[Called By]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_all_reset_user_info
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_ota_finish
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_all_sensor_item_info
<LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_erase_sensor_item
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_sensor_data
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_sensor_item_num
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_message_item
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_erase_message_item
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_message_item
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_message_item
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_user_info
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_sensor_info
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_message_info
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_crc16
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read_high_speed
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_item_from_flash
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_item_from_flash
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_ota_data_to_flash
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_item_to_flash
</UL>

<P><STRONG><a name="[406]"></a>block_spi_flash_read</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_watchface_info
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ram_struct
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;config_file_check
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_lable_check
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_watchface_zoom_pic
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_flag_check
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_data
</UL>

<P><STRONG><a name="[183]"></a>block_spi_flash_read_high_speed</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_spi_flash_read_high_speed &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[429]"></a>block_spi_flash_write</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_spi_flash_write &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sys_info
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_label_set
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
</UL>

<P><STRONG><a name="[42a]"></a>block_spi_flash_erase_4k</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sys_info
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_factory_timer_handler
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_lable_check
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
</UL>

<P><STRONG><a name="[42b]"></a>block_spi_flash_crc16</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_spi_flash_crc16 &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_data
</UL>

<P><STRONG><a name="[20a]"></a>reset_factory_timer_handler</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = reset_factory_timer_handler &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_act
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[20b]"></a>software_reset_timer_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = software_reset_timer_handler &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_all_reset_user_info
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[3f0]"></a>init_dev_mac_addr</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = init_dev_mac_addr
</UL>
<BR>[Calls]<UL><LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[408]"></a>init_ram_struct</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = init_ram_struct &rArr; factory_test_pin_status_get &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_user_info
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Language_check
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[42f]"></a>block_save_sys_info</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, data_manager.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
</UL>

<P><STRONG><a name="[430]"></a>init_data_manager</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = init_data_manager &rArr; block_check_patch_img_OTA &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_24h_data
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_transfer_init
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_restore_ota_item_from_flash
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_sensor_info
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_init_message_info
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_patch_img_OTA
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arth_init_person_info
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_create
</UL>
<BR>[Called By]<UL><LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_thread_init
</UL>

<P><STRONG><a name="[427]"></a>data_manager_flash_power_up</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, data_manager_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[428]"></a>data_manager_flash_power_down</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, data_manager_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[422]"></a>data_manager_flash_write</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, data_manager_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flash_addr
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write_locked
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tag_info
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_tag
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_message_item
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_message_item
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_handler
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ota_data_to_flash
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
</UL>

<P><STRONG><a name="[421]"></a>data_manager_flash_read</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, data_manager_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_locked
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_split_read_locked
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;restore_tag_info
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_tag_info
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensor_info
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_message_item
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_items
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_crc16
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_handler
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_item_from_flash
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
</UL>

<P><STRONG><a name="[423]"></a>data_manager_flash_erase_4k</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, data_manager_flash.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = data_manager_flash_erase_4k
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_flash_addr
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_erase_locked
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_tag
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_message_item
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_handler
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ota_data_to_flash
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
</UL>

<P><STRONG><a name="[440]"></a>block_save_message_item</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_save_message_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
</UL>

<P><STRONG><a name="[441]"></a>block_read_message_item</STRONG> (Thumb, 20 bytes, Stack size 24 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_read_message_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[442]"></a>block_erase_message_item</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, data_manager_message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[443]"></a>block_get_message_items</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_get_message_items &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move_msg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_click
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_touch_move
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[444]"></a>block_clear_message_item</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_clear_message_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_all_message_item
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_click
</UL>

<P><STRONG><a name="[445]"></a>block_clear_all_message_item</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, data_manager_message.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_message_item
</UL>

<P><STRONG><a name="[432]"></a>block_init_message_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_init_message_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[37]"></a>data_manager_message_handler</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = data_manager_message_handler &rArr; get_message_items &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_message_item
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_message_item
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_message_item
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_info
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_items
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_item_addr
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>data_manager_sensor_handler</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = data_manager_sensor_handler &rArr; save_sensor_item &rArr; save_sensor_tag &rArr; fill_sensor_tag &rArr; int_to_char
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensor_info
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_item_num
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_tag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager.o(.constdata)
</UL>
<P><STRONG><a name="[453]"></a>block_get_sensor_item_num</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, data_manager_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[344]"></a>block_save_sensor_item</STRONG> (Thumb, 54 bytes, Stack size 24 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_dataconnect
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_heart_handler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_sport_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_5min_handler
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_heart_data
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_real_sport_data
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
</UL>

<P><STRONG><a name="[454]"></a>block_read_sensor_data</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_read_sensor_data &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sensor_data_handler
</UL>

<P><STRONG><a name="[455]"></a>block_erase_sensor_item</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_erase_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_ack_all_sensor_from_app
</UL>

<P><STRONG><a name="[456]"></a>block_clear_all_sensor_item_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>

<P><STRONG><a name="[431]"></a>block_init_sensor_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_init_sensor_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[204]"></a>check_sensor_data_timer_handler</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = check_sensor_data_timer_handler &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_queue_status
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_dataconnect
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[459]"></a>save_real_sport_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = save_real_sport_data &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_data_switch_from_app
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_history_sport_data
</UL>

<P><STRONG><a name="[2a7]"></a>save_history_sport_data</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = save_history_sport_data &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_real_sport_data
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[45a]"></a>save_sport_heart_data</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, data_manager_sensor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
</UL>

<P><STRONG><a name="[45c]"></a>restore_tag_info</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, data_manager_user_info.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>

<P><STRONG><a name="[35f]"></a>block_save_all_reset_user_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;software_reset_timer_handler
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
</UL>

<P><STRONG><a name="[462]"></a>block_save_user_info</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_woman_stage_info_from_app
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_watch_setting_from_app
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_target_alarm_from_app
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_heart_auto_switch_from_app
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_hand_rise_switch_from_app
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_message_alarm_from_app
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_alarm_from_app
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_drink_alarm_from_app
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_unit_setting_from_app
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_pair_finish_from_app
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_message_switch_from_app
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_forget_disturb_from_app
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_sitting_remind_from_app
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_target_from_app
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_alarmInfo_from_app
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_weather_from_app
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_timeInfo_from_app
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_language_setting_from_app
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_userInfo_from_app
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check_timer_handler
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_compare
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_click
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_touch_click
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_backlight_timeout
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_touch_click
</UL>

<P><STRONG><a name="[42d]"></a>block_init_user_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = block_init_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ram_struct
</UL>

<P><STRONG><a name="[35]"></a>data_manager_user_info_handler</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = data_manager_user_info_handler &rArr; init_user_info &rArr; save_all_reset_user_info &rArr; save_user_info &rArr; save_tag_info &rArr; data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_reset_user_info
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager.o(.constdata)
</UL>
<P><STRONG><a name="[2ac]"></a>check_new_day_time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = check_new_day_time &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_24h_data
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[202]"></a>new_day_timer_handler</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = new_day_timer_handler &rArr; clear_24h_data &rArr; woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_24h_data
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[2a5]"></a>alarm_compare</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = alarm_compare &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[2a6]"></a>drink_alarm_compare</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = drink_alarm_compare &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[2b7]"></a>disturb_check</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_drink_alarm
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_target_finish
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_sedentary_reminder
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_call
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_message
</UL>

<P><STRONG><a name="[434]"></a>init_24h_data</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = init_24h_data &rArr; clear_24h_data &rArr; woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_24h_data
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_new_day_time
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[464]"></a>watchface_data_handler</STRONG> (Thumb, 486 bytes, Stack size 72 bytes, data_manager_watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = watchface_data_handler &rArr; main_window_index_set &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_conn_params_updata
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_index_set
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_crc16
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_watchface_sync_from_app
</UL>

<P><STRONG><a name="[466]"></a>set_watchface_info</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, data_manager_watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = set_watchface_info &rArr; watchface_4_flag_check &rArr; watchface_flag_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_flag_check
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_watchface_data_handler
</UL>

<P><STRONG><a name="[46e]"></a>Printf_Data</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, data_passthrough.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_data
</UL>

<P><STRONG><a name="[468]"></a>clear_ble_receive_data_flag</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = clear_ble_receive_data_flag
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXIT_CRITICAL
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_CRITICAL
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
</UL>

<P><STRONG><a name="[3da]"></a>ble_read_data</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_read_data &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXIT_CRITICAL
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_CRITICAL
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_profile_callback
</UL>

<P><STRONG><a name="[206]"></a>ble_read_timer_handler</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_read_timer_handler &rArr; ble_receive_data_handler &rArr; receive_ack_handler &rArr; push_data_type_out_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_receive_data_handler
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ble_receive_data_flag
<LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXIT_CRITICAL
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ENTER_CRITICAL
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_period
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[46c]"></a>normal_ble_send_timer_handler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = normal_ble_send_timer_handler &rArr; ble_send_data &rArr; simp_ble_service_send_v3_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_data
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_send_timer_handler
</UL>

<P><STRONG><a name="[207]"></a>ble_send_timer_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_send_timer_handler &rArr; normal_ble_send_timer_handler &rArr; ble_send_data &rArr; simp_ble_service_send_v3_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_ble_send_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[472]"></a>set_ble_dataconnect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ack_timeout_timer_handler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
</UL>

<P><STRONG><a name="[473]"></a>set_ble_appconnect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ack_timeout_timer_handler
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
</UL>

<P><STRONG><a name="[457]"></a>get_ble_appconnect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_app_active_timer_handler
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_act
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_touch_click
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_shake_device
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_act
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_display
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_exit
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_init
</UL>

<P><STRONG><a name="[413]"></a>get_ble_dataconnect</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_battery_info
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
</UL>

<P><STRONG><a name="[3f5]"></a>receive_messageInfo_from_ancs</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = receive_messageInfo_from_ancs &rArr; receive_messageInfo_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
</UL>

<P><STRONG><a name="[3b2]"></a>receive_call_control_from_ancs</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = receive_call_control_from_ancs &rArr; receive_call_control_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_control_from_app
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
</UL>

<P><STRONG><a name="[47a]"></a>handler_receive_cmd</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = handler_receive_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_ack_handler
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd_package
</UL>

<P><STRONG><a name="[3a9]"></a>get_ble_connect_flag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, data_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_ctrl
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27
</UL>

<P><STRONG><a name="[1ff]"></a>ble_connect_init_timer_handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_connect_init_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_appconnect
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_dataconnect
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ble_receive_data_flag
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[3cc]"></a>ble_connect_init</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_connect_init &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init_timer_handler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_conn_state_evt
</UL>

<P><STRONG><a name="[1fe]"></a>check_app_active_timer_handler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = check_app_active_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_disconnect
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[414]"></a>push_data_type_to_queue</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_handler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_battery_info
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd_package
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_app_sync_from_app
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_userInfo_from_app
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_photo
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_control_handler
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_control_handler
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_control_handler
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_compare
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_touch_click
</UL>

<P><STRONG><a name="[46b]"></a>ble_receive_data_handler</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ble_receive_data_handler &rArr; receive_ack_handler &rArr; push_data_type_out_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_ack_handler
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd_package
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
</UL>

<P><STRONG><a name="[458]"></a>check_queue_status</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, data_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
</UL>

<P><STRONG><a name="[546]"></a>check_data_type_queue_status</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = check_data_type_queue_status
</UL>
<BR>[Called By]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
</UL>

<P><STRONG><a name="[201]"></a>send_cmd_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = send_cmd_timer_handler &rArr; send_cmd &rArr; send_datatype_info_to_app &rArr; set_package
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[203]"></a>wait_ack_timeout_timer_handler</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = wait_ack_timeout_timer_handler &rArr; push_data_type_out_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_out_queue
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_appconnect
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_ble_dataconnect
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[435]"></a>data_transfer_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, data_transfer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[47c]"></a>set_package</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_package
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_datatype_info_to_app
</UL>

<P><STRONG><a name="[47b]"></a>send_datatype_info_to_app</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = send_datatype_info_to_app &rArr; set_package
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_package
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
</UL>

<P><STRONG><a name="[479]"></a>send_ack_to_app</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = send_ack_to_app &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd_package
</UL>

<P><STRONG><a name="[47d]"></a>set_mix_package</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, data_transfer_package.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_dev_sync_handler
</UL>

<P><STRONG><a name="[471]"></a>block_check_ota_finish</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_check_ota_finish &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_request_ota_status_from_app
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_restore_ota_item_from_flash
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
</UL>

<P><STRONG><a name="[47e]"></a>block_save_item_to_flash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_save_item_to_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
</UL>

<P><STRONG><a name="[47f]"></a>block_save_ota_data_to_flash</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = block_save_ota_data_to_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
</UL>

<P><STRONG><a name="[482]"></a>ota_font_updata_check</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ota.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_ble_connect_status
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_act
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_act
</UL>

<P><STRONG><a name="[470]"></a>handler_ota_data</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = handler_ota_data &rArr; ota_data_parse &rArr; block_save_ota_data_to_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_conn_params_updata
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_top_window
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_OTA_data_from_app
</UL>

<P><STRONG><a name="[486]"></a>block_read_item_from_flash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_read_item_from_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_restore_ota_item_from_flash
</UL>

<P><STRONG><a name="[487]"></a>block_clear_item_from_flash</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = block_clear_item_from_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_flash_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
</UL>

<P><STRONG><a name="[433]"></a>block_restore_ota_item_from_flash</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = block_restore_ota_item_from_flash &rArr; block_check_ota_finish &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_ota_finish
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_item_from_flash
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_argument_init
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[36]"></a>data_manager_OTA_handler</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = data_manager_OTA_handler &rArr; check_ota_finish &rArr; ota_finish_handler &rArr; spi_flash_crc16 &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_finish
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_item_from_flash
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_ota_data_to_flash
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_item_to_flash
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager.o(.constdata)
</UL>
<P><STRONG><a name="[205]"></a>ota_finish_timer_handler</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = ota_finish_timer_handler &rArr; ota_updata &rArr; ota_data_move &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_all_reset_user_info
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_check
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_item_from_flash
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Disable
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[48d]"></a>clear_smooth_data</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic_stop
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic_stop
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smooth_filter_func
</UL>

<P><STRONG><a name="[48e]"></a>smooth_filter_func</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = smooth_filter_func
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_smooth_data
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[4a9]"></a>sqrt_16</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sqrt_16
</UL>
<BR>[Called By]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[184]"></a>Q_rsqrt</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[497]"></a>arth_get_stepDistanceInterval</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, arithmetic_common.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_change_by_person
</UL>

<P><STRONG><a name="[438]"></a>arth_init_person_info</STRONG> (Thumb, 116 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_person_info_timer_handler
</UL>

<P><STRONG><a name="[495]"></a>steps_2_distance</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_handler
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
</UL>

<P><STRONG><a name="[48f]"></a>steps_2_calorie</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_handler
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
</UL>

<P><STRONG><a name="[492]"></a>save_steps_start_time</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = save_steps_start_time &rArr; sys_sec_get &rArr; rtc_sec_get
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[493]"></a>save_sport_steps</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = save_sport_steps &rArr; mix_sport_handler &rArr; steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_check
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_handler
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_distance
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[41c]"></a>get_sport_info</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_check
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler_timer_handler
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[496]"></a>sport_info_change_by_person</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, arithmetic_common.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arth_get_stepDistanceInterval
</UL>

<P><STRONG><a name="[31f]"></a>handler_gsensor_data</STRONG> (Thumb, 320 bytes, Stack size 24 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = handler_gsensor_data &rArr; steps_arithmetic &rArr; save_sport_steps &rArr; mix_sport_handler &rArr; steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic_stop
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_gsensor_data_handler
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shake_arithmetic
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_sleep_counter
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic_stop
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lift_wrist_arithmetic
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
</UL>

<P><STRONG><a name="[4a2]"></a>get_hour_steps</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
</UL>

<P><STRONG><a name="[346]"></a>set_fall_off_info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_counter_fall_off_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_fall_off_handler
</UL>

<P><STRONG><a name="[2a9]"></a>sedentary_reminder_check</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sedentary_reminder_check &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_fall_off_handle
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_hour_steps
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[219]"></a>clear_arithmetic_24H_data_timer_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = clear_arithmetic_24H_data_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[21a]"></a>init_person_info_timer_handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = init_person_info_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arth_init_person_info
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[31d]"></a>arithmetic_fifo_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = arithmetic_fifo_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_intr_timer_handler
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[215]"></a>arithmetic_fifo_set_timer_handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = arithmetic_fifo_set_timer_handler &rArr; sc7a20_set_fifo_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_close_fifo
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[336]"></a>acc_hr_set</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
</UL>

<P><STRONG><a name="[216]"></a>hr_acc_set_timer_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = hr_acc_set_timer_handler &rArr; sc7a20_set_fifo_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_close_fifo
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[4a4]"></a>sleep_acc_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sleep_acc_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_gsensor_data_handler
</UL>

<P><STRONG><a name="[217]"></a>sleep_acc_set_timer_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = sleep_acc_set_timer_handler &rArr; sc7a20_set_fifo_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[498]"></a>get_mix_sport_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
</UL>

<P><STRONG><a name="[4a5]"></a>mix_sport_start</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mix_sport_start &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
</UL>

<P><STRONG><a name="[4a6]"></a>mix_sport_pause</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mix_sport_pause &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
</UL>

<P><STRONG><a name="[4a7]"></a>mix_sport_continue</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mix_sport_continue &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
</UL>

<P><STRONG><a name="[4a8]"></a>mix_sport_stop</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = mix_sport_stop &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
</UL>

<P><STRONG><a name="[494]"></a>mix_sport_handler</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mix_sport_handler &rArr; steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_distance
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
</UL>

<P><STRONG><a name="[345]"></a>mix_sport_heart_handler</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, arithmetic_mix_sport.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mix_sport_heart_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_sport_handler
</UL>

<P><STRONG><a name="[49b]"></a>run_arithmetic</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, arithmetic_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = run_arithmetic &rArr; save_sport_steps &rArr; mix_sport_handler &rArr; steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_steps
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sqrt_16
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_steps_start_time
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smooth_filter_func
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_smooth_data
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[499]"></a>run_arithmetic_stop</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, arithmetic_run.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = run_arithmetic_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_smooth_data
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[4a1]"></a>sleep_counter_fall_off_handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fall_off_info
</UL>

<P><STRONG><a name="[49f]"></a>set_sleep_counter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[218]"></a>sleep_data_handler_timer_handler</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = sleep_data_handler_timer_handler &rArr; sleep_arithmetic &rArr; sleep_time_calculate &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[436]"></a>sleep_date_check</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sleep_date_check &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler
</UL>

<P><STRONG><a name="[2ab]"></a>sleep_data_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sleep_data_handler &rArr; sleep_date_check &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_date_check
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
</UL>

<P><STRONG><a name="[21b]"></a>sleep_date_check_timer_handler</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = sleep_date_check_timer_handler &rArr; sys_time_get &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[46f]"></a>sleep_test</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_timeInfo_from_app
</UL>

<P><STRONG><a name="[4a0]"></a>sleep_gsensor_data_handler</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sleep_gsensor_data_handler &rArr; sleep_acc_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_acc_set
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[4aa]"></a>calculate_steps</STRONG> (Thumb, 356 bytes, Stack size 20 bytes, arithmetic_steps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = calculate_steps
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;run_arithmetic
</UL>

<P><STRONG><a name="[49e]"></a>steps_arithmetic_stop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, arithmetic_steps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = steps_arithmetic_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_smooth_data
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic
</UL>

<P><STRONG><a name="[49a]"></a>steps_arithmetic</STRONG> (Thumb, 596 bytes, Stack size 40 bytes, arithmetic_steps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = steps_arithmetic &rArr; save_sport_steps &rArr; mix_sport_handler &rArr; steps_2_calorie &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_steps
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_arithmetic_stop
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_steps_start_time
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;smooth_filter_func
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[49c]"></a>lift_wrist_arithmetic</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, arithmetic_steps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = lift_wrist_arithmetic &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[552]"></a>shake_set_onoff</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, arithmetic_steps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_exit
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_init
</UL>

<P><STRONG><a name="[49d]"></a>shake_arithmetic</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, arithmetic_steps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = shake_arithmetic &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_gsensor_data
</UL>

<P><STRONG><a name="[4af]"></a>GUI_language_chk_layout_right</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, language.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[4ae]"></a>GUI_Get_ID_String</STRONG> (Thumb, 208 bytes, Stack size 160 bytes, language.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = GUI_Get_ID_String &rArr; ui_font_utf8_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_unicode_to_utf8
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_language_chk_layout_right
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_display
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_display
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_display
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_display
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_display
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_font_to_pic_init
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_display
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
</UL>

<P><STRONG><a name="[42e]"></a>GUI_Language_check</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, language.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ram_struct
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
</UL>

<P><STRONG><a name="[577]"></a>GUI_language_check_type</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, language.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
</UL>

<P><STRONG><a name="[4b2]"></a>GUI_layout_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, language.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GUI_layout_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_layout_right_enable
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_language_chk_layout_right
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[4b4]"></a>GUI_layout_restore</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, language.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_layout_right_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[4f8]"></a>language_font_other_to_pic_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, language.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[4bb]"></a>display_watchface_zoom_pic</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = display_watchface_zoom_pic &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_display
</UL>

<P><STRONG><a name="[4d2]"></a>watchface_3_flag_check</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = watchface_3_flag_check &rArr; watchface_flag_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
</UL>

<P><STRONG><a name="[467]"></a>watchface_4_flag_check</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = watchface_4_flag_check &rArr; watchface_flag_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_flag_check
</UL>
<BR>[Called By]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_watchface_info
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_move
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_display
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_display
</UL>

<P><STRONG><a name="[4d4]"></a>watchface_4_parse</STRONG> (Thumb, 1232 bytes, Stack size 152 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = watchface_4_parse &rArr; watchface_circle_bar_display &rArr; ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_capacity
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_time_info
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_picture_display
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_get
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_1S_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_rectangle_display
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_circle_display
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_circle_bar_display
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_user_define
</UL>

<P><STRONG><a name="[4d9]"></a>watchface_4_cmd_copy</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = watchface_4_cmd_copy &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_4_y_buf_init
</UL>

<P><STRONG><a name="[4db]"></a>watchface_3_parse</STRONG> (Thumb, 812 bytes, Stack size 120 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = watchface_3_parse &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sys_time_info
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_flag_check
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_setting
</UL>

<P><STRONG><a name="[1d6]"></a>font_to_pic_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = font_to_pic_timer_handler &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[4df]"></a>window_language_init</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = window_language_init &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Language_check
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_act
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_click
</UL>

<P><STRONG><a name="[4e0]"></a>init_all_windows</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = init_all_windows &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_struct_init
<LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_struct_init
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_struct_init
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_hide
</UL>

<P><STRONG><a name="[4e4]"></a>clear_move_info</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = clear_move_info &rArr; oled_set_display_area &rArr; write_data &rArr; LCD_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_display_area
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
</UL>

<P><STRONG><a name="[4eb]"></a>window_move</STRONG> (Thumb, 752 bytes, Stack size 48 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_move
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_display_area
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_end
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_4_y_buf_init
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_move
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_move
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_touch_move
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_touch_move
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_touch_move
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_touch_move
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_touch_move
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_touch_move
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_touch_move
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_touch_move
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_touch_move
</UL>

<P><STRONG><a name="[4f1]"></a>window_move_self</STRONG> (Thumb, 192 bytes, Stack size 56 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = window_move_self &rArr; window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
</UL>

<P><STRONG><a name="[1d7]"></a>window_move_scroll_timer_handler</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = window_move_scroll_timer_handler &rArr; window_move_end &rArr; window_switch_handler &rArr; window_layer_add &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_top_window
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_move
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_display_area
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_end
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_4_y_buf_init
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[4f3]"></a>window_move_scroll_start</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = window_move_scroll_start &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move_msg
</UL>

<P><STRONG><a name="[4ea]"></a>lcd_display</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = lcd_display &rArr; ui_display
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
</UL>

<P><STRONG><a name="[4fa]"></a>window_clear</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = window_clear &rArr; ui_draw_clear_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_background_color
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
</UL>
<BR>[Called By]<UL><LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
</UL>

<P><STRONG><a name="[4e7]"></a>window_delay</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_self
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_handler
</UL>

<P><STRONG><a name="[538]"></a>get_backlight_timeout</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_touch_click
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
</UL>

<P><STRONG><a name="[4ff]"></a>close_window_act_timer</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = close_window_act_timer &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_touch_click
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_act
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_act
</UL>

<P><STRONG><a name="[4e9]"></a>window_event_display</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
</UL>

<P><STRONG><a name="[4ed]"></a>window_display</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = window_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_move
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_click
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_touch_move
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_window_display
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_add
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_cover
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_refresh
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_home
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>

<P><STRONG><a name="[4f2]"></a>window_display_switch</STRONG> (Thumb, 204 bytes, Stack size 48 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_buf_switch
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait_set
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
</UL>
<BR>[Called By]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_self
</UL>

<P><STRONG><a name="[4e6]"></a>window_move_display</STRONG> (Thumb, 148 bytes, Stack size 56 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_handler
</UL>

<P><STRONG><a name="[483]"></a>get_top_window</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_ota_data
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
</UL>

<P><STRONG><a name="[4ef]"></a>window_switch</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_touch_move
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_act
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_touch_move
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_act
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_touch_click
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_touch_move
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_O2_cmd
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_act
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_move
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_key1_short
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_click_select
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_key_short
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_act
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_act
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_photograph
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_key1_short
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_touch_click
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_ble_connect_status
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_app_sport_cmd
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_touch_click
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_act
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_move
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_touch_click
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_touch_click
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QR_code_window_touch_click
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QR_code_window_act
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_click
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_touch_move
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_touch_move
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_touch_move
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_touch_click
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_act
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_key_short
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_app_test
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_timeout
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_act
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_go_home
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_act
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_go_home
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_act
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_touch_move
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_act
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_ble_connect_status
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_act
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_timeout
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_key1_short
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_ble_connect_status
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_touch_click
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_call_cmd
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_act
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_battery_charger
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_act
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_click
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_act
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_key1_short
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_click
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_act
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_touch_move
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_touch_click
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_touch_move
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_ble_connect_status
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_act
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_act
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_woman_alarm
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_OTA
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_test
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_BP_cmd
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_O2_cmd
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_touch_move
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_sport
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_drink_alarm
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_find_device
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_photograph
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_target_finish
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_low_power_alarm
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_reboot
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_sedentary_reminder
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_alarm
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_call
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_message
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_language
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_bt_pair
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_key1_long
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_key1_short
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_end
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_touch_click
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_key1_short
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move_msg
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_click
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_go_home
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_touch_move
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_touch_move
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_act
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_touch_click
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_touch_move
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_touch_move
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_act
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_touch_click
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_touch_move
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_BP_cmd
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_act
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_touch_click
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_touch_move
</UL>

<P><STRONG><a name="[507]"></a>window_switch_handler</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = window_switch_handler &rArr; window_layer_add &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete_repeat
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_add
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_cover
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_home
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_end
</UL>

<P><STRONG><a name="[547]"></a>window_go_home_set_lock</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_exit
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_init
</UL>

<P><STRONG><a name="[528]"></a>get_window_layer</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_act
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_act
</UL>

<P><STRONG><a name="[527]"></a>get_window_num</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_touch_move
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_act
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_move
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_touch_move
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_touch_move
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_touch_move
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_touch_move
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_touch_move
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_touch_move
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_touch_move
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_act
</UL>

<P><STRONG><a name="[4e1]"></a>window_struct_init</STRONG> (Thumb, 98 bytes, Stack size 20 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = window_struct_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_struct_init
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_struct_init
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
</UL>

<P><STRONG><a name="[50b]"></a>window_manager_init</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = window_manager_init &rArr; init_all_windows &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_clear
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
</UL>
<BR>[Called By]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_thread_init
</UL>

<P><STRONG><a name="[2a4]"></a>send_window_event</STRONG> (Thumb, 196 bytes, Stack size 24 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_battery_info
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_power_off_timer_handler
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_timer_handler
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_heart_handler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bp_real_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_real_handler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_real_handler
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_long_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_connect_init
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_read_result_handler
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_check_exist
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_callback
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_ota_data
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_woman_stage_info_from_app
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_app_test_from_app
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_real_O2_from_app
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_real_BP_from_app
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_app_sport_from_app
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_watch_setting_from_app
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_find_device_from_app
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_photograph_from_app
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_unit_setting_from_app
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_pair_finish_from_app
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_shutdown_from_app
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_music_content_from_app
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_reset_from_app
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_forget_disturb_from_app
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_sitting_remind_from_app
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_set_target_from_app
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_control_from_app
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_app
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_alarmInfo_from_app
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_weather_from_app
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_timeInfo_from_app
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_language_setting_from_app
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_index_set
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_check
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_check
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shake_arithmetic
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lift_wrist_arithmetic
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_arithmetic_24H_data_timer_handler
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sport_steps
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_alarm
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_reminder_check
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_compare
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_compare
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_compare0_timer_handler
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_heart_touch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_act
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_move
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_key1_short
<LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move_speed
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move_time
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_click_select
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_key_short
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_click
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_act
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_act
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_key1_short
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_act
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_app_sport_cmd
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_key_short
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_touch_click
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_act
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_act
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_touch_click
<LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_touch_click
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_click_event
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_move_event
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_touch_click
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_act
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_app_test
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_touch_click
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_act
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_act
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_window_refresh
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_timeout_timer_handler
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_go_home_timer_handler
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_act_timer_handler
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_light_on
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_handler
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_act
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_act
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_touch_click
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_message
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_click
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_message
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_touch_move
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_heart_touch
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_real_heart
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_act
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_heart_touch
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_act
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27_act
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_26_act
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23_act
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22_act
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_key1_short
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_act
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_display
</UL>

<P><STRONG><a name="[381]"></a>lcd_status_check</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_wakeup
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_open
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_callback
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_act
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_app_sport_cmd
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_battery_charger
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_woman_alarm
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_OTA
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_test
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_BP_cmd
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_O2_cmd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_sport
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_drink_alarm
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_find_device
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_photograph
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_target_finish
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_low_power_alarm
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_reboot
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_light_on
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_sedentary_reminder
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_alarm
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_call
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_message
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_language
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_bt_pair
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_key1_short
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_message
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_message
</UL>

<P><STRONG><a name="[1d2]"></a>window_event_timer_handler</STRONG> (Thumb, 210 bytes, Stack size 80 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = window_event_timer_handler &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_event
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_window_event_exist
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_act_timer_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[1d3]"></a>window_act_timer_handler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = window_act_timer_handler &rArr; window_event_timer_handler &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[50f]"></a>open_window_act_timer</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_init
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_heart_touch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_real_heart
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_init
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_touch_click
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_init
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_act
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_init
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_init
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_act
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_init
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_act
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_act
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_touch_click
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QR_code_window_init
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_act
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_init
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_init
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_init
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_touch_click
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_init
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_init
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_act
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_init
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_init
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_act
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_init
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_init
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_init
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_act
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_init
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_act
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_init
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_heart_touch
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_real_heart
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_heart_touch
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_real_heart
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_act
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_init
</UL>

<P><STRONG><a name="[510]"></a>set_backlight_timeout</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_backlight_timeout &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
</UL>
<BR>[Called By]<UL><LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_act
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_touch_click
</UL>

<P><STRONG><a name="[4f0]"></a>window_move_end</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = window_move_end &rArr; window_switch_handler &rArr; window_layer_add &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>

<P><STRONG><a name="[1d5]"></a>window_go_home_timer_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = window_go_home_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[1d4]"></a>window_timeout_timer_handler</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = window_timeout_timer_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.data)
</UL>
<P><STRONG><a name="[511]"></a>window_event_timeout_root</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = window_event_timeout_root &rArr; TP_enter_deep_sleep_mode &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_move_info
</UL>
<BR>[Called By]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_timeout
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_force_timeout
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout
</UL>

<P><STRONG><a name="[514]"></a>window_thread_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, window_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = window_thread_init &rArr; window_manager_init &rArr; init_all_windows &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_timer_thread.o(.text)
</UL>
<P><STRONG><a name="[40a]"></a>GUI_Init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, window_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GUI_Init &rArr; sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[515]"></a>data_manager_thread_init</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, data_manager_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = data_manager_thread_init &rArr; init_data_manager &rArr; block_check_patch_img_OTA &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_table_init
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_thread_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager_timer_thread.o(.text)
</UL>
<P><STRONG><a name="[516]"></a>data_manager_timer_thread_create</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, data_manager_timer_thread.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>

<P><STRONG><a name="[40b]"></a>mix_timer_thread_create</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mix_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mix_timer_thread_create &rArr; sys_timer_thread_create
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
</UL>
<BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[51d]"></a>main_window_get_hour</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
</UL>

<P><STRONG><a name="[4d5]"></a>get_sys_time_info</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_sys_time_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[6a]"></a>main_window_22_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_window_22_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[6b]"></a>main_window_23_act</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_window_23_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[69]"></a>main_window_26_act</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_window_26_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[67]"></a>main_window_27_act</STRONG> (Thumb, 98 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_window_27_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[68]"></a>main_window_28_act</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main_window_28_act &rArr; ui_draw_picture_ex_once
</UL>
<BR>[Calls]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_once
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[4ee]"></a>main_window_y_buf_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = main_window_y_buf_init &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_top_window
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_refresh
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_init
</UL>

<P><STRONG><a name="[4ec]"></a>main_window_4_y_buf_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main_window_4_y_buf_init &rArr; watchface_4_cmd_copy &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>

<P><STRONG><a name="[465]"></a>main_window_index_set</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = main_window_index_set &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
</UL>

<P><STRONG><a name="[48b]"></a>ota_check</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, ota_updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ota_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
</UL>

<P><STRONG><a name="[48c]"></a>ota_updata</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ota_updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = ota_updata &rArr; ota_data_move &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[524]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_move
<LI><a href="#[523]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_data
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_timer_handler
</UL>

<P><STRONG><a name="[437]"></a>block_check_patch_img_OTA</STRONG> (Thumb, 132 bytes, Stack size 296 bytes, ota_updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = block_check_patch_img_OTA &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_SystemReset
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDG_Disable
</UL>
<BR>[Called By]<UL><LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_data_manager
</UL>

<P><STRONG><a name="[526]"></a>BP_window_display_line</STRONG> (Thumb, 366 bytes, Stack size 32 bytes, bp_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = BP_window_display_line &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
</UL>

<P><STRONG><a name="[52c]"></a>heart_window_display_line</STRONG> (Thumb, 124 bytes, Stack size 56 bytes, heart_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = heart_window_display_line &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
</UL>

<P><STRONG><a name="[4f5]"></a>more_font_to_pic_init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = more_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_restore
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[53a]"></a>more_display_block_set</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, more_info_window.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
</UL>

<P><STRONG><a name="[521]"></a>more_info_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, more_info_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_touch_move
</UL>

<P><STRONG><a name="[53b]"></a>self_window_display</STRONG> (Thumb, 430 bytes, Stack size 144 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = self_window_display &rArr; GUI_Font_pic_display &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_restore
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_window_display
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_window_display
</UL>

<P><STRONG><a name="[540]"></a>self_window_touch_click</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = self_window_touch_click
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_window_touch_click
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_window_touch_click
</UL>

<P><STRONG><a name="[541]"></a>self_window_touch_move</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = self_window_touch_move &rArr; window_move_self &rArr; window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_self
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_window_touch_move
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_window_touch_move
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_move
</UL>

<P><STRONG><a name="[542]"></a>get_stopwatch_time</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_stopwatch_time
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_touch_click
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_exit
</UL>

<P><STRONG><a name="[6a7]"></a>stopwatch_data_clear</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stopwatch_window.o(.text), UNUSED)

<P><STRONG><a name="[4e2]"></a>watchface_select_window_struct_init</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, watchface_select_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = watchface_select_window_struct_init &rArr; window_struct_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_struct_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
</UL>

<P><STRONG><a name="[512]"></a>app_sport_cmd_handler</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sport_cmd_handler &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_app_sport_cmd
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_sport
</UL>

<P><STRONG><a name="[6a8]"></a>get_mix_sport_result_info</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sport_info_data_window.o(.text), UNUSED)

<P><STRONG><a name="[54b]"></a>sport_time_get</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = sport_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
</UL>
<BR>[Called By]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
</UL>

<P><STRONG><a name="[54c]"></a>sport_status_set</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = sport_status_set &rArr; mix_sport_stop &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_stop
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_continue
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_pause
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_start
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_time_get
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_go_home_set_lock
</UL>
<BR>[Called By]<UL><LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_window_touch_click
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_touch_click
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_key1_short
</UL>

<P><STRONG><a name="[4f6]"></a>sport_font_to_pic_init</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, sport_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[522]"></a>sport_info_init</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sport_info_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_window_touch_click
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_touch_click
</UL>

<P><STRONG><a name="[55e]"></a>O2_window_display_line</STRONG> (Thumb, 136 bytes, Stack size 48 bytes, o2_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328 + Unknown Stack Size
<LI>Call Chain = O2_window_display_line &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
</UL>

<P><STRONG><a name="[354]"></a>battery_charging_display</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, battery_charging_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448 + Unknown Stack Size
<LI>Call Chain = battery_charging_display &rArr; battery_charging_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
</UL>

<P><STRONG><a name="[356]"></a>battery_charging_picture_display</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, battery_charging_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = battery_charging_picture_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
</UL>

<P><STRONG><a name="[562]"></a>low_power_display</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, low_power_window.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
</UL>

<P><STRONG><a name="[564]"></a>weather_pic_get</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, weather_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
</UL>

<P><STRONG><a name="[513]"></a>touch_label_lock</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, window_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
</UL>

<P><STRONG><a name="[57d]"></a>touch_move_get_start_coord</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, window_touch.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
</UL>

<P><STRONG><a name="[380]"></a>touch_handler</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, window_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touch_handler &rArr; touch_release &rArr; send_touch_click_event &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_release
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_press
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_timer_handler
</UL>

<P><STRONG><a name="[569]"></a>touch_info_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, window_touch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>

<P><STRONG><a name="[323]"></a>factory_test_send_data</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = factory_test_send_data &rArr; uart_senddata_continuous
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_senddata_continuous
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sc7a20_device
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_version
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adc
<LI><a href="#[56b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_ble_mac
<LI><a href="#[56a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_ble_rssi
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[56a]"></a>factory_test_ble_rssi</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, factory_test.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
</UL>

<P><STRONG><a name="[56b]"></a>factory_test_ble_mac</STRONG> (Thumb, 44 bytes, Stack size 48 bytes, factory_test.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
</UL>

<P><STRONG><a name="[56c]"></a>factory_test_adc</STRONG> (Thumb, 52 bytes, Stack size 48 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = factory_test_adc &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
<LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[56d]"></a>factory_test_version</STRONG> (Thumb, 66 bytes, Stack size 48 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = factory_test_version &rArr; factory_test_send_data &rArr; uart_senddata_continuous
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_task
</UL>

<P><STRONG><a name="[36e]"></a>factory_test_receive_data_handler</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = factory_test_receive_data_handler &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_Handler
</UL>

<P><STRONG><a name="[42c]"></a>factory_test_pin_status_get</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = factory_test_pin_status_get &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_ram_struct
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[1a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free_task_function
</UL>

<P><STRONG><a name="[409]"></a>factory_test_check</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = factory_test_check &rArr; driver_uart_init &rArr; board_uart_init
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_uart_init
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wdt_init
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_system_mode
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_task_create
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_sched_start
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_thread_create
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_timer_thread_init
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[4e3]"></a>woman_child_window_struct_init</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = woman_child_window_struct_init &rArr; window_struct_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_struct_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
</UL>

<P><STRONG><a name="[4f7]"></a>language_font_to_pic_init</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = language_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[577]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_language_check_type
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[1b]"></a>FontMenu_find_char</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, fontmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FontMenu_find_char
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gui_font_digit.o(.text)
</UL>
<P><STRONG><a name="[6a9]"></a>GUI_Font_start_show_Menu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_font_digit.o(.text), UNUSED)

<P><STRONG><a name="[6aa]"></a>GUI_Font_end_show_Menu</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gui_font_digit.o(.text), UNUSED)

<P><STRONG><a name="[57c]"></a>GUI_Font_pic_get</STRONG> (Thumb, 62 bytes, Stack size 20 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GUI_Font_pic_get
</UL>
<BR>[Called By]<UL><LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_display
</UL>

<P><STRONG><a name="[53f]"></a>GUI_Font_pic_display</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_Font_pic_display &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_pic_display
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
</UL>

<P><STRONG><a name="[579]"></a>GUI_Font_pic_display_hcenter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = GUI_Font_pic_display_hcenter &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_pic_display
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_display
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_display
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_self_window_display
</UL>

<P><STRONG><a name="[52b]"></a>GUI_Font_Digit_DispStringAt</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
</UL>

<P><STRONG><a name="[539]"></a>GUI_Font_to_pic</STRONG> (Thumb, 218 bytes, Stack size 48 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_font_to_pic_init
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
</UL>

<P><STRONG><a name="[4f4]"></a>GUI_Font_pic_lable_check</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = GUI_Font_pic_lable_check &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[4f9]"></a>GUI_Font_pic_label_set</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_Font_pic_label_set &rArr; block_spi_flash_write &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_font_to_pic_init
</UL>

<P><STRONG><a name="[585]"></a>GUI_Font_Digit_DispStringAt_AutoLine</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, gui_font_digit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
</UL>

<P><STRONG><a name="[4dc]"></a>GUI_Font_Digit_DispStringAt_Hcenter</STRONG> (Thumb, 172 bytes, Stack size 168 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len_
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_display
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_display
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_display
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_display
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_display
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_display
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_display
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;logo_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_display
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
</UL>

<P><STRONG><a name="[586]"></a>GUI_Font_Digit_DispStringAt_Hcenter_Point</STRONG> (Thumb, 166 bytes, Stack size 152 bytes, gui_font_digit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len_
</UL>

<P><STRONG><a name="[4dd]"></a>GUI_Font_Digit_Get_len</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_Font_Digit_Get_len &rArr; GUI_Font_Digit_Get_len_ &rArr; ui_font_utf8_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len_
</UL>
<BR>[Called By]<UL><LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
</UL>

<P><STRONG><a name="[519]"></a>GUI_Picture_Digit_DispStringAt</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gui_picture_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
</UL>
<BR>[Called By]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display_line
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display_line
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[588]"></a>GUI_Picture_Digit_DispStringAt_AutoLine</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gui_picture_digit.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
</UL>

<P><STRONG><a name="[563]"></a>GUI_Picture_Digit_DispStringAt_Hcenter_Point</STRONG> (Thumb, 120 bytes, Stack size 48 bytes, gui_picture_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Picture_Digit_DispStringAt_Hcenter_Point &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
</UL>
<BR>[Called By]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
</UL>

<P><STRONG><a name="[525]"></a>GUI_Picture_Digit_DispStringAt_Hcenter</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, gui_picture_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GUI_Picture_Digit_DispStringAt_Hcenter &rArr; GUI_Picture_Digit_DispStringAt_Hcenter_Point &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter_Point
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_display
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
</UL>

<P><STRONG><a name="[52d]"></a>GUI_Picture_Digit_DispStringAt_Right</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, gui_picture_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = GUI_Picture_Digit_DispStringAt_Right &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
</UL>

<P><STRONG><a name="[51a]"></a>ui_draw_plugs</STRONG> (Thumb, 382 bytes, Stack size 96 bytes, ui_plug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_26
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[543]"></a>ui_draw_progress_bar_up</STRONG> (Thumb, 412 bytes, Stack size 88 bytes, ui_plug.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = ui_draw_progress_bar_up &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_display
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
</UL>

<P><STRONG><a name="[589]"></a>gap_set_lps_bootup_active_time</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[6ab]"></a>lps_get_wakeup_time</STRONG> (Thumb, 22 bytes, Stack size 12 bytes, gap_vendor_cmd.o(.text), UNUSED)

<P><STRONG><a name="[58b]"></a>le_vendor_trigger_internal_32k_calibration</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[595]"></a>le_handle_vendor_cmd_rsp</STRONG> (Thumb, 250 bytes, Stack size 32 bytes, gap_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = le_handle_vendor_cmd_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[58c]"></a>gap_vendor_cmd_req</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[597]"></a>le_handle_vendor_evt_info</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_handle_vendor_evt_info
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[58d]"></a>le_vendor_modify_bt_le_fw_policy</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[58f]"></a>le_vendor_check_priority_level</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[58e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_set_priority
</UL>

<P><STRONG><a name="[58e]"></a>le_vendor_set_priority</STRONG> (Thumb, 336 bytes, Stack size 56 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
<LI><a href="#[58f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_vendor_check_priority_level
</UL>

<P><STRONG><a name="[3d1]"></a>le_vendor_more_precise_32k_option</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_vendor_more_precise_32k_option
</UL>
<BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_dev_state_evt
</UL>

<P><STRONG><a name="[590]"></a>le_vendor_measure_master_clk_freq_mode</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[591]"></a>le_vendor_record_ce_info</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[592]"></a>le_vendor_get_ce_info_addr</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[593]"></a>le_vendor_shift_frequency_band</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, gap_vendor_cmd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
</UL>

<P><STRONG><a name="[594]"></a>gap_lib_handle_btif_msg</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = gap_lib_handle_btif_msg &rArr; le_handle_read_remote_version_btif_msg &rArr; le_handle_read_remote_version_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[598]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_handle_btif_msg
<LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_rsp
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_ind
<LI><a href="#[596]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_sw_reset_rsp
<LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_read_remote_version_btif_msg
<LI><a href="#[597]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_vendor_evt_info
<LI><a href="#[595]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_vendor_cmd_rsp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> gap_lib.o(.text)
</UL>
<P><STRONG><a name="[3ef]"></a>gap_lib_init</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, gap_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = gap_lib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[59c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_register_extend_cb
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
</UL>

<P><STRONG><a name="[59d]"></a>gap_sw_reset_req</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[59e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_active_link_num
<LI><a href="#[59f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_sw_reset_req
</UL>

<P><STRONG><a name="[596]"></a>le_handle_sw_reset_rsp</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = le_handle_sw_reset_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_send_dev_state
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[5a1]"></a>le_check_privacy_bond</STRONG> (Thumb, 106 bytes, Stack size 56 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[3d3]"></a>le_bond_just_work_confirm</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = le_bond_just_work_confirm
</UL>
<BR>[Calls]<UL><LI><a href="#[5a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_just_work_req_cfm
</UL>
<BR>[Called By]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_handle_gap_msg
</UL>

<P><STRONG><a name="[5a4]"></a>le_gen_rand_addr</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[5a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_le_gen_rand_addr
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_bdaddr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
</UL>

<P><STRONG><a name="[5a6]"></a>patch_le_link_disconnected</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = patch_le_link_disconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[5a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_send_conn_state_msg
<LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_find_by_link_id
<LI><a href="#[5a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_release
<LI><a href="#[5a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_send_dev_state
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mem_free
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[599]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_rsp
<LI><a href="#[59a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_handle_disconnect_ind
</UL>

<P><STRONG><a name="[599]"></a>patch_le_link_handle_disconnect_rsp</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = patch_le_link_handle_disconnect_rsp &rArr; patch_le_link_disconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[59a]"></a>patch_le_link_handle_disconnect_ind</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = patch_le_link_handle_disconnect_ind &rArr; patch_le_link_disconnected
</UL>
<BR>[Calls]<UL><LI><a href="#[5aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_le_disconn_cfm
<LI><a href="#[5a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;patch_le_link_disconnected
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[5ab]"></a>le_bond_get_sec_level</STRONG> (Thumb, 72 bytes, Stack size 48 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_key
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_conn_addr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[6ac]"></a>le_get_dev_bond_info_len</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gap_lib_patch.o(.text), UNUSED)

<P><STRONG><a name="[5ad]"></a>le_get_dev_bond_info</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_flash_load
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[5af]"></a>le_key_entry_init</STRONG> (Thumb, 328 bytes, Stack size 168 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_read_le_cccd_length
<LI><a href="#[5b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_remote_csrk
<LI><a href="#[5b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_local_csrk
<LI><a href="#[5b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_remote_irk
<LI><a href="#[5b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_remote_ltk
<LI><a href="#[5b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_local_ltk
<LI><a href="#[5b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_load_le_remote_bd
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_bdaddr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_set_dev_bond_info
</UL>

<P><STRONG><a name="[5b7]"></a>le_set_dev_bond_info</STRONG> (Thumb, 214 bytes, Stack size 40 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;imp_flash_save
<LI><a href="#[5bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_priority_queue_add
<LI><a href="#[5b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_entry_by_aes
<LI><a href="#[5ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_get_low_priority_bond
<LI><a href="#[5b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_allocate_key_entry
<LI><a href="#[5ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_find_key_entry
<LI><a href="#[5bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_bond_delete_by_idx
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[5af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_key_entry_init
</UL>

<P><STRONG><a name="[5be]"></a>btif_read_remote_version_req</STRONG> (Thumb, 28 bytes, Stack size 72 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_send_cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[5c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_read_remote_version
</UL>

<P><STRONG><a name="[5c0]"></a>le_read_remote_version</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_check_conn_id_internal
<LI><a href="#[5be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_read_remote_version_req
</UL>

<P><STRONG><a name="[5c2]"></a>le_handle_read_remote_version_rsp</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = le_handle_read_remote_version_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[5a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_find_by_link_id
</UL>
<BR>[Called By]<UL><LI><a href="#[59b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_read_remote_version_btif_msg
</UL>

<P><STRONG><a name="[59b]"></a>le_handle_read_remote_version_btif_msg</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, gap_lib_patch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = le_handle_read_remote_version_btif_msg &rArr; le_handle_read_remote_version_rsp
</UL>
<BR>[Calls]<UL><LI><a href="#[5c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_handle_read_remote_version_rsp
</UL>
<BR>[Called By]<UL><LI><a href="#[594]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_lib_handle_btif_msg
</UL>

<P><STRONG><a name="[5c3]"></a>le_write_authen_payload_timeout</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, gap_lib_patch.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_link_check_conn_id_internal
<LI><a href="#[58a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btif_vendor_cmd_req
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>

<P><STRONG><a name="[326]"></a>ADC_CalibrationInit</STRONG> (Thumb, 336 bytes, Stack size 16 bytes, adc_k_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_CalibrationInit &rArr; ADC_GetKValue
</UL>
<BR>[Calls]<UL><LI><a href="#[5c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetKValue
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_driver_init
</UL>

<P><STRONG><a name="[28d]"></a>ADC_GetVoltage</STRONG> (Thumb, 150 bytes, Stack size 24 bytes, adc_k_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ADC_GetVoltage
</UL>
<BR>[Calls]<UL><LI><a href="#[5c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetKVoltage
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetRes
</UL>

<P><STRONG><a name="[6ad]"></a>ADC_GetResistance</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, adc_k_lib.o(.text), UNUSED)

<P><STRONG><a name="[5cb]"></a>GUI_GB2312_HZ_DispStringAt</STRONG> (Thumb, 276 bytes, Stack size 64 bytes, gui_font_unicode.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer
</UL>

<P><STRONG><a name="[533]"></a>GUI_HZ_DispStringAt</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
</UL>

<P><STRONG><a name="[52f]"></a>GUI_HZ_DispStringAt_AutoLine</STRONG> (Thumb, 18 bytes, Stack size 32 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = GUI_HZ_DispStringAt_AutoLine &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[55c]"></a>GUI_Get_String_len</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GUI_Get_String_len &rArr; get_gb2312_index
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_get_utf8_size
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gb2312_index
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
</UL>

<P><STRONG><a name="[52e]"></a>GUI_HZ_DispStringAt_Hcenter</STRONG> (Thumb, 156 bytes, Stack size 160 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520<LI>Call Chain = GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt
</UL>
<BR>[Called By]<UL><LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[5ce]"></a>ui_set_draw_mode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
</UL>

<P><STRONG><a name="[5dc]"></a>ui_get_draw_mode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
</UL>

<P><STRONG><a name="[4bf]"></a>ui_set_color</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_rectangle_display
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[6ae]"></a>ui_set_color_force</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(.text), UNUSED)

<P><STRONG><a name="[5d3]"></a>ui_get_color</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_vertical_line
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_point
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_part
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
</UL>

<P><STRONG><a name="[4c0]"></a>ui_lock_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_rectangle_display
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
</UL>

<P><STRONG><a name="[4c2]"></a>ui_unlock_color</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_rectangle_display
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
</UL>

<P><STRONG><a name="[5d7]"></a>ui_get_lock_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
</UL>

<P><STRONG><a name="[4fb]"></a>ui_set_background_color</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_clear
</UL>

<P><STRONG><a name="[5db]"></a>ui_get_background_color</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
</UL>

<P><STRONG><a name="[5c9]"></a>ui_set_display_x_pos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_vertical_line
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_4
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[5ca]"></a>ui_set_display_y_pos</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_vertical_line
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_4
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[549]"></a>ui_get_display_x_pos</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
</UL>

<P><STRONG><a name="[530]"></a>ui_get_display_y_pos</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
</UL>

<P><STRONG><a name="[6af]"></a>ui_init_state</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ui.o(.text), UNUSED)

<P><STRONG><a name="[2da]"></a>ui_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_init &rArr; WRxLib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_background_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRxLib_init
<LI><a href="#[5ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_draw_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[4b3]"></a>ui_layout_right_enable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
</UL>

<P><STRONG><a name="[4b5]"></a>ui_layout_right_disable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_restore
</UL>

<P><STRONG><a name="[2db]"></a>ui_display_buf_switch</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_open
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
</UL>

<P><STRONG><a name="[4da]"></a>ui_display_block_set</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_act
<LI><a href="#[53a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_display_block_set
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
</UL>

<P><STRONG><a name="[500]"></a>ui_display_switch_y_buf_init</STRONG> (Thumb, 60 bytes, Stack size 88 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_window_init
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_window_init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_init
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
</UL>

<P><STRONG><a name="[350]"></a>ui_display_y_buf_init</STRONG> (Thumb, 52 bytes, Stack size 88 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
</UL>

<P><STRONG><a name="[351]"></a>get_display_info</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_check
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_self_window_display
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_cmd_copy
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_get
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_display
</UL>

<P><STRONG><a name="[51f]"></a>ui_part_area_set</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui_part_area_set
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
</UL>

<P><STRONG><a name="[520]"></a>ui_part_area_display</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ui_part_area_display
</UL>
<BR>[Called By]<UL><LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
</UL>

<P><STRONG><a name="[352]"></a>ui_display_info_set</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ui_display_info_set
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[539]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_to_pic
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_timer_handler
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_handler
</UL>

<P><STRONG><a name="[355]"></a>ui_display</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui_display
</UL>
<BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_manager_init
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display
</UL>

<P><STRONG><a name="[5d2]"></a>ui_draw_point</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
</UL>

<P><STRONG><a name="[532]"></a>ui_draw_horizontal_line</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ui_draw_horizontal_line &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
</UL>

<P><STRONG><a name="[561]"></a>ui_draw_vertical_line</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ui_draw_vertical_line &rArr; _ui_draw_vertical_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_vertical_line
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
</UL>

<P><STRONG><a name="[52a]"></a>ui_draw_line</STRONG> (Thumb, 266 bytes, Stack size 56 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ui_draw_line &rArr; _ui_draw_vertical_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_vertical_line
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_point
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
</UL>

<P><STRONG><a name="[4d0]"></a>ui_draw_line_AA_f</STRONG> (Thumb, 1052 bytes, Stack size 72 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ui_draw_line_AA_f &rArr; _ui_draw_point_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_point_AA
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
</UL>

<P><STRONG><a name="[4cc]"></a>ui_draw_line_AA</STRONG> (Thumb, 802 bytes, Stack size 64 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ui_draw_line_AA &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_vertical_line
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_point_AA
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_vol_ctrl
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
</UL>

<P><STRONG><a name="[4c1]"></a>ui_draw_rectangle</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ui_draw_rectangle &rArr; _ui_draw_vertical_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_vertical_line
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
</UL>

<P><STRONG><a name="[4c3]"></a>ui_draw_fill_rectangle</STRONG> (Thumb, 192 bytes, Stack size 40 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ui_draw_fill_rectangle &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_window_display
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_display
<LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_rectangle_display
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_line_bar_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[5d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_rectangle
</UL>

<P><STRONG><a name="[5d6]"></a>ui_draw_clear_rectangle</STRONG> (Thumb, 76 bytes, Stack size 32 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[5d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_lock_state
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
</UL>

<P><STRONG><a name="[4fc]"></a>ui_draw_clear_screen</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ui_draw_clear_screen
</UL>
<BR>[Calls]<UL><LI><a href="#[5d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_language_window_display
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_display
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_clear
</UL>

<P><STRONG><a name="[5c8]"></a>ui_draw_buffer</STRONG> (Thumb, 38 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[5dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_part
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[5cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_GB2312_HZ_DispStringAt
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[584]"></a>ui_draw_buffer_bit</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_part_AA
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_4
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
</UL>
<BR>[Called By]<UL><LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
</UL>

<P><STRONG><a name="[5e6]"></a>_ui_draw_picture_ex_set_ptr_center_default</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
<LI><a href="#[5cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRxLib_init
</UL>

<P><STRONG><a name="[4b9]"></a>ui_draw_picture_ex</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
</UL>
<BR>[Called By]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_vol_ctrl
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_display
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_display
<LI><a href="#[587]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Picture_Digit_DisplayAt
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_pic_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pointer_pos
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic_pos
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_display
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_27
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_26
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
<LI><a href="#[5ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_cond2
</UL>

<P><STRONG><a name="[6b0]"></a>ui_draw_picture_ex_set_ptr_center</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, ui_draw.o(.text), UNUSED)

<P><STRONG><a name="[6b1]"></a>ui_draw_picture_ex_set_chk_area</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui_draw.o(.text), UNUSED)

<P><STRONG><a name="[353]"></a>ui_draw_picture_ex_hcenter</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_picture_display
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_display
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_select_window_display
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QR_code_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_display
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sedentary_remind_window_display
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_window_display
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_display
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[582]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_pic_display
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_watchface_zoom_pic
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[5e9]"></a>ui_draw_black_once</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[51c]"></a>ui_draw_picture_ex_once</STRONG> (Thumb, 600 bytes, Stack size 64 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ui_draw_picture_ex_once
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_28_act
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40_act
<LI><a href="#[5ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_once_hcenter
</UL>

<P><STRONG><a name="[5ea]"></a>ui_draw_picture_ex_once_hcenter</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_once
</UL>

<P><STRONG><a name="[5ec]"></a>ui_draw_picture_cond</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_cond_part
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_cond
</UL>

<P><STRONG><a name="[5ee]"></a>ui_draw_picture_cond2</STRONG> (Thumb, 104 bytes, Stack size 32 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>

<P><STRONG><a name="[4c5]"></a>ui_draw_circle_AA</STRONG> (Thumb, 760 bytes, Stack size 96 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ui_draw_circle_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_vol_ctrl
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display_start
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_circle_display
</UL>

<P><STRONG><a name="[4bd]"></a>ui_draw_arc_AA</STRONG> (Thumb, 3018 bytes, Stack size 136 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_circle_display
<LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_circle_bar_display
</UL>

<P><STRONG><a name="[5cc]"></a>ui_font_get_utf8_size</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ui_font.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
</UL>

<P><STRONG><a name="[4b0]"></a>ui_font_utf8_to_unicode</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, ui_font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_font_utf8_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[5cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_get_utf8_size
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
<LI><a href="#[583]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_Font_Digit_DisplayAt
<LI><a href="#[581]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len_
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[4b1]"></a>ui_font_unicode_to_utf8</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, ui_font.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_font_unicode_to_utf8
</UL>
<BR>[Called By]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
</UL>

<P><STRONG><a name="[57b]"></a>cirmenu_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ui_cirmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = cirmenu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_init
</UL>

<P><STRONG><a name="[57f]"></a>cirmenu_move_end</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, ui_cirmenu.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
</UL>

<P><STRONG><a name="[57e]"></a>cirmenu_move_update</STRONG> (Thumb, 384 bytes, Stack size 32 bytes, ui_cirmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = cirmenu_move_update &rArr; ui_lib_calc_deg
</UL>
<BR>[Calls]<UL><LI><a href="#[5f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lib_calc_deg
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
</UL>

<P><STRONG><a name="[580]"></a>cirmenu_move_display</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, ui_cirmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = cirmenu_move_display &rArr; cirmenu_move_display_start
</UL>
<BR>[Calls]<UL><LI><a href="#[5f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_display_start
</UL>
<BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;circle_menu_window_touch_move
</UL>

<P><STRONG><a name="[5cd]"></a>WRxLib_init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, wrxlib_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WRxLib_init
</UL>
<BR>[Calls]<UL><LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_set_ptr_center_default
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_init
</UL>

<P><STRONG><a name="[4d6]"></a>__2snprintf</STRONG> (Thumb, 50 bytes, Stack size 40 bytes, __2snprintf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = __2snprintf &rArr; _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;alarm_window_display
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display_line
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_info_window_display
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display_start
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;photograph_child_window_display
<LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;stopwatch_window_display
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_window_display
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_timeout_window_display
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_window_display
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_window_display
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_window_display
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;quick_window_display
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;target_window_display
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_window_display
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_device_window_display
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drink_alarm_window_display
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_window_display
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pair_window_display
<LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_window_display
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;goodbye_window_display
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone_window_display
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_reset_window_display
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;brightness_window_display
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;about_window_display
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_child_window_display
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display_line
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_info_window_display
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_info_window_display
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_22
</UL>

<P><STRONG><a name="[5f5]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[5f6]"></a>_printf_post_padding</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, _printf_pad.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _printf_post_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
<LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
</UL>

<P><STRONG><a name="[5f7]"></a>_printf_truncate_signed</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[5f8]"></a>_printf_truncate_unsigned</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, _printf_truncate.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[5f4]"></a>_printf_str</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, _printf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>

<P><STRONG><a name="[228]"></a>_printf_int_dec</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, _printf_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _printf_int_dec &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
<LI><a href="#[5f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_signed
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_u
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_d
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_i
</UL>

<P><STRONG><a name="[5fa]"></a>_printf_wctomb</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, _printf_wctomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[22c]"></a>_printf_int_oct</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, _printf_oct_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_oct &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_o
</UL>

<P><STRONG><a name="[6b2]"></a>_printf_longlong_oct</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_oct_int.o(.text), UNUSED)

<P><STRONG><a name="[22e]"></a>_printf_int_hex</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, _printf_hex_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _printf_int_hex &rArr; _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_common
<LI><a href="#[5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_truncate_unsigned
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_x
</UL>

<P><STRONG><a name="[6b3]"></a>_printf_longlong_hex</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, _printf_hex_int.o(.text), UNUSED)

<P><STRONG><a name="[5fc]"></a>__printf</STRONG> (Thumb, 388 bytes, Stack size 40 bytes, __printf_flags_ss_wp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_percent
<LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
</UL>
<BR>[Called By]<UL><LI><a href="#[5f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char_common
</UL>

<P><STRONG><a name="[3f3]"></a>__0sscanf</STRONG> (Thumb, 52 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
</UL>

<P><STRONG><a name="[600]"></a>_scanf_int</STRONG> (Thumb, 332 bytes, Stack size 56 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[619]"></a>_scanf_string</STRONG> (Thumb, 224 bytes, Stack size 56 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[24b]"></a>srand</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = srand
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;random_seed_init
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_rand_init
</UL>

<P><STRONG><a name="[238]"></a>_rand_init</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rand.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _rand_init &rArr; srand
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;srand
</UL>
<BR>[Called By]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_rand_2
</UL>

<P><STRONG><a name="[3f2]"></a>strstr</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
</UL>

<P><STRONG><a name="[3f1]"></a>strncasecmp</STRONG> (Thumb, 50 bytes, Stack size 24 bytes, strncasecmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = strncasecmp &rArr; tolower &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
</UL>
<BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
</UL>

<P><STRONG><a name="[298]"></a>localtime</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, localtime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[603]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_localtime_r
</UL>
<BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_get
</UL>

<P><STRONG><a name="[29c]"></a>mktime</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[604]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_time_set
</UL>

<P><STRONG><a name="[605]"></a>__read_errno</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __read_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[607]"></a>__set_errno</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, _rserrno.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __set_errno
</UL>
<BR>[Calls]<UL><LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[602]"></a>tolower</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, tolower.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tolower &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncasecmp
</UL>

<P><STRONG><a name="[5f9]"></a>_printf_int_common</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, _printf_intcommon.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _printf_int_common &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_hex
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_oct
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_int_dec
</UL>

<P><STRONG><a name="[6b4]"></a>__lib_sel_fp_printf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, _printf_fp_dec.o(.text), UNUSED)

<P><STRONG><a name="[60f]"></a>_printf_fp_dec_real</STRONG> (Thumb, 620 bytes, Stack size 104 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[611]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_infnan
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec
</UL>

<P><STRONG><a name="[5f2]"></a>_printf_char_common</STRONG> (Thumb, 32 bytes, Stack size 64 bytes, _printf_char_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = _printf_char_common &rArr; __printf
</UL>
<BR>[Calls]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
</UL>
<BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[5f3]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _sputc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>

<P><STRONG><a name="[1c]"></a>_snputc</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _snputc.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> __2snprintf.o(.text)
</UL>
<P><STRONG><a name="[612]"></a>_printf_cs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_str
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_string
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_char
</UL>

<P><STRONG><a name="[230]"></a>_printf_char</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_char &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_c
</UL>

<P><STRONG><a name="[232]"></a>_printf_string</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_string &rArr; _printf_cs_common &rArr; _printf_str &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[612]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_cs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_s
</UL>

<P><STRONG><a name="[613]"></a>_printf_lcs_common</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>
<BR>[Called By]<UL><LI><a href="#[614]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wstring
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wchar
</UL>

<P><STRONG><a name="[234]"></a>_printf_wchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, _printf_wchar.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = _printf_wchar &rArr; _printf_lcs_common &rArr; _printf_wctomb &rArr; _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lc
</UL>

<P><STRONG><a name="[614]"></a>_printf_wstring</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, _printf_wchar.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[613]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_lcs_common
</UL>

<P><STRONG><a name="[601]"></a>_chval</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[5ff]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[1d]"></a>_sgetc</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[1e]"></a>_sbackspace</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[618]"></a>__strtod_int</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
</UL>

<P><STRONG><a name="[5fb]"></a>_wcrtomb</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, _wcrtomb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _wcrtomb &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[5fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_wctomb
</UL>

<P><STRONG><a name="[603]"></a>_localtime_r</STRONG> (Thumb, 178 bytes, Stack size 16 bytes, localtime_internal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime
</UL>

<P><STRONG><a name="[6b5]"></a>_n$localtime_r</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, localtime_internal.o(.text), UNUSED)

<P><STRONG><a name="[608]"></a>__rt_ctype_table</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, rt_ctype_table.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[5fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_wcrtomb
<LI><a href="#[602]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tolower
<LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[23a]"></a>__rt_locale</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_locale.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_common
<LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
<LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>

<P><STRONG><a name="[606]"></a>__aeabi_errno_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_errno_addr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[6b6]"></a>__errno</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[6b7]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_errno_addr.o(.text), UNUSED)

<P><STRONG><a name="[60e]"></a>_ll_udiv10</STRONG> (Thumb, 138 bytes, Stack size 12 bytes, lludiv10.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[21]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = isspace &rArr; __rt_ctype_table
</UL>
<BR>[Calls]<UL><LI><a href="#[608]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scanf_char.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[611]"></a>_printf_fp_infnan</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, _printf_fp_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _printf_fp_infnan &rArr; _printf_post_padding
</UL>
<BR>[Calls]<UL><LI><a href="#[5f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[5f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[615]"></a>__vfscanf</STRONG> (Thumb, 878 bytes, Stack size 96 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[619]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[600]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[5ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[60a]"></a>_btod_etento</STRONG> (Thumb, 224 bytes, Stack size 72 bytes, bigflt0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[61d]"></a>_scanf_really_real</STRONG> (Thumb, 684 bytes, Stack size 120 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[5fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
<LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
<LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
<LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_locale
</UL>
<BR>[Called By]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>

<P><STRONG><a name="[621]"></a>_scanf_really_hex_real</STRONG> (Thumb, 786 bytes, Stack size 80 bytes, scanf_hexfp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[601]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
<LI><a href="#[622]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>
<BR>[Called By]<UL><LI><a href="#[61f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_hex_real
</UL>

<P><STRONG><a name="[658]"></a>_scanf_really_infnan</STRONG> (Thumb, 292 bytes, Stack size 72 bytes, scanf_infnan.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[61e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_infnan
</UL>

<P><STRONG><a name="[622]"></a>__aeabi_llsl</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[6b8]"></a>_ll_shift_l</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[60b]"></a>_btod_d2e</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e))
<BR><BR>[Calls]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[625]"></a>_d2e_denorm_low</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_denorm_low))
<BR><BR>[Called By]<UL><LI><a href="#[624]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_norm_op1
</UL>

<P><STRONG><a name="[624]"></a>_d2e_norm_op1</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, btod.o(CL$$btod_d2e_norm_op1))
<BR><BR>[Calls]<UL><LI><a href="#[625]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2e_denorm_low
</UL>
<BR>[Called By]<UL><LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
</UL>

<P><STRONG><a name="[628]"></a>__btod_div_common</STRONG> (Thumb, 696 bytes, Stack size 24 bytes, btod.o(CL$$btod_div_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
</UL>

<P><STRONG><a name="[626]"></a>_e2d</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, btod.o(CL$$btod_e2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
</UL>

<P><STRONG><a name="[627]"></a>_e2e</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, btod.o(CL$$btod_e2e))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>

<P><STRONG><a name="[60c]"></a>_btod_ediv</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_ediv))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_ediv &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[61c]"></a>_btod_edivd</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_edivd))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_edivd &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
<LI><a href="#[628]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_div_common
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[60d]"></a>_btod_emul</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emul))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[627]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2e
</UL>
<BR>[Called By]<UL><LI><a href="#[609]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
</UL>

<P><STRONG><a name="[61b]"></a>_btod_emuld</STRONG> (Thumb, 42 bytes, Stack size 28 bytes, btod.o(CL$$btod_emuld))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = _btod_emuld &rArr; _e2d &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[629]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__btod_mult_common
<LI><a href="#[626]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_e2d
</UL>
<BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[629]"></a>__btod_mult_common</STRONG> (Thumb, 580 bytes, Stack size 16 bytes, btod.o(CL$$btod_mult_common))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __btod_mult_common
</UL>
<BR>[Called By]<UL><LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
</UL>

<P><STRONG><a name="[62a]"></a>Hrs3300_adcgain_mode</STRONG> (Thumb, 216 bytes, Stack size 32 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_adcgain_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = Hrs3300_adcgain_mode &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_read_reg
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_normal_power
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[62c]"></a>Hrs3300_agc</STRONG> (Thumb, 712 bytes, Stack size 48 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_agc))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = Hrs3300_agc &rArr; Hrs3300_adcgain_mode &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_open
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_disable
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_chip_enable
<LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_normal_power
<LI><a href="#[62d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_low_power
<LI><a href="#[62e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_hlow_power
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_adcgain_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
</UL>

<P><STRONG><a name="[376]"></a>Hrs3300_alg_get_bp_results</STRONG> (Thumb, 46 bytes, Stack size 12 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_alg_get_bp_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hrs3300_alg_get_bp_results
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
</UL>

<P><STRONG><a name="[375]"></a>Hrs3300_alg_get_results</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_alg_get_results))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Hrs3300_alg_get_results
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
</UL>

<P><STRONG><a name="[379]"></a>Hrs3300_alg_open</STRONG> (Thumb, 482 bytes, Stack size 24 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_alg_open))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = Hrs3300_alg_open &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[62b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_normal_power
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[374]"></a>Hrs3300_alg_send_data</STRONG> (Thumb, 4336 bytes, Stack size 232 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_alg_send_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = Hrs3300_alg_send_data &rArr; Hrs3300_agc &rArr; Hrs3300_adcgain_mode &rArr; Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rand
<LI><a href="#[62f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_bp_age_fn
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_meas_timeout_handler
</UL>

<P><STRONG><a name="[62f]"></a>Hrs3300_bp_age_fn</STRONG> (Thumb, 500 bytes, Stack size 36 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_bp_age_fn))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Hrs3300_bp_age_fn
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
</UL>

<P><STRONG><a name="[62e]"></a>Hrs3300_hlow_power</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_hlow_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Hrs3300_hlow_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[62d]"></a>Hrs3300_low_power</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_low_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = Hrs3300_low_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
</UL>

<P><STRONG><a name="[62b]"></a>Hrs3300_normal_power</STRONG> (Thumb, 262 bytes, Stack size 24 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_normal_power))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = Hrs3300_normal_power &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_open
<LI><a href="#[62c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_agc
<LI><a href="#[62a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_adcgain_mode
</UL>

<P><STRONG><a name="[378]"></a>Hrs3300_set_exinf</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, hrs3300_alg_dynamic.o(i.Hrs3300_set_exinf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Hrs3300_set_exinf
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
</UL>

<P><STRONG><a name="[610]"></a>__ARM_fpclassify</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, fpclassify.o(i.__ARM_fpclassify))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_fpclassify
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[630]"></a>__hardfp___mathlib_tofloat</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, narrow.o(i.__hardfp___mathlib_tofloat))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __hardfp___mathlib_tofloat &rArr; frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[53d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[620]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_narrow
</UL>

<P><STRONG><a name="[39d]"></a>__hardfp_atof</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, atof.o(i.__hardfp_atof))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[605]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__read_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
</UL>

<P><STRONG><a name="[4cb]"></a>__hardfp_cos</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, cos.o(i.__hardfp_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_cos &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
</UL>

<P><STRONG><a name="[638]"></a>__hardfp_ldexp</STRONG> (Thumb, 200 bytes, Stack size 48 bytes, ldexp.o(i.__hardfp_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[632]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
</UL>
<BR>[Called By]<UL><LI><a href="#[623]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__support_ldexp
</UL>

<P><STRONG><a name="[4c8]"></a>__hardfp_sin</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, sin.o(i.__hardfp_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
</UL>

<P><STRONG><a name="[53c]"></a>__hardfp_sqrt</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, sqrt.o(i.__hardfp_sqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __hardfp_sqrt &rArr; _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
</UL>

<P><STRONG><a name="[5ef]"></a>__hardfp_tan</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, tan.o(i.__hardfp_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[607]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__set_errno
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
</UL>

<P><STRONG><a name="[635]"></a>__ieee754_rem_pio2</STRONG> (Thumb, 938 bytes, Stack size 120 bytes, rred.o(i.__ieee754_rem_pio2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[637]"></a>__kernel_cos</STRONG> (Thumb, 322 bytes, Stack size 64 bytes, cos_i.o(i.__kernel_cos))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = __kernel_cos &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[63f]"></a>__kernel_poly</STRONG> (Thumb, 248 bytes, Stack size 24 bytes, poly.o(i.__kernel_poly))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[636]"></a>__kernel_sin</STRONG> (Thumb, 280 bytes, Stack size 72 bytes, sin_i.o(i.__kernel_sin))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __kernel_sin &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[63d]"></a>__kernel_tan</STRONG> (Thumb, 764 bytes, Stack size 128 bytes, tan_i.o(i.__kernel_tan))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[53e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dneg
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[610]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_fpclassify
<LI><a href="#[63e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fabs
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
</UL>

<P><STRONG><a name="[634]"></a>__mathlib_dbl_infnan</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_infnan))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __mathlib_dbl_infnan &rArr; __aeabi_dadd
</UL>
<BR>[Calls]<UL><LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[633]"></a>__mathlib_dbl_invalid</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_invalid))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_invalid &rArr; __aeabi_ddiv
</UL>
<BR>[Calls]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_tan
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
</UL>

<P><STRONG><a name="[63b]"></a>__mathlib_dbl_overflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_overflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_overflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[63a]"></a>__mathlib_dbl_underflow</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, dunder.o(i.__mathlib_dbl_underflow))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
</UL>

<P><STRONG><a name="[620]"></a>__mathlib_narrow</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, narrow.o(i.__mathlib_narrow))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __mathlib_narrow &rArr; __hardfp___mathlib_tofloat &rArr; frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[623]"></a>__support_ldexp</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ldexp.o(i.__support_ldexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>
<BR>[Called By]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>

<P><STRONG><a name="[5fd]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, __printf_wp.o(i._is_digit))
<BR><BR>[Called By]<UL><LI><a href="#[5fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__printf
<LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[63e]"></a>fabs</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, fabs.o(i.fabs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = fabs
</UL>
<BR>[Called By]<UL><LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[631]"></a>frexp</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, frexp.o(i.frexp))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = frexp &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[23d]"></a>_get_lc_numeric</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_numeric_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_numeric
</UL>
<BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_numeric_2
</UL>

<P><STRONG><a name="[22]"></a>_get_lc_ctype</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, lc_ctype_c.o(locale$$code))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _get_lc_ctype
</UL>
<BR>[Calls]<UL><LI><a href="#[640]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_lc_ctype_2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> rt_ctype_table.o(.text)
</UL>
<P><STRONG><a name="[53e]"></a>__aeabi_dneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic))
<BR><BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[6b9]"></a>_dneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[6ba]"></a>__aeabi_fneg</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[6bb]"></a>_fneg</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[6bc]"></a>_dabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[6bd]"></a>_fabs</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, basic.o(x$fpl$basic), UNUSED)

<P><STRONG><a name="[4ce]"></a>__aeabi_d2f</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[641]"></a>_d2f</STRONG> (Thumb, 98 bytes, Stack size 32 bytes, d2f.o(x$fpl$d2f), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[642]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fretinf
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4ca]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[634]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_infnan
</UL>

<P><STRONG><a name="[644]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
</UL>

<P><STRONG><a name="[647]"></a>__fpl_dcheck_NaN1</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, dcheck1.o(x$fpl$dcheck1))
<BR><BR>[Calls]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<BR>[Called By]<UL><LI><a href="#[639]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
</UL>

<P><STRONG><a name="[64b]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[490]"></a>__aeabi_ddiv</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_ddiv
</UL>
<BR>[Called By]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[633]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_invalid
</UL>

<P><STRONG><a name="[649]"></a>_ddiv</STRONG> (Thumb, 552 bytes, Stack size 32 bytes, ddiv.o(x$fpl$ddiv), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[632]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmpeq
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[64a]"></a>_dcmpeq</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, deqf.o(x$fpl$deqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[32f]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[64c]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[491]"></a>__aeabi_d2uiz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
</UL>

<P><STRONG><a name="[64d]"></a>_dfixu</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, dfixu.o(x$fpl$dfixu), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4c9]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_alg_send_data
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[6be]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[32c]"></a>__aeabi_ui2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[6bf]"></a>_dfltu</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dfltu), UNUSED)

<P><STRONG><a name="[6c0]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[64e]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[64b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[651]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[650]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drcmple
</UL>

<P><STRONG><a name="[32d]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;steps_2_calorie
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_window_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[631]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;frexp
<LI><a href="#[63f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_poly
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
<LI><a href="#[63a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_underflow
<LI><a href="#[63b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__mathlib_dbl_overflow
</UL>

<P><STRONG><a name="[64f]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[643]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[63c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsqrt
<LI><a href="#[64e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[64d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfixu
<LI><a href="#[64c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
<LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
<LI><a href="#[64a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmpeq
</UL>

<P><STRONG><a name="[646]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
<LI><a href="#[64f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[649]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ddiv
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[53d]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_cdrcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[630]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp___mathlib_tofloat
</UL>

<P><STRONG><a name="[650]"></a>_drcmple</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, drleqf.o(x$fpl$drleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[651]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmple_InfNaN
</UL>

<P><STRONG><a name="[4cf]"></a>__aeabi_drsub</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[652]"></a>_drsb</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, daddsub_clz.o(x$fpl$drsb), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[645]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[63c]"></a>_dsqrt</STRONG> (Thumb, 404 bytes, Stack size 24 bytes, dsqrt_umaal.o(x$fpl$dsqrt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _dsqrt &rArr; __fpl_dnaninf
</UL>
<BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>
<BR>[Called By]<UL><LI><a href="#[53c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sqrt
</UL>

<P><STRONG><a name="[32e]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
<LI><a href="#[637]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_cos
<LI><a href="#[63d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_tan
<LI><a href="#[636]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__kernel_sin
<LI><a href="#[635]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee754_rem_pio2
</UL>

<P><STRONG><a name="[654]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[643]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[653]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
</UL>

<P><STRONG><a name="[32b]"></a>__aeabi_f2d</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_f2d
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_sample_get
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_pointer_display
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_24
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_23
</UL>

<P><STRONG><a name="[655]"></a>_f2d</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, f2d.o(x$fpl$f2d), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[656]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_fnaninf
<LI><a href="#[646]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
</UL>

<P><STRONG><a name="[656]"></a>__fpl_fnaninf</STRONG> (Thumb, 140 bytes, Stack size 8 bytes, fnaninf.o(x$fpl$fnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[655]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_f2d
</UL>

<P><STRONG><a name="[236]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[6c1]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[6c2]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[642]"></a>__fpl_fretinf</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fretinf.o(x$fpl$fretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[641]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_d2f
</UL>

<P><STRONG><a name="[0]"></a>__ieee_status</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, istatus.o(x$fpl$ieeestatus))
<BR><BR>[Called By]<UL><LI><a href="#[61a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[226]"></a>_printf_fp_dec</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, printf1.o(x$fpl$printf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = _printf_fp_dec &rArr; _printf_fp_dec_real &rArr; _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>
<BR>[Called By]<UL><LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_f
</UL>

<P><STRONG><a name="[648]"></a>__fpl_return_NaN</STRONG> (Thumb, 100 bytes, Stack size 0 bytes, retnan.o(x$fpl$retnan))
<BR><BR>[Calls]<UL><LI><a href="#[657]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_cmpreturn
</UL>
<BR>[Called By]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>

<P><STRONG><a name="[639]"></a>__ARM_scalbn</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, scalbn.o(x$fpl$scalbn))
<BR><BR>[Calls]<UL><LI><a href="#[647]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcheck_NaN1
</UL>
<BR>[Called By]<UL><LI><a href="#[638]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_ldexp
</UL>

<P><STRONG><a name="[617]"></a>_scanf_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf1.o(x$fpl$scanf1))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<BR>[Called By]<UL><LI><a href="#[616]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
<LI><a href="#[615]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[61f]"></a>_scanf_hex_real</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = _scanf_hex_real &rArr; _scanf_really_hex_real &rArr; __support_ldexp &rArr; __hardfp_ldexp &rArr; __mathlib_dbl_underflow &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[621]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_hex_real
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[61e]"></a>_scanf_infnan</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, scanf2.o(x$fpl$scanf2))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _scanf_infnan &rArr; _scanf_really_infnan
</UL>
<BR>[Calls]<UL><LI><a href="#[658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_infnan
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[657]"></a>__fpl_cmpreturn</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, trapv.o(x$fpl$trapveneer))
<BR><BR>[Called By]<UL><LI><a href="#[648]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_return_NaN
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[252]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, system_rtl8762c.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[255]"></a>AppUpdateVectorTable</STRONG> (Thumb, 184 bytes, Stack size 280 bytes, system_rtl8762c.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = AppUpdateVectorTable
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;trace_string
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RamVectorTableInit
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pre_main
</UL>

<P><STRONG><a name="[670]"></a>ADC_DLPS_Exit</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DLPS_Exit
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[674]"></a>GPIO_DLPS_Exit</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPIO_DLPS_Exit
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[671]"></a>I2C0_DLPS_Enter</STRONG> (Thumb, 126 bytes, Stack size 0 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_EnterDlpsCb
</UL>

<P><STRONG><a name="[673]"></a>I2C0_DLPS_Exit</STRONG> (Thumb, 168 bytes, Stack size 0 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_ExitDlpsCb
</UL>

<P><STRONG><a name="[672]"></a>ADC_DLPS_Enter</STRONG> (Thumb, 138 bytes, Stack size 8 bytes, rtl876x_io_dlps.o(.ram.dataon.data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_DLPS_Enter
</UL>
<BR>[Calls]<UL><LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_write
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;btaon_fast_read_safe
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DLPS_IO_EnterDlpsCb
</UL>

<P><STRONG><a name="[26d]"></a>LCD_SetCS</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rtl876x_lcd.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Read
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Write
</UL>

<P><STRONG><a name="[293]"></a>RTC_ClearCompINT</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ClearCompINT
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>

<P><STRONG><a name="[294]"></a>RTC_ClearOverFlowINT</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RTC_ClearOverFlowINT
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_WriteReg
</UL>
<BR>[Called By]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Handler
</UL>

<P><STRONG><a name="[29e]"></a>rtc_config</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, rtc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc_config
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SystemWakeupConfig
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_CompINTConfig
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_MaskINTConfig
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_RunCmd
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_SetPrescaler
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_DeInit
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_init
</UL>

<P><STRONG><a name="[2b8]"></a>find_motor_msg</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = find_motor_msg
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
</UL>

<P><STRONG><a name="[2c2]"></a>motor_power_off</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, motor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_analysis_handler
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;motor_msg_timer_handler
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>

<P><STRONG><a name="[2c7]"></a>lcd_set_reset</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = lcd_set_reset
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
</UL>

<P><STRONG><a name="[2c8]"></a>board_lcd_init</STRONG> (Thumb, 328 bytes, Stack size 40 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = board_lcd_init
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_StructInit
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[2cc]"></a>GDMA_LLIStruct_Config</STRONG> (Thumb, 336 bytes, Stack size 36 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GDMA_LLIStruct_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;driver_gdma_init
</UL>

<P><STRONG><a name="[2cb]"></a>driver_gdma_init</STRONG> (Thumb, 126 bytes, Stack size 88 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_LLIStruct_Config
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_StructInit
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear_all
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_area_display
</UL>

<P><STRONG><a name="[2cd]"></a>lcd_auto_write</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = lcd_auto_write &rArr; LCD_SetCmdSequence
</UL>
<BR>[Calls]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GDMACmd
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SwitchMode
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GDMA_Cmd
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetCmdSequence
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear_all
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_area_display
</UL>

<P><STRONG><a name="[2d2]"></a>oled_set_XY_address</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = oled_set_XY_address &rArr; write_data &rArr; LCD_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SwitchMode
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Cmd
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear_all
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_area_display
</UL>

<P><STRONG><a name="[2d8]"></a>external_lcd_init</STRONG> (Thumb, 1226 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = external_lcd_init &rArr; oled_clear_all &rArr; driver_gdma_init &rArr; GDMA_LLIStruct_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_clear_all
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_data
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_cmd
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_set_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_open
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
</UL>

<P><STRONG><a name="[2cf]"></a>LCD_SwitchMode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
</UL>

<P><STRONG><a name="[2d1]"></a>LCD_GDMACmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_display_wait
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_auto_write
</UL>

<P><STRONG><a name="[2d3]"></a>write_cmd</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, lcd.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_move
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_display_area
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
</UL>

<P><STRONG><a name="[2d4]"></a>write_data</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = write_data &rArr; LCD_SendData
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_move
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_display_area
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;external_lcd_init
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_XY_address
</UL>

<P><STRONG><a name="[2ea]"></a>GPIO_ReadOutputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, pwm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_exit_dlps
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_enter_dlps
</UL>

<P><STRONG><a name="[9]"></a>key1_irq_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, key1.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = key1_irq_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> key1.o(.text)
</UL>
<P><STRONG><a name="[2ed]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, key1.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_press_timer_handler
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;key1_short_timer_handler
</UL>

<P><STRONG><a name="[2f8]"></a>GPIO_pin_irq_enter_dlps</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GPIO_pin_irq_enter_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;System_WakeUpPinEnable
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_enter_dlps
</UL>

<P><STRONG><a name="[2f6]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, gpio_interrupt.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Interrupt_Handler
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_pin_irq_enter_dlps
</UL>

<P><STRONG><a name="[2fc]"></a>GPIO_pin_irq_exit_dlps</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, gpio_interrupt.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_pin_irq_exit_dlps
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_exit_dlps
</UL>

<P><STRONG><a name="[315]"></a>I2C_SetSlaveAddress</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, i2c0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
</UL>

<P><STRONG><a name="[314]"></a>I2C_GetFlagState</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, i2c0.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
</UL>

<P><STRONG><a name="[31e]"></a>SC7A20_DATA_EXE</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SC7A20_DATA_EXE
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
</UL>

<P><STRONG><a name="[a]"></a>sc7a20_wakeup_int2_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sc7a20_wakeup_int2_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sc7a20_driver.o(.text)
</UL>
<P><STRONG><a name="[31a]"></a>SL_MEMS_i2c_spi_Write</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init_timer_handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
</UL>

<P><STRONG><a name="[31b]"></a>SL_MEMS_i2c_spi_Read</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, sc7a20_driver.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SL_MEMS_i2c_spi_Read &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sc7a20_device
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gsensor_check_init_timer_handler
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_fifo_timer_handler
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_fifo_mode
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
</UL>

<P><STRONG><a name="[325]"></a>driver_adc_init</STRONG> (Thumb, 112 bytes, Stack size 96 bytes, adc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = driver_adc_init &rArr; ADC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pinmux_Config
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_INTConfig
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_DeInit
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StructInit
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Init
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PeriphClockCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adc_driver_init
</UL>

<P><STRONG><a name="[334]"></a>hr_module_set</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_fall_off_handle
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_close_all
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bp_set_real_mode
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_set_real_mode
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_real_mode
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_fall_off_handler
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bp_real_handler
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_real_handler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_real_handler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_sport_handler
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_5min_handler
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_rtc_minute_handle
</UL>

<P><STRONG><a name="[1c1]"></a>hr_5min_handler</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = hr_5min_handler &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[1c2]"></a>hr_sport_handler</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = hr_sport_handler &rArr; mix_sport_heart_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mix_sport_heart_handler
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[1c3]"></a>hr_real_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = hr_real_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[1c6]"></a>O2_real_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = O2_real_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[1c5]"></a>bp_real_handler</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = bp_real_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[1c4]"></a>hr_fall_off_handler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hr_fall_off_handler &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_fall_off_info
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hr.o(.data)
</UL>
<P><STRONG><a name="[339]"></a>hr_module_send_close_event</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, hr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = hr_module_send_close_event
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_module_set_timer_handler
</UL>

<P><STRONG><a name="[349]"></a>calculate_average_adc</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = calculate_average_adc
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
</UL>

<P><STRONG><a name="[34a]"></a>check_battery_charger</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = check_battery_charger
</UL>
<BR>[Calls]<UL><LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Called By]<UL><LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charge_timer_handler
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_data_handler
</UL>

<P><STRONG><a name="[b]"></a>chg_interrupt_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = chg_interrupt_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery_manager.o(.text)
</UL>
<P><STRONG><a name="[34b]"></a>battery_data_handler</STRONG> (Thumb, 330 bytes, Stack size 32 bytes, battery_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_battery_info
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_battery_charger
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_average_adc
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
</UL>

<P><STRONG><a name="[d]"></a>low_power_chg_interrupt_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = low_power_chg_interrupt_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.text)
</UL>
<P><STRONG><a name="[c]"></a>low_power_key1_interrupt_callback</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = low_power_key1_interrupt_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.text)
</UL>
<P><STRONG><a name="[1c8]"></a>low_power_usb_charge_timer_handler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_power_usb_charge_timer_handler &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1cd]"></a>low_power_key1_press_timer_handler</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_power_key1_press_timer_handler &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1ce]"></a>low_power_key1_long_timer_handler</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_power_key1_long_timer_handler &rArr; system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1c9]"></a>low_power_adc_timer_handler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = low_power_adc_timer_handler &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_read
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1cb]"></a>low_power_display_timer_handler</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = low_power_display_timer_handler &rArr; battery_charging_display &rArr; battery_charging_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_picture_display
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_display
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1cc]"></a>low_power_display_timeout_timer_handler</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = low_power_display_timeout_timer_handler &rArr; oled_deinit &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[1ca]"></a>low_power_adv_stop_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = low_power_adv_stop_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.data)
</UL>
<P><STRONG><a name="[e]"></a>low_power_thread_init</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, low_power_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 284<LI>Call Chain = low_power_thread_init &rArr; ble_init &rArr; app_le_gap_init &rArr; ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_hr_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_mode.o(.text)
</UL>
<P><STRONG><a name="[34f]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, low_power_mode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display_timer_handler
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_key1_long_timer_handler
</UL>

<P><STRONG><a name="[10]"></a>shutdown_chg_interrupt_callback</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shutdown_chg_interrupt_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.text)
</UL>
<P><STRONG><a name="[f]"></a>shutdown_key1_interrupt_callback</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = shutdown_key1_interrupt_callback &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.text)
</UL>
<P><STRONG><a name="[1cf]"></a>shutdown_usb_charge_timer_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = shutdown_usb_charge_timer_handler &rArr; shutdown_wakeup &rArr; system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_wakeup
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.data)
</UL>
<P><STRONG><a name="[1d0]"></a>shutdown_key1_timer_handler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = shutdown_key1_timer_handler &rArr; shutdown_wakeup &rArr; system_reset &rArr; block_save_all_reset_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_wakeup
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.data)
</UL>
<P><STRONG><a name="[1d1]"></a>shutdown_adv_stop_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = shutdown_adv_stop_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.data)
</UL>
<P><STRONG><a name="[11]"></a>shutdown_mode_thread_init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, shutdown_mode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = shutdown_mode_thread_init &rArr; ble_init &rArr; app_le_gap_init &rArr; ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_all_reset_user_info
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_wakeup
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ReadInputDataBit
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_hr_init
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_GetPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_mode.o(.text)
</UL>
<P><STRONG><a name="[35e]"></a>GPIO_ReadInputDataBit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, shutdown_mode.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_mode_thread_init
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_key1_timer_handler
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shutdown_usb_charge_timer_handler
</UL>

<P><STRONG><a name="[377]"></a>Hrs3300_chip_init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, hrs3300.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Hrs3300_chip_init &rArr; Hrs3300_write_reg &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_read_reg
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Hrs3300_write_reg
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrs3300_open
</UL>

<P><STRONG><a name="[37a]"></a>hctp_write_bytes</STRONG> (Thumb, 98 bytes, Stack size 96 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_write
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctp_hynitron_update
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode_real
</UL>

<P><STRONG><a name="[37c]"></a>hctp_read_bytes</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;twi0_read_reg
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInitStatus_Query
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_wakeup
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_irq_timer_handler
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctp_hynitron_update
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode_real
</UL>

<P><STRONG><a name="[37d]"></a>TP_reset</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = TP_reset &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_give
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C0_mutex_take
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_delayms
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pad_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_wakeup
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode_real
</UL>

<P><STRONG><a name="[37f]"></a>cst816s_enter_bootmode_real</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_delayms
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode
</UL>

<P><STRONG><a name="[12]"></a>TP_irq_callback</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = TP_irq_callback &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tp_cst816.o(.text)
</UL>
<P><STRONG><a name="[37e]"></a>hctp_delayms</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tp_cst816.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctp_hynitron_update
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode_real
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_reset
</UL>

<P><STRONG><a name="[383]"></a>ctp_hynitron_update</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = ctp_hynitron_update &rArr; cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_delayms
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_read_bytes
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hctp_write_bytes
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_init
</UL>

<P><STRONG><a name="[386]"></a>cst816s_enter_bootmode</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, tp_cst816.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = cst816s_enter_bootmode &rArr; cst816s_enter_bootmode_real &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cst816s_enter_bootmode_real
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ctp_hynitron_update
</UL>

<P><STRONG><a name="[28]"></a>ancs_client_discover_state_cb</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ancs_client_discover_state_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_all_char_discovery
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(.constdata)
</UL>
<P><STRONG><a name="[29]"></a>ancs_client_discover_result_cb</STRONG> (Thumb, 190 bytes, Stack size 24 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ancs_client_discover_result_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>ancs_client_write_result_cb</STRONG> (Thumb, 130 bytes, Stack size 48 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = ancs_client_write_result_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>ancs_client_notify_ind_cb</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ancs_client_notify_ind_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(.constdata)
</UL>
<P><STRONG><a name="[2c]"></a>ancs_client_disc_cb</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, ancs_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ancs_client_disc_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ancs_client.o(.constdata)
</UL>
<P><STRONG><a name="[39b]"></a>ams_client_notif_result_handler</STRONG> (Thumb, 260 bytes, Stack size 64 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = ams_client_notif_result_handler &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_write_entity_attribute
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_atof
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
</UL>

<P><STRONG><a name="[13]"></a>ams_client_cb</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = ams_client_cb &rArr; ams_client_notif_result_handler &rArr; __hardfp_atof &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_remote_cmd_cccd
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_ble_client_enable_entity_update_cccd
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_read_result_handler
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_notif_result_handler
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams.o(.text)
</UL>
<P><STRONG><a name="[39f]"></a>ams_client_read_result_handler</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ams.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ams_client_read_result_handler &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ams_client_cb
</UL>

<P><STRONG><a name="[2d]"></a>ams_ble_client_discover_state_cb</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ams_ble_client_discover_state_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;client_all_char_discovery
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>ams_ble_client_discover_result_cb</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ams_ble_client_discover_result_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[2f]"></a>ams_ble_client_read_result_cb</STRONG> (Thumb, 220 bytes, Stack size 64 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ams_ble_client_read_result_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[30]"></a>ams_ble_client_write_result_cb</STRONG> (Thumb, 132 bytes, Stack size 56 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ams_ble_client_write_result_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>ams_ble_client_notif_ind_result_cb</STRONG> (Thumb, 76 bytes, Stack size 40 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ams_ble_client_notif_ind_result_cb
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>ams_ble_client_disconnect_cb</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, ams_client.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ams_ble_client_disconnect_cb
</UL>
<BR>[Calls]<UL><LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_clear
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ams_client.o(.constdata)
</UL>
<P><STRONG><a name="[3b1]"></a>app_parse_notification_source_data</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_parse_notification_source_data &rArr; ble_ancs_get_notification_information &rArr; app_ancsc_get_ntf_data &rArr; ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_control_from_ancs
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notification_information
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_add_to_notification_list
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[3b4]"></a>app_ancsc_data_analysis</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 884<LI>Call Chain = app_ancsc_data_analysis &rArr; ancs_data_parse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_data_parse
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_client_cb
</UL>

<P><STRONG><a name="[3b0]"></a>app_ancsc_get_ntf_data</STRONG> (Thumb, 72 bytes, Stack size 32 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = app_ancsc_get_ntf_data &rArr; ancs_get_notification_attr
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_get_notification_attr
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notification_information
</UL>

<P><STRONG><a name="[3b3]"></a>ble_ancs_add_to_notification_list</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_ancs_add_to_notification_list
</UL>
<BR>[Called By]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_parse_notification_source_data
</UL>

<P><STRONG><a name="[3b8]"></a>app_ancsc_call_control</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ancs.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_ancsc_call_control &rArr; ancs_perform_notification_action
</UL>
<BR>[Calls]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_perform_notification_action
</UL>
<BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ancs_phone_control
</UL>

<P><STRONG><a name="[3c4]"></a>ble_update_connect_param</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, peripheral_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_update_connect_param
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_update_conn_param
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_conn_params_updata
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_param_updata_timer_handler
</UL>

<P><STRONG><a name="[3dc]"></a>ble_advertise_param_init</STRONG> (Thumb, 176 bytes, Stack size 56 bytes, ble_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc16
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_get_param
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;log_buffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_le_gap_init
</UL>

<P><STRONG><a name="[3f8]"></a>timer_thread_schedule</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_thread_schedule
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_function
</UL>

<P><STRONG><a name="[3fd]"></a>get_timer_thread</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, sys_timer_thread.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_info
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_get_period
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>

<P><STRONG><a name="[3fb]"></a>timer_thread_alarm_check</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_thread_alarm_check
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_function
</UL>

<P><STRONG><a name="[3f9]"></a>get_timer_thread_min</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, sys_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_timer_thread_min
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_ms_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_function
</UL>

<P><STRONG><a name="[405]"></a>config_file_check</STRONG> (Thumb, 198 bytes, Stack size 136 bytes, sys_init.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = config_file_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_init
</UL>

<P><STRONG><a name="[33]"></a>data_manager_flash_handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, data_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = data_manager_flash_handler &rArr; spi_flash_crc16 &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_crc16
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_manager.o(.constdata)
</UL>
<P><STRONG><a name="[439]"></a>check_flash_addr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, data_manager_flash.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>

<P><STRONG><a name="[43f]"></a>check_item_addr</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = check_item_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_message_item
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_message_item
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_message_item
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_items
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[449]"></a>message_item_to_index</STRONG> (Thumb, 82 bytes, Stack size 20 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = message_item_to_index
</UL>
<BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_message_item
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_message_item
</UL>

<P><STRONG><a name="[43d]"></a>get_message_items</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = get_message_items &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_info
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_item_addr
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[43e]"></a>get_message_info</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, data_manager_message.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;erase_message_item
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_message_item
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_message_item
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_items
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[446]"></a>save_message_item</STRONG> (Thumb, 158 bytes, Stack size 24 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = save_message_item &rArr; data_manager_flash_erase_4k
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_info
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_item_addr
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[447]"></a>read_message_item</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = read_message_item &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_info
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_item_to_index
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_item_addr
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[448]"></a>erase_message_item</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, data_manager_message.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = erase_message_item &rArr; message_item_to_index
</UL>
<BR>[Calls]<UL><LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_message_info
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_item_to_index
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_item_addr
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_message_handler
</UL>

<P><STRONG><a name="[44a]"></a>fill_sensor_tag</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fill_sensor_tag &rArr; int_to_char
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_tag_check_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_tag
</UL>

<P><STRONG><a name="[44c]"></a>save_sensor_tag</STRONG> (Thumb, 244 bytes, Stack size 40 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = save_sensor_tag &rArr; fill_sensor_tag &rArr; int_to_char
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_sensor_tag
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[44d]"></a>get_sensor_item_num</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = get_sensor_item_num &rArr; get_sensor_info
</UL>
<BR>[Calls]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[44f]"></a>save_sensor_item</STRONG> (Thumb, 204 bytes, Stack size 24 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = save_sensor_item &rArr; save_sensor_tag &rArr; fill_sensor_tag &rArr; int_to_char
</UL>
<BR>[Calls]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_to_addr
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_tag
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[451]"></a>read_sensor_data</STRONG> (Thumb, 176 bytes, Stack size 32 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_sensor_data &rArr; fast_conn_params_updata &rArr; ble_update_connect_param
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fast_conn_params_updata
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;index_to_addr
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_item_num
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[44e]"></a>get_sensor_info</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = get_sensor_info
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_sensor_data_timer_handler
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensor_info
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_item_num
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[44b]"></a>calculate_tag_check_flag</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = calculate_tag_check_flag
</UL>
<BR>[Called By]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_sensor_info
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fill_sensor_tag
</UL>

<P><STRONG><a name="[450]"></a>index_to_addr</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = index_to_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_sensor_data
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_sensor_item
</UL>

<P><STRONG><a name="[452]"></a>init_sensor_info</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, data_manager_sensor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = init_sensor_info &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_tag_check_flag
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sensor_info
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_sensor_handler
</UL>

<P><STRONG><a name="[45b]"></a>save_tag_info</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = save_tag_info &rArr; data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
</UL>

<P><STRONG><a name="[45d]"></a>save_user_info</STRONG> (Thumb, 216 bytes, Stack size 40 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = save_user_info &rArr; save_tag_info &rArr; data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_info_struct
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_tag_info
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_system_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_reset_user_info
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_user_info_handler
</UL>

<P><STRONG><a name="[45f]"></a>init_user_info</STRONG> (Thumb, 258 bytes, Stack size 288 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = init_user_info &rArr; save_all_reset_user_info &rArr; save_user_info &rArr; save_tag_info &rArr; data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_all_reset_user_info
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_tag_info
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_user_info_handler
</UL>

<P><STRONG><a name="[45e]"></a>get_user_info_struct</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, data_manager_user_info.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_tag_info
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
</UL>

<P><STRONG><a name="[460]"></a>read_tag_info</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_tag_info &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_user_info_struct
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
</UL>

<P><STRONG><a name="[461]"></a>save_all_reset_user_info</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = save_all_reset_user_info &rArr; save_user_info &rArr; save_tag_info &rArr; data_manager_flash_write
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_user_info
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_user_info
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_user_info_handler
</UL>

<P><STRONG><a name="[463]"></a>clear_24h_data</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, data_manager_user_info.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = clear_24h_data &rArr; woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_day_timer_handler
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_24h_data
</UL>

<P><STRONG><a name="[469]"></a>ENTER_CRITICAL</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, data_passthrough.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_take
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_create
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_data
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ble_receive_data_flag
</UL>

<P><STRONG><a name="[46a]"></a>EXIT_CRITICAL</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, data_passthrough.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_give
</UL>
<BR>[Called By]<UL><LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_data
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_read_timer_handler
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_ble_receive_data_flag
</UL>

<P><STRONG><a name="[46d]"></a>ble_send_data</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, data_passthrough.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ble_send_data &rArr; simp_ble_service_send_v3_notify
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;simp_ble_service_send_v3_notify
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Printf_Data
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;normal_ble_send_timer_handler
</UL>

<P><STRONG><a name="[38]"></a>receive_userInfo_from_app</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_userInfo_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmp_user_info
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>receive_language_setting_from_app</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = receive_language_setting_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3a]"></a>receive_timeInfo_from_app</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = receive_timeInfo_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_test
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_set
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>receive_weather_from_app</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_weather_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>receive_alarmInfo_from_app</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_alarmInfo_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>receive_messageInfo_from_app</STRONG> (Thumb, 272 bytes, Stack size 64 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = receive_messageInfo_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_message_item
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_call_flag
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_messageInfo_from_ancs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[46]"></a>receive_call_control_from_app</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_call_control_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_call_flag
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_call_control_from_ancs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>receive_set_data_switch_from_app</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = receive_set_data_switch_from_app &rArr; save_real_sport_data &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;save_real_sport_data
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[40]"></a>receive_set_target_from_app</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_set_target_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>receive_open_ble_pair_from_app</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>receive_OTA_data_from_app</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = receive_OTA_data_from_app &rArr; handler_ota_data &rArr; ota_data_parse &rArr; block_save_ota_data_to_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_ota_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>receive_sitting_remind_from_app</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_sitting_remind_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>receive_forget_disturb_from_app</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_forget_disturb_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>receive_app_sync_from_app</STRONG> (Thumb, 146 bytes, Stack size 48 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = receive_app_sync_from_app &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[47]"></a>receive_reset_from_app</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_reset_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>receive_message_switch_from_app</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_message_switch_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>receive_music_content_from_app</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_music_content_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>receive_shutdown_from_app</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_shutdown_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>receive_pair_finish_from_app</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_pair_finish_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_pair
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4b]"></a>receive_unit_setting_from_app</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_unit_setting_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4c]"></a>receive_photograph_from_app</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_photograph_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4d]"></a>receive_find_device_from_app</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_find_device_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4e]"></a>receive_drink_alarm_from_app</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_drink_alarm_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[4f]"></a>receive_call_alarm_from_app</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_call_alarm_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[50]"></a>receive_message_alarm_from_app</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_message_alarm_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[51]"></a>receive_hand_rise_switch_from_app</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_hand_rise_switch_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[52]"></a>receive_heart_auto_switch_from_app</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_heart_auto_switch_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[53]"></a>receive_target_alarm_from_app</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_target_alarm_from_app &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[54]"></a>receive_watch_setting_from_app</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_watch_setting_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[55]"></a>receive_app_sport_from_app</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_app_sport_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[56]"></a>receive_real_BP_from_app</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_real_BP_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[57]"></a>receive_real_O2_from_app</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_real_O2_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>receive_app_test_from_app</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = receive_app_test_from_app &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>receive_watchface_sync_from_app</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = receive_watchface_sync_from_app &rArr; watchface_data_handler &rArr; main_window_index_set &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>receive_woman_stage_info_from_app</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = receive_woman_stage_info_from_app &rArr; woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[5c]"></a>receive_request_ancs_status_from_app</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[5d]"></a>receive_request_ota_status_from_app</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_request_ota_status_from_app &rArr; block_check_ota_finish &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_ota_finish
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[5b]"></a>receive_no_ack_app_close_from_app</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, data_receive_package.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[5e]"></a>receive_ack_all_sensor_from_app</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, data_receive_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = receive_ack_all_sensor_from_app &rArr; block_erase_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_erase_sensor_item
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_receive_package.o(.constdata)
</UL>
<P><STRONG><a name="[474]"></a>cmd_queue_handler</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_give
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_take
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_mutex_create
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_out_queue
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>

<P><STRONG><a name="[475]"></a>push_data_type_out_queue</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = push_data_type_out_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_handler
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;wait_ack_timeout_timer_handler
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;receive_ack_handler
</UL>

<P><STRONG><a name="[476]"></a>handler_receive_cmd_package</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = handler_receive_cmd_package &rArr; send_ack_to_app &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_ack_to_app
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_receive_data_handler
</UL>

<P><STRONG><a name="[477]"></a>receive_ack_handler</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = receive_ack_handler &rArr; push_data_type_out_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_out_queue
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_receive_cmd
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_receive_data_handler
</UL>

<P><STRONG><a name="[478]"></a>send_cmd</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, data_transfer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = send_cmd &rArr; send_datatype_info_to_app &rArr; set_package
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_datatype_info_to_app
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_out_queue
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_cmd_timer_handler
</UL>

<P><STRONG><a name="[60]"></a>set_sensor_data_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_sensor_data_handler &rArr; block_read_sensor_data &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_sensor_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_transfer_package.o(.constdata)
</UL>
<P><STRONG><a name="[61]"></a>set_dev_sync_handler</STRONG> (Thumb, 138 bytes, Stack size 240 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = set_dev_sync_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_mix_package
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_transfer_package.o(.constdata)
</UL>
<P><STRONG><a name="[5f]"></a>set_alarm_info_handler</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, data_transfer_package.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> data_transfer_package.o(.constdata)
</UL>
<P><STRONG><a name="[62]"></a>set_watchface_data_handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, data_transfer_package.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = set_watchface_data_handler &rArr; set_watchface_info &rArr; watchface_4_flag_check &rArr; watchface_flag_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_watchface_info
</UL>
<BR>[Address Reference Count : 1]<UL><LI> data_transfer_package.o(.constdata)
</UL>
<P><STRONG><a name="[481]"></a>OTA_argument_init</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, ota.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_restore_ota_item_from_flash
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_data_parse
</UL>

<P><STRONG><a name="[480]"></a>ota_data_parse</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ota_data_parse &rArr; block_save_ota_data_to_flash &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_check_ota_finish
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_font_updata_check
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_ota_data_to_flash
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_item_to_flash
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OTA_argument_init
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;handler_ota_data
</UL>

<P><STRONG><a name="[484]"></a>save_item_to_flash</STRONG> (Thumb, 202 bytes, Stack size 152 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = save_item_to_flash &rArr; data_manager_flash_erase_4k
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
</UL>

<P><STRONG><a name="[485]"></a>ota_finish_handler</STRONG> (Thumb, 436 bytes, Stack size 104 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = ota_finish_handler &rArr; spi_flash_crc16 &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
<LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_flash_crc16
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_ota_finish
</UL>

<P><STRONG><a name="[488]"></a>save_ota_data_to_flash</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = save_ota_data_to_flash &rArr; data_manager_flash_erase_4k
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_write
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_erase_4k
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
</UL>

<P><STRONG><a name="[489]"></a>read_item_from_flash</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_item_from_flash &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_flash_read
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
</UL>

<P><STRONG><a name="[48a]"></a>check_ota_finish</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, ota.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = check_ota_finish &rArr; ota_finish_handler &rArr; spi_flash_crc16 &rArr; data_manager_flash_read &rArr; flash_split_read_locked
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_finish_handler
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_OTA_handler
</UL>

<P><STRONG><a name="[4a3]"></a>gsensor_close_fifo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, arithmetic_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = gsensor_close_fifo &rArr; sc7a20_set_wakeup_mode &rArr; SL_MEMS_i2c_spi_Write &rArr; twi0_write_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_set_wakeup_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_acc_set_timer_handler
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;arithmetic_fifo_set_timer_handler
</UL>

<P><STRONG><a name="[4ab]"></a>sleep_status_save</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = sleep_status_save &rArr; char_to_int
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
</UL>

<P><STRONG><a name="[4ac]"></a>sleep_time_calculate</STRONG> (Thumb, 330 bytes, Stack size 144 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = sleep_time_calculate &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_arithmetic
</UL>

<P><STRONG><a name="[4ad]"></a>sleep_arithmetic</STRONG> (Thumb, 794 bytes, Stack size 56 bytes, arithmetic_sleep.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = sleep_arithmetic &rArr; sleep_time_calculate &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_time_calculate
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_status_save
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_acc_set
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sleep_data_handler_timer_handler
</UL>

<P><STRONG><a name="[4b6]"></a>get_pic_info</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = get_pic_info &rArr; watchface_data_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_data_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_picture_display
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_1S_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
</UL>

<P><STRONG><a name="[4b8]"></a>display_pic_pos</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = display_pic_pos &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_picture_display
<LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_1S_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
</UL>

<P><STRONG><a name="[4ba]"></a>display_pointer_pos</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = display_pointer_pos &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_1S_display
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_time_pointer_360_display
</UL>

<P><STRONG><a name="[4bc]"></a>watchface_circle_bar_display</STRONG> (Thumb, 260 bytes, Stack size 56 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = watchface_circle_bar_display &rArr; ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4be]"></a>watchface_line_bar_display</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = watchface_line_bar_display &rArr; ui_draw_fill_rectangle &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4c4]"></a>watchface_circle_display</STRONG> (Thumb, 266 bytes, Stack size 48 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = watchface_circle_display &rArr; ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_circle_AA
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4c6]"></a>watchface_rectangle_display</STRONG> (Thumb, 272 bytes, Stack size 40 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = watchface_rectangle_display &rArr; ui_draw_fill_rectangle &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4c7]"></a>watchface_pointer_display</STRONG> (Thumb, 294 bytes, Stack size 64 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = watchface_pointer_display &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4cd]"></a>watchface_time_pointer_360_display</STRONG> (Thumb, 654 bytes, Stack size 88 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = watchface_time_pointer_360_display &rArr; display_pointer_pos &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pointer_pos
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic_pos
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pic_info
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4d1]"></a>watchface_time_pointer_1S_display</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = watchface_time_pointer_1S_display &rArr; display_pointer_pos &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pointer_pos
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic_pos
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4b7]"></a>watchface_data_get</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = watchface_data_get
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pic_info
</UL>

<P><STRONG><a name="[4d8]"></a>watchface_picture_display</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = watchface_picture_display &rArr; display_pic_pos &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_pic_pos
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_pic_info
</UL>
<BR>[Called By]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>

<P><STRONG><a name="[4d3]"></a>watchface_flag_check</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, watchface.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = watchface_flag_check &rArr; block_spi_flash_read &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
</UL>
<BR>[Called By]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_flag_check
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_flag_check
</UL>

<P><STRONG><a name="[4e5]"></a>window_move_handler</STRONG> (Thumb, 488 bytes, Stack size 64 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_display
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>

<P><STRONG><a name="[4e8]"></a>window_move_scroll_handler</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = window_move_scroll_handler &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_info_set
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_set_move
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_delay
<LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_display
</UL>
<BR>[Called By]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>

<P><STRONG><a name="[4de]"></a>GUI_font_to_pic_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, window_common.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_other_to_pic_init
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_font_to_pic_init
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_font_to_pic_init
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_font_to_pic_init
<LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_lable_check
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_label_set
</UL>
<BR>[Called By]<UL><LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;font_to_pic_timer_handler
</UL>

<P><STRONG><a name="[4fe]"></a>check_window_event_exist</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = check_window_event_exist
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_force_timeout
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_refresh
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_cb
</UL>

<P><STRONG><a name="[4fd]"></a>window_event_cb</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_window_event_exist
</UL>
<BR>[Called By]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_display
</UL>

<P><STRONG><a name="[502]"></a>window_layer_delete</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_layer_delete &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
</UL>

<P><STRONG><a name="[505]"></a>window_layer_home</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_layer_home &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_hide
</UL>

<P><STRONG><a name="[50d]"></a>set_window_act_timer</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = set_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
</UL>

<P><STRONG><a name="[1dc]"></a>window_event_start_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1dd]"></a>window_event_start_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1de]"></a>window_event_start_display</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1df]"></a>window_event_refresh</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = window_event_refresh &rArr; main_window_y_buf_init &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_window_event_exist
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e0]"></a>window_event_key1_short</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_key1_short &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e1]"></a>window_event_key1_long</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_event_key1_long
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e2]"></a>window_event_act</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = window_event_act &rArr; close_window_act_timer &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e3]"></a>window_event_timeout</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = window_event_timeout &rArr; window_event_timeout_root &rArr; TP_enter_deep_sleep_mode &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e4]"></a>window_event_force_timeout</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = window_event_force_timeout &rArr; window_event_timeout_root &rArr; TP_enter_deep_sleep_mode &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_window_event_exist
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e5]"></a>window_event_bt_pair</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_bt_pair &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e6]"></a>window_event_app_language</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_app_language &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e7]"></a>window_event_message</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_message &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e8]"></a>window_event_call</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_call &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1e9]"></a>window_event_alarm</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_alarm &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1ea]"></a>window_event_sedentary_reminder</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_sedentary_reminder &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1eb]"></a>window_event_battery_charger</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_battery_charger &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1ec]"></a>window_event_light_on</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_light_on &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1ed]"></a>window_event_reboot</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_reboot &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1ee]"></a>window_event_low_power_alarm</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_low_power_alarm &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1fd]"></a>window_event_go_home</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = window_event_go_home &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1ef]"></a>window_event_hide</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = window_event_hide &rArr; init_all_windows &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_home
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;init_all_windows
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f0]"></a>window_event_target_finish</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_target_finish &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f1]"></a>window_event_alarm_heart</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f2]"></a>window_event_photograph</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_photograph &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f3]"></a>window_event_find_device</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_find_device &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f4]"></a>window_event_drink_alarm</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_drink_alarm &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disturb_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f5]"></a>window_event_app_sport</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_app_sport &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_cmd_handler
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f6]"></a>window_event_touch_move</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = window_event_touch_move
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f8]"></a>window_event_O2_cmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_O2_cmd &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f9]"></a>window_event_BP_cmd</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_BP_cmd &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1f7]"></a>window_event_touch_click</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1fa]"></a>window_event_app_test</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_app_test &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1fb]"></a>window_event_OTA</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_OTA &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[1fc]"></a>window_event_woman_alarm</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = window_event_woman_alarm &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> window_manager.o(.ram.sharecacheram.text)
</UL>
<P><STRONG><a name="[506]"></a>window_layer_get_top</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, window_manager.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_top_window
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_act_timer_handler
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete_repeat
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_battery_charger
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_act_timer
</UL>

<P><STRONG><a name="[50c]"></a>set_window_timeout_timer</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_backlight_timeout
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
</UL>

<P><STRONG><a name="[504]"></a>window_event_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = window_event_init &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_window_timeout_timer
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_cb
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_add
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_cover
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_home
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete
</UL>

<P><STRONG><a name="[503]"></a>window_event_exit</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_y_buf_init
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_label_lock
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_cb
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_move_info
</UL>
<BR>[Called By]<UL><LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_add
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_cover
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_app_sport
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_go_home
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_home
<LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_delete
</UL>

<P><STRONG><a name="[508]"></a>window_layer_cover</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = window_layer_cover &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
</UL>

<P><STRONG><a name="[509]"></a>window_layer_add</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = window_layer_add &rArr; window_event_exit &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_exit
<LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_init
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
</UL>

<P><STRONG><a name="[50a]"></a>window_layer_delete_repeat</STRONG> (Thumb, 80 bytes, Stack size 96 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = window_layer_delete_repeat
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_layer_get_top
</UL>
<BR>[Called By]<UL><LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch_handler
</UL>

<P><STRONG><a name="[50e]"></a>get_window_event</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, window_manager.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_window_event
</UL>
<BR>[Calls]<UL><LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timer_handler
</UL>

<P><STRONG><a name="[18]"></a>mix_thread_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, mix_timer_thread.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = mix_thread_init &rArr; data_manager_thread_init &rArr; init_data_manager &rArr; block_check_patch_img_OTA &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_init
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_init
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc_thread_init
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_manager_thread_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mix_timer_thread.o(.text)
</UL>
<P><STRONG><a name="[63]"></a>logo_window_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, logo_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = logo_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logo_window.o(.constdata)
</UL>
<P><STRONG><a name="[64]"></a>logo_window_exit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, logo_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = logo_window_exit &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logo_window.o(.constdata)
</UL>
<P><STRONG><a name="[65]"></a>logo_window_display</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, logo_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = logo_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logo_window.o(.constdata)
</UL>
<P><STRONG><a name="[66]"></a>logo_window_act</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, logo_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = logo_window_act
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_font_updata_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> logo_window.o(.constdata)
</UL>
<P><STRONG><a name="[517]"></a>main_window_get_weather</STRONG> (Thumb, 262 bytes, Stack size 56 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = main_window_get_weather &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather_id
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_40
</UL>

<P><STRONG><a name="[71]"></a>main_window_22</STRONG> (Thumb, 442 bytes, Stack size 88 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = main_window_22 &rArr; ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_capacity
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[72]"></a>main_window_23</STRONG> (Thumb, 648 bytes, Stack size 112 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = main_window_23 &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[6d]"></a>main_window_24</STRONG> (Thumb, 558 bytes, Stack size 184 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464 + Unknown Stack Size
<LI>Call Chain = main_window_24 &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>main_window_26</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = main_window_26 &rArr; ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[6e]"></a>main_window_27</STRONG> (Thumb, 128 bytes, Stack size 96 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = main_window_27 &rArr; ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_level
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[6f]"></a>main_window_28</STRONG> (Thumb, 98 bytes, Stack size 96 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = main_window_28 &rArr; ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_level
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[73]"></a>main_window_40</STRONG> (Thumb, 354 bytes, Stack size 232 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608 + Unknown Stack Size
<LI>Call Chain = main_window_40 &rArr; ui_draw_plugs &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_capacity
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_plugs
<LI><a href="#[51d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_hour
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[6c]"></a>main_window_40_act</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main_window_40_act &rArr; ui_draw_picture_ex_once
</UL>
<BR>[Calls]<UL><LI><a href="#[51c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_once
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[51e]"></a>main_window_part</STRONG> (Thumb, 1208 bytes, Stack size 136 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = main_window_part &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[51f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_part_area_set
<LI><a href="#[520]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_part_area_display
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_sin
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__hardfp_cos
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_act
</UL>

<P><STRONG><a name="[74]"></a>main_window_setting</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = main_window_setting &rArr; watchface_3_parse &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_3_parse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[75]"></a>main_window_user_define</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560 + Unknown Stack Size
<LI>Call Chain = main_window_user_define &rArr; watchface_4_parse &rArr; watchface_circle_bar_display &rArr; ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_parse
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[76]"></a>main_window_init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = main_window_init &rArr; main_window_y_buf_init &rArr; ui_display_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_y_buf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[77]"></a>main_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_4_y_buf_init
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather_id
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[78]"></a>main_window_display</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = main_window_display &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_flag_check
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get_12h
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[79]"></a>main_window_act</STRONG> (Thumb, 422 bytes, Stack size 56 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = main_window_act &rArr; main_window_part &rArr; __hardfp_sin &rArr; __ieee754_rem_pio2 &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get_12h
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[51e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_part
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[7a]"></a>main_window_touch_move</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = main_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
<LI><a href="#[521]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;more_info_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>main_window_touch_click</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main_window_touch_click
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[7c]"></a>main_window_key1_short</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main_window_key1_short &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main_window.o(.constdata)
</UL>
<P><STRONG><a name="[518]"></a>main_window_get_weather_id</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, main_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_window_get_weather
</UL>

<P><STRONG><a name="[523]"></a>check_ota_data</STRONG> (Thumb, 270 bytes, Stack size 72 bytes, ota_updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = check_ota_data &rArr; block_spi_flash_crc16 &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_crc16
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
</UL>

<P><STRONG><a name="[524]"></a>ota_data_move</STRONG> (Thumb, 292 bytes, Stack size 336 bytes, ota_updata.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = ota_data_move &rArr; block_spi_flash_erase_4k &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_erase_4k
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_write
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_updata
</UL>

<P><STRONG><a name="[7d]"></a>BP_info_window_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BP_info_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bp_set_real_mode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[7e]"></a>BP_info_window_exit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BP_info_window_exit &rArr; bp_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bp_set_real_mode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_control_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[7f]"></a>BP_info_window_display</STRONG> (Thumb, 168 bytes, Stack size 128 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = BP_info_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[80]"></a>BP_info_window_act</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BP_info_window_act &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_layer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[81]"></a>BP_info_window_real_heart</STRONG> (Thumb, 184 bytes, Stack size 24 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BP_info_window_real_heart &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_result_get
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[82]"></a>BP_info_window_heart_touch</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BP_info_window_heart_touch &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[83]"></a>BP_info_window_BP_cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, bp_child_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[84]"></a>BP_info_window_touch_move</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bp_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BP_info_window_touch_move
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[85]"></a>BP_window_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bp_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BP_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[86]"></a>BP_window_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bp_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[87]"></a>BP_window_display</STRONG> (Thumb, 144 bytes, Stack size 128 bytes, bp_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = BP_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[526]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BP_window_display_line
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[88]"></a>BP_window_touch_click</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bp_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>BP_window_act</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bp_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[8a]"></a>BP_window_touch_move</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bp_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bp_window.o(.constdata)
</UL>
<P><STRONG><a name="[8b]"></a>heart_info_window_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = heart_info_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_real_mode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[8c]"></a>heart_info_window_exit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = heart_info_window_exit &rArr; hr_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_real_mode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_control_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[8d]"></a>heart_info_window_display</STRONG> (Thumb, 194 bytes, Stack size 128 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = heart_info_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_result_get
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display_line
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Right
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[8e]"></a>heart_info_window_act</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = heart_info_window_act &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_layer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[8f]"></a>heart_info_window_real_heart</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = heart_info_window_real_heart &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>heart_info_window_heart_touch</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = heart_info_window_heart_touch &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>heart_info_window_touch_move</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, heart_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = heart_info_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>heart_window_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, heart_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = heart_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>heart_window_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, heart_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>heart_window_display</STRONG> (Thumb, 68 bytes, Stack size 40 bytes, heart_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 376 + Unknown Stack Size
<LI>Call Chain = heart_window_display &rArr; heart_window_display_line &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_window_display_line
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>heart_window_touch_click</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, heart_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>heart_window_act</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, heart_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = heart_window_act &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>heart_window_touch_move</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, heart_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = heart_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> heart_window.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>message_info_child_window_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, message_info_child_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>message_info_child_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, message_info_child_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[9a]"></a>message_info_child_window_display</STRONG> (Thumb, 662 bytes, Stack size 336 bytes, message_info_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 856 + Unknown Stack Size
<LI>Call Chain = message_info_child_window_display &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_message_item
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_restore
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_language_chk_layout_right
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[530]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_display_y_pos
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_AutoLine
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>message_info_child_window_touch_move</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, message_info_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = message_info_child_window_touch_move &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>message_info_child_window_message</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, message_info_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = message_info_child_window_message &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>message_info_child_window_go_home</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, message_info_child_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[9e]"></a>message_info_window_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, message_info_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>message_info_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, message_info_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[531]"></a>message_info_window_display_data</STRONG> (Thumb, 496 bytes, Stack size 296 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 816 + Unknown Stack Size
<LI>Call Chain = message_info_window_display_data &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_read_message_item
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_restore
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_layout_init
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
</UL>

<P><STRONG><a name="[a0]"></a>message_info_window_display</STRONG> (Thumb, 120 bytes, Stack size 120 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 936 + Unknown Stack Size
<LI>Call Chain = message_info_window_display &rArr; message_info_window_display_data &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[534]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_clear
<LI><a href="#[531]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display_data
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[a1]"></a>message_info_window_touch_move</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = message_info_window_touch_move &rArr; message_info_window_touch_move_msg &rArr; block_get_message_items &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[535]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>message_info_window_touch_click</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = message_info_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_clear_message_item
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>message_info_window_message</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = message_info_window_message &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> message_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[534]"></a>message_info_window_display_clear</STRONG> (Thumb, 92 bytes, Stack size 48 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568 + Unknown Stack Size
<LI>Call Chain = message_info_window_display_clear &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_display
</UL>

<P><STRONG><a name="[535]"></a>message_info_window_touch_move_msg</STRONG> (Thumb, 182 bytes, Stack size 16 bytes, message_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = message_info_window_touch_move_msg &rArr; block_get_message_items &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_get_message_items
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move_scroll_start
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;message_info_window_touch_move
</UL>

<P><STRONG><a name="[a4]"></a>about_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, about_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> about_window.o(.constdata)
</UL>
<P><STRONG><a name="[a5]"></a>about_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, about_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> about_window.o(.constdata)
</UL>
<P><STRONG><a name="[a6]"></a>about_window_display</STRONG> (Thumb, 288 bytes, Stack size 80 bytes, about_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = about_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;calculate_crc16
<LI><a href="#[536]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_config_file_flag
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> about_window.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>about_window_key1_short</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, about_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> about_window.o(.constdata)
</UL>
<P><STRONG><a name="[a8]"></a>brightness_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, brightness_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> brightness_window.o(.constdata)
</UL>
<P><STRONG><a name="[a9]"></a>brightness_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, brightness_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> brightness_window.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>brightness_window_display</STRONG> (Thumb, 228 bytes, Stack size 128 bytes, brightness_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = brightness_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[537]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_get
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> brightness_window.o(.constdata)
</UL>
<P><STRONG><a name="[ab]"></a>brightness_window_touch_click</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, brightness_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = brightness_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> brightness_window.o(.constdata)
</UL>
<P><STRONG><a name="[ac]"></a>factory_reset_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, factory_reset_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> factory_reset_window.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>factory_reset_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, factory_reset_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> factory_reset_window.o(.constdata)
</UL>
<P><STRONG><a name="[ae]"></a>factory_reset_window_display</STRONG> (Thumb, 200 bytes, Stack size 136 bytes, factory_reset_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = factory_reset_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_reset_window.o(.constdata)
</UL>
<P><STRONG><a name="[af]"></a>factory_reset_window_touch_click</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, factory_reset_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_reset_window.o(.constdata)
</UL>
<P><STRONG><a name="[b0]"></a>find_phone_window_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, find_phone_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = find_phone_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_phone_window.o(.constdata)
</UL>
<P><STRONG><a name="[b1]"></a>find_phone_window_exit</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, find_phone_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = find_phone_window_exit &rArr; find_phone &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;find_phone
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_phone_window.o(.constdata)
</UL>
<P><STRONG><a name="[b2]"></a>find_phone_window_display</STRONG> (Thumb, 86 bytes, Stack size 120 bytes, find_phone_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = find_phone_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_phone_window.o(.constdata)
</UL>
<P><STRONG><a name="[b3]"></a>find_phone_window_act</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, find_phone_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = find_phone_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_phone_window.o(.constdata)
</UL>
<P><STRONG><a name="[b4]"></a>goodbye_window_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, goodbye_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = goodbye_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> goodbye_window.o(.constdata)
</UL>
<P><STRONG><a name="[b5]"></a>goodbye_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, goodbye_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> goodbye_window.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>goodbye_window_display</STRONG> (Thumb, 58 bytes, Stack size 120 bytes, goodbye_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = goodbye_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> goodbye_window.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>goodbye_window_act</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, goodbye_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = goodbye_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;reset_factory_timer_handler
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_shutdown
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> goodbye_window.o(.constdata)
</UL>
<P><STRONG><a name="[b8]"></a>lcd_timeout_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_timeout_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcd_timeout_window.o(.constdata)
</UL>
<P><STRONG><a name="[b9]"></a>lcd_timeout_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd_timeout_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> lcd_timeout_window.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>lcd_timeout_window_display</STRONG> (Thumb, 192 bytes, Stack size 48 bytes, lcd_timeout_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = lcd_timeout_window_display &rArr; ui_draw_arc_AA &rArr; __hardfp_tan &rArr; __kernel_tan &rArr; __kernel_poly &rArr; __aeabi_dmul
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_backlight_timeout
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_timeout_window.o(.constdata)
</UL>
<P><STRONG><a name="[bb]"></a>lcd_timeout_window_touch_click</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, lcd_timeout_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = lcd_timeout_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_backlight_timeout
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_backlight_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd_timeout_window.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>more_info_window_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = more_info_window_init &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> more_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>more_info_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, more_info_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> more_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[be]"></a>more_info_window_display</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = more_info_window_display &rArr; self_window_display &rArr; GUI_Font_pic_display &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> more_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>more_info_window_touch_click</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = more_info_window_touch_click &rArr; self_window_touch_click
</UL>
<BR>[Calls]<UL><LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_click
<LI><a href="#[522]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> more_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>more_info_window_touch_move</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, more_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = more_info_window_touch_move &rArr; self_window_touch_move &rArr; window_move_self &rArr; window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> more_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>QR_code_window_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, qr_code_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = QR_code_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qr_code_window.o(.constdata)
</UL>
<P><STRONG><a name="[c2]"></a>QR_code_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, qr_code_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> qr_code_window.o(.constdata)
</UL>
<P><STRONG><a name="[c3]"></a>QR_code_window_display</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, qr_code_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = QR_code_window_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qr_code_window.o(.constdata)
</UL>
<P><STRONG><a name="[c4]"></a>QR_code_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, qr_code_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qr_code_window.o(.constdata)
</UL>
<P><STRONG><a name="[c5]"></a>QR_code_window_touch_click</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, qr_code_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> qr_code_window.o(.constdata)
</UL>
<P><STRONG><a name="[c6]"></a>shutdown_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, shutdown_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> shutdown_window.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>shutdown_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, shutdown_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> shutdown_window.o(.constdata)
</UL>
<P><STRONG><a name="[c8]"></a>shutdown_window_display</STRONG> (Thumb, 94 bytes, Stack size 120 bytes, shutdown_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = shutdown_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_window.o(.constdata)
</UL>
<P><STRONG><a name="[c9]"></a>shutdown_window_touch_click</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, shutdown_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> shutdown_window.o(.constdata)
</UL>
<P><STRONG><a name="[ca]"></a>stopwatch_window_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stopwatch_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[cb]"></a>stopwatch_window_exit</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = stopwatch_window_exit &rArr; get_stopwatch_time
</UL>
<BR>[Calls]<UL><LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stopwatch_time
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>stopwatch_window_display</STRONG> (Thumb, 202 bytes, Stack size 64 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = stopwatch_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stopwatch_time
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[cd]"></a>stopwatch_window_touch_click</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = stopwatch_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[542]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_stopwatch_time
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>stopwatch_window_act</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = stopwatch_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_block_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>stopwatch_window_timeout</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stopwatch_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = stopwatch_window_timeout &rArr; window_event_timeout_root &rArr; TP_enter_deep_sleep_mode &rArr; hctp_write_bytes &rArr; twi0_write &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_event_timeout_root
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stopwatch_window.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>watchface_select_window_init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, watchface_select_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = watchface_select_window_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchface_select_window.o(.constdata)
</UL>
<P><STRONG><a name="[d1]"></a>watchface_select_window_exit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, watchface_select_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> watchface_select_window.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>watchface_select_window_display</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, watchface_select_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = watchface_select_window_display &rArr; ui_draw_progress_bar_up &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_flag_check
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;display_watchface_zoom_pic
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchface_select_window.o(.constdata)
</UL>
<P><STRONG><a name="[d3]"></a>watchface_select_window_touch_click</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, watchface_select_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = watchface_select_window_touch_click &rArr; block_save_user_info &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchface_select_window.o(.constdata)
</UL>
<P><STRONG><a name="[d4]"></a>watchface_select_window_touch_move</STRONG> (Thumb, 164 bytes, Stack size 24 bytes, watchface_select_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 236<LI>Call Chain = watchface_select_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;watchface_4_flag_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> watchface_select_window.o(.constdata)
</UL>
<P><STRONG><a name="[544]"></a>app_sport_time_get</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_sport_time_get
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
</UL>
<BR>[Called By]<UL><LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_init
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
</UL>

<P><STRONG><a name="[545]"></a>device_sport_cmd_handler</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = device_sport_cmd_handler &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[546]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_data_type_queue_status
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_time_get
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_ble_connect_status
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_key_short
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_touch_click
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_act
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display
</UL>

<P><STRONG><a name="[d5]"></a>app_sport_window_init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_sport_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_time_get
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_go_home_set_lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[d6]"></a>app_sport_window_exit</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = app_sport_window_exit &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[547]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_go_home_set_lock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[548]"></a>app_sport_window_display_data</STRONG> (Thumb, 534 bytes, Stack size 80 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = app_sport_window_display_data &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_result_get
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[549]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_display_x_pos
<LI><a href="#[544]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_time_get
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display
</UL>

<P><STRONG><a name="[54a]"></a>app_sport_pause_window_display</STRONG> (Thumb, 280 bytes, Stack size 128 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = app_sport_pause_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display
</UL>

<P><STRONG><a name="[d7]"></a>app_sport_window_display</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = app_sport_window_display &rArr; app_sport_pause_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[54a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_pause_window_display
<LI><a href="#[548]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_window_display_data
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>app_sport_window_act</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_sport_window_act &rArr; device_sport_cmd_handler &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[d9]"></a>app_sport_window_touch_click</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_sport_window_touch_click &rArr; device_sport_cmd_handler &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[da]"></a>app_sport_window_key_short</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_sport_window_key_short &rArr; device_sport_cmd_handler &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[db]"></a>app_sport_window_app_sport_cmd</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = app_sport_window_app_sport_cmd &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_sport_cmd_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[dc]"></a>app_sport_window_ble_connect_status</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_sport_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_sport_window_ble_connect_status &rArr; device_sport_cmd_handler &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[545]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_sport_cmd_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_sport_window.o(.constdata)
</UL>
<P><STRONG><a name="[dd]"></a>sport_info_data_window_init</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sport_info_data_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[de]"></a>sport_info_data_window_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sport_info_data_window_exit &rArr; hr_set_sport_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_sport_mode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[54d]"></a>sport_info_data_window_display_walk</STRONG> (Thumb, 650 bytes, Stack size 72 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display_walk &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
</UL>

<P><STRONG><a name="[54e]"></a>sport_info_data_window_display_football</STRONG> (Thumb, 476 bytes, Stack size 56 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display_football &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
</UL>

<P><STRONG><a name="[54f]"></a>sport_info_data_window_display_swim</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display_swim &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
</UL>

<P><STRONG><a name="[550]"></a>sport_info_data_window_display_data</STRONG> (Thumb, 286 bytes, Stack size 56 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display_data &rArr; sport_info_data_window_display_football &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_mix_sport_info
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[54b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_time_get
<LI><a href="#[54f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_swim
<LI><a href="#[54e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_football
<LI><a href="#[54d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_walk
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display
</UL>

<P><STRONG><a name="[551]"></a>sport_info_data_window_display_pause</STRONG> (Thumb, 254 bytes, Stack size 128 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display_pause &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display
</UL>

<P><STRONG><a name="[df]"></a>sport_info_data_window_display</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = sport_info_data_window_display &rArr; sport_info_data_window_display_pause &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[551]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_pause
<LI><a href="#[550]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_info_data_window_display_data
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>sport_info_data_window_act</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sport_info_data_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[e1]"></a>sport_info_data_window_key1_short</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sport_info_data_window_key1_short &rArr; sport_status_set &rArr; mix_sport_stop &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>sport_info_data_window_touch_click</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, sport_info_data_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sport_info_data_window_touch_click &rArr; sport_status_set &rArr; mix_sport_stop &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_data_window.o(.constdata)
</UL>
<P><STRONG><a name="[e3]"></a>sport_info_window_init</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, sport_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = sport_info_window_init &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[e4]"></a>sport_info_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sport_info_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sport_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>sport_info_window_display</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sport_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 392 + Unknown Stack Size
<LI>Call Chain = sport_info_window_display &rArr; self_window_display &rArr; GUI_Font_pic_display &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[53b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[e6]"></a>sport_info_window_touch_click</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, sport_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = sport_info_window_touch_click &rArr; sport_status_set &rArr; mix_sport_stop &rArr; block_save_sensor_item &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[54c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sport_status_set
<LI><a href="#[540]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_click
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>sport_info_window_touch_move</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, sport_info_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = sport_info_window_touch_move &rArr; self_window_touch_move &rArr; window_move_self &rArr; window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sport_info_window.o(.constdata)
</UL>
<P><STRONG><a name="[e8]"></a>photograph_child_window_init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = photograph_child_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shake_set_onoff
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[e9]"></a>photograph_child_window_exit</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, photograph_child_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[552]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;shake_set_onoff
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[ea]"></a>photograph_child_window_display</STRONG> (Thumb, 166 bytes, Stack size 120 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = photograph_child_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[eb]"></a>photograph_child_window_shake_device</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = photograph_child_window_shake_device &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_photo
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>photograph_child_window_touch_click</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = photograph_child_window_touch_click &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_photo
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[ed]"></a>photograph_child_window_key1_short</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = photograph_child_window_key1_short &rArr; take_photo &rArr; push_data_type_to_queue &rArr; cmd_queue_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;take_photo
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[ee]"></a>photograph_child_window_photograph</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, photograph_child_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>photograph_child_window_act</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, photograph_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = photograph_child_window_act &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_appconnect
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> photograph_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>breath_child_window_init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, breath_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = breath_child_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[f1]"></a>breath_child_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, breath_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = breath_child_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[553]"></a>breath_child_window_display_start</STRONG> (Thumb, 130 bytes, Stack size 128 bytes, breath_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = breath_child_window_display_start &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_circle_AA
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display
</UL>

<P><STRONG><a name="[f2]"></a>breath_child_window_display</STRONG> (Thumb, 92 bytes, Stack size 136 bytes, breath_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 640 + Unknown Stack Size
<LI>Call Chain = breath_child_window_display &rArr; breath_child_window_display_start &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[553]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_child_window_display_start
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>breath_child_window_act</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, breath_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = breath_child_window_act &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>breath_setting_window_init</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>breath_setting_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[554]"></a>breath_setting_window_display_select</STRONG> (Thumb, 306 bytes, Stack size 136 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = breath_setting_window_display_select &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display
</UL>

<P><STRONG><a name="[555]"></a>breath_setting_window_display_time</STRONG> (Thumb, 296 bytes, Stack size 144 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = breath_setting_window_display_time &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display
</UL>

<P><STRONG><a name="[556]"></a>breath_setting_window_display_speed</STRONG> (Thumb, 286 bytes, Stack size 144 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = breath_setting_window_display_speed &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display
</UL>

<P><STRONG><a name="[f6]"></a>breath_setting_window_display</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + Unknown Stack Size
<LI>Call Chain = breath_setting_window_display &rArr; breath_setting_window_display_speed &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[556]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_speed
<LI><a href="#[555]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_time
<LI><a href="#[554]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_display_select
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>breath_setting_window_touch_click</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = breath_setting_window_touch_click &rArr; breath_setting_window_touch_click_select &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[557]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_click_select
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>breath_setting_window_touch_move</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = breath_setting_window_touch_move &rArr; breath_setting_window_touch_move_speed &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[559]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move_speed
<LI><a href="#[558]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move_time
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[f9]"></a>breath_setting_window_key_short</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = breath_setting_window_key_short &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> breath_setting_window.o(.constdata)
</UL>
<P><STRONG><a name="[557]"></a>breath_setting_window_touch_click_select</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = breath_setting_window_touch_click_select &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_click
</UL>

<P><STRONG><a name="[558]"></a>breath_setting_window_touch_move_time</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = breath_setting_window_touch_move_time &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move
</UL>

<P><STRONG><a name="[559]"></a>breath_setting_window_touch_move_speed</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, breath_setting_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = breath_setting_window_touch_move_speed &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;breath_setting_window_touch_move
</UL>

<P><STRONG><a name="[fa]"></a>music_window_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = music_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>music_window_exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, music_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[55a]"></a>music_window_display_music_ctrl</STRONG> (Thumb, 214 bytes, Stack size 136 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 656 + Unknown Stack Size
<LI>Call Chain = music_window_display_music_ctrl &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_get
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display
</UL>

<P><STRONG><a name="[fd]"></a>music_window_display</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 672 + Unknown Stack Size
<LI>Call Chain = music_window_display &rArr; music_window_display_music_ctrl &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[55d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_vol_ctrl
<LI><a href="#[55a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display_music_ctrl
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[fe]"></a>music_window_key1_short</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = music_window_key1_short &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[ff]"></a>music_window_touch_click</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = music_window_touch_click &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_control_handler
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[100]"></a>music_window_touch_move</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = music_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>music_window_act</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = music_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_get
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_backlight_timeout
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
<LI><a href="#[538]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_backlight_timeout
</UL>
<BR>[Address Reference Count : 1]<UL><LI> music_window.o(.constdata)
</UL>
<P><STRONG><a name="[55d]"></a>music_window_display_vol_ctrl</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, music_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = music_window_display_vol_ctrl &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[55b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;remote_music_info_get
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_circle_AA
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;music_window_display
</UL>

<P><STRONG><a name="[101]"></a>O2_info_window_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = O2_info_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_set_real_mode
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[102]"></a>O2_info_window_exit</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = O2_info_window_exit &rArr; O2_set_real_mode &rArr; hr_module_set &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_set_real_mode
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_control_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[103]"></a>O2_info_window_display</STRONG> (Thumb, 136 bytes, Stack size 120 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = O2_info_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display_line
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[104]"></a>O2_info_window_act</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = O2_info_window_act &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[528]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_layer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[105]"></a>O2_info_window_real_heart</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = O2_info_window_real_heart &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_sec_get
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;int_to_char
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_sensor_item
<LI><a href="#[529]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_result_get
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[106]"></a>O2_info_window_heart_touch</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = O2_info_window_heart_touch &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[107]"></a>O2_info_window_O2_cmd</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, o2_child_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[108]"></a>O2_info_window_touch_move</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, o2_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = O2_info_window_touch_move
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[109]"></a>O2_window_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, o2_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = O2_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>O2_window_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, o2_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10b]"></a>O2_window_display</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, o2_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368 + Unknown Stack Size
<LI>Call Chain = O2_window_display &rArr; O2_window_display_line &rArr; GUI_Picture_Digit_DispStringAt &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[55e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;O2_window_display_line
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10c]"></a>O2_window_touch_click</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, o2_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10d]"></a>O2_window_act</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, o2_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>O2_window_touch_move</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, o2_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> o2_window.o(.constdata)
</UL>
<P><STRONG><a name="[10f]"></a>alarm_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = alarm_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[110]"></a>alarm_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = alarm_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[111]"></a>alarm_window_display</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352 + Unknown Stack Size
<LI>Call Chain = alarm_window_display &rArr; GUI_Picture_Digit_DispStringAt_Hcenter &rArr; GUI_Picture_Digit_DispStringAt_Hcenter_Point &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[112]"></a>alarm_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, alarm_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[113]"></a>alarm_window_touch_move</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, alarm_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[114]"></a>app_pair_window_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_pair_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_pair_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pair_window.o(.constdata)
</UL>
<P><STRONG><a name="[115]"></a>app_pair_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_pair_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_pair_window.o(.constdata)
</UL>
<P><STRONG><a name="[116]"></a>app_pair_window_display</STRONG> (Thumb, 72 bytes, Stack size 112 bytes, app_pair_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488 + Unknown Stack Size
<LI>Call Chain = app_pair_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pair_window.o(.constdata)
</UL>
<P><STRONG><a name="[117]"></a>app_pair_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, app_pair_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pair_window.o(.constdata)
</UL>
<P><STRONG><a name="[118]"></a>battery_charging_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, battery_charging_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> battery_charging_window.o(.constdata)
</UL>
<P><STRONG><a name="[119]"></a>battery_charging_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, battery_charging_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> battery_charging_window.o(.constdata)
</UL>
<P><STRONG><a name="[11a]"></a>battery_charging_window_display</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, battery_charging_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432 + Unknown Stack Size
<LI>Call Chain = battery_charging_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_capacity
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_charging_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery_charging_window.o(.constdata)
</UL>
<P><STRONG><a name="[11b]"></a>battery_charging_window_battery_charger</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, battery_charging_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = battery_charging_window_battery_charger &rArr; lcd_status_check &rArr; TP_wakeup &rArr; hctp_read_bytes &rArr; twi0_read_reg &rArr; I2C0_mutex_take &rArr; twi0_init &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lcd_status_check
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> battery_charging_window.o(.constdata)
</UL>
<P><STRONG><a name="[11c]"></a>call_window_init</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, call_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = call_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[11d]"></a>call_window_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, call_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = call_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[11e]"></a>call_window_display</STRONG> (Thumb, 144 bytes, Stack size 88 bytes, call_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 608<LI>Call Chain = call_window_display &rArr; GUI_HZ_DispStringAt_Hcenter &rArr; GUI_HZ_DispStringAt &rArr; _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[11f]"></a>call_window_act</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, call_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = call_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[55f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_call_flag
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[120]"></a>call_window_call_cmd</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, call_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[121]"></a>call_window_touch_click</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, call_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = call_window_touch_click &rArr; call_control_handler &rArr; ancs_phone_control &rArr; app_ancsc_call_control &rArr; ancs_perform_notification_action
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;call_control_handler
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[122]"></a>call_window_ble_connect_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, call_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[123]"></a>call_window_key1_short</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, call_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> call_window.o(.constdata)
</UL>
<P><STRONG><a name="[124]"></a>drink_alarm_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, drink_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = drink_alarm_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drink_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[125]"></a>drink_alarm_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, drink_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = drink_alarm_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drink_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[126]"></a>drink_alarm_window_display</STRONG> (Thumb, 128 bytes, Stack size 128 bytes, drink_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = drink_alarm_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drink_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[127]"></a>drink_alarm_window_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drink_alarm_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drink_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[128]"></a>drink_alarm_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, drink_alarm_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drink_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[129]"></a>find_device_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, find_device_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = find_device_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_device_window.o(.constdata)
</UL>
<P><STRONG><a name="[12a]"></a>find_device_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, find_device_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = find_device_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_device_window.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>find_device_window_display</STRONG> (Thumb, 76 bytes, Stack size 120 bytes, find_device_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496 + Unknown Stack Size
<LI>Call Chain = find_device_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_device_window.o(.constdata)
</UL>
<P><STRONG><a name="[12c]"></a>find_device_window_ble_connect_status</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, find_device_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_device_window.o(.constdata)
</UL>
<P><STRONG><a name="[12d]"></a>find_device_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, find_device_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> find_device_window.o(.constdata)
</UL>
<P><STRONG><a name="[12e]"></a>led_onoff_window_init</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, led_onoff_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = led_onoff_window_init &rArr; update_pwm
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_pwm
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[12f]"></a>led_onoff_window_exit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, led_onoff_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = led_onoff_window_exit &rArr; oled_backlight_set &rArr; update_pwm
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[560]"></a>TP_test_window_display</STRONG> (Thumb, 212 bytes, Stack size 24 bytes, led_onoff_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TP_test_window_display &rArr; ui_draw_fill_rectangle &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_vertical_line
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
</UL>
<BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_onoff_window_display
</UL>

<P><STRONG><a name="[130]"></a>led_onoff_window_display</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, led_onoff_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = led_onoff_window_display &rArr; TP_test_window_display &rArr; ui_draw_fill_rectangle &rArr; _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[560]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_test_window_display
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[131]"></a>led_onoff_window_touch_click</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, led_onoff_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = led_onoff_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[132]"></a>led_onoff_window_touch_move</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, led_onoff_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[133]"></a>led_onoff_window_act</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, led_onoff_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> led_onoff_window.o(.constdata)
</UL>
<P><STRONG><a name="[134]"></a>low_power_window_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, low_power_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = low_power_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_window.o(.constdata)
</UL>
<P><STRONG><a name="[135]"></a>low_power_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, low_power_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> low_power_window.o(.constdata)
</UL>
<P><STRONG><a name="[136]"></a>low_power_window_display</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, low_power_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = low_power_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Called By]<UL><LI><a href="#[562]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_window.o(.constdata)
</UL>
<P><STRONG><a name="[137]"></a>low_power_window_go_home</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, low_power_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_window.o(.constdata)
</UL>
<P><STRONG><a name="[138]"></a>low_power_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, low_power_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> low_power_window.o(.constdata)
</UL>
<P><STRONG><a name="[139]"></a>power_analysis_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, power_analysis_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> power_analysis_window.o(.constdata)
</UL>
<P><STRONG><a name="[13a]"></a>power_analysis_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, power_analysis_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> power_analysis_window.o(.constdata)
</UL>
<P><STRONG><a name="[13b]"></a>power_analysis_window_display</STRONG> (Thumb, 440 bytes, Stack size 80 bytes, power_analysis_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = power_analysis_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_info
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> power_analysis_window.o(.constdata)
</UL>
<P><STRONG><a name="[13c]"></a>sedentary_remind_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, sedentary_remind_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sedentary_remind_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sedentary_remind_window.o(.constdata)
</UL>
<P><STRONG><a name="[13d]"></a>sedentary_remind_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sedentary_remind_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sedentary_remind_window.o(.constdata)
</UL>
<P><STRONG><a name="[13e]"></a>sedentary_remind_window_display</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, sedentary_remind_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = sedentary_remind_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sedentary_remind_window.o(.constdata)
</UL>
<P><STRONG><a name="[13f]"></a>sedentary_remind_window_go_home</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sedentary_remind_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sedentary_remind_window.o(.constdata)
</UL>
<P><STRONG><a name="[140]"></a>sedentary_remind_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sedentary_remind_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sedentary_remind_window.o(.constdata)
</UL>
<P><STRONG><a name="[141]"></a>target_window_init</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, target_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = target_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target_window.o(.constdata)
</UL>
<P><STRONG><a name="[142]"></a>target_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, target_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = target_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target_window.o(.constdata)
</UL>
<P><STRONG><a name="[143]"></a>target_window_display</STRONG> (Thumb, 78 bytes, Stack size 40 bytes, target_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416 + Unknown Stack Size
<LI>Call Chain = target_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target_window.o(.constdata)
</UL>
<P><STRONG><a name="[144]"></a>target_window_timeout</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, target_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> target_window.o(.constdata)
</UL>
<P><STRONG><a name="[145]"></a>test_window_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, test_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = test_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[146]"></a>test_window_exit</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, test_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = test_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_real_mode
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[147]"></a>test_window_display</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, test_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = test_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hr_set_real_mode
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sc7a20_device
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[148]"></a>test_window_app_test</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, test_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = test_window_app_test &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[149]"></a>test_window_key_short</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, test_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[14a]"></a>test_window_act</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, test_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = test_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> test_window.o(.constdata)
</UL>
<P><STRONG><a name="[14b]"></a>quick_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, quick_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> quick_window.o(.constdata)
</UL>
<P><STRONG><a name="[14c]"></a>quick_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, quick_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> quick_window.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>quick_window_display</STRONG> (Thumb, 292 bytes, Stack size 56 bytes, quick_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 296 + Unknown Stack Size
<LI>Call Chain = quick_window_display &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_ble_connect_flag
<LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_level
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_battery_capacity
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> quick_window.o(.constdata)
</UL>
<P><STRONG><a name="[14e]"></a>quick_window_touch_move</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, quick_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = quick_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> quick_window.o(.constdata)
</UL>
<P><STRONG><a name="[14f]"></a>quick_window_touch_click</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, quick_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = quick_window_touch_click &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_save_user_info
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;push_data_type_to_queue
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> quick_window.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>sleep_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleep_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sleep_window.o(.constdata)
</UL>
<P><STRONG><a name="[151]"></a>sleep_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleep_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> sleep_window.o(.constdata)
</UL>
<P><STRONG><a name="[152]"></a>sleep_window_display</STRONG> (Thumb, 506 bytes, Stack size 168 bytes, sleep_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = sleep_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleep_window.o(.constdata)
</UL>
<P><STRONG><a name="[153]"></a>sleep_window_touch_move</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, sleep_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = sleep_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleep_window.o(.constdata)
</UL>
<P><STRONG><a name="[154]"></a>steps_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, steps_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> steps_window.o(.constdata)
</UL>
<P><STRONG><a name="[155]"></a>steps_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, steps_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> steps_window.o(.constdata)
</UL>
<P><STRONG><a name="[156]"></a>steps_window_display</STRONG> (Thumb, 410 bytes, Stack size 64 bytes, steps_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + Unknown Stack Size
<LI>Call Chain = steps_window_display &rArr; GUI_Picture_Digit_DispStringAt_Hcenter &rArr; GUI_Picture_Digit_DispStringAt_Hcenter_Point &rArr; _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_sport_info
<LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> steps_window.o(.constdata)
</UL>
<P><STRONG><a name="[157]"></a>steps_window_touch_move</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, steps_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = steps_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> steps_window.o(.constdata)
</UL>
<P><STRONG><a name="[158]"></a>weather_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, weather_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> weather_window.o(.constdata)
</UL>
<P><STRONG><a name="[159]"></a>weather_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, weather_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> weather_window.o(.constdata)
</UL>
<P><STRONG><a name="[15a]"></a>weather_window_display</STRONG> (Thumb, 1138 bytes, Stack size 216 bytes, weather_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 592 + Unknown Stack Size
<LI>Call Chain = weather_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_time_get
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;time_to_sec
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[564]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;weather_pic_get
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_unlock_color
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_lock_color
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
<LI><a href="#[525]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather_window.o(.constdata)
</UL>
<P><STRONG><a name="[15b]"></a>weather_window_touch_move</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, weather_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = weather_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> weather_window.o(.constdata)
</UL>
<P><STRONG><a name="[565]"></a>touch_press</STRONG> (Thumb, 208 bytes, Stack size 40 bytes, window_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touch_press &rArr; send_touch_click_event &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_click_event
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_move_event
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_handler
</UL>

<P><STRONG><a name="[568]"></a>touch_release</STRONG> (Thumb, 274 bytes, Stack size 40 bytes, window_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touch_release &rArr; send_touch_click_event &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[567]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_click_event
<LI><a href="#[566]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_touch_move_event
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_handler
</UL>

<P><STRONG><a name="[566]"></a>send_touch_move_event</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, window_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = send_touch_move_event &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_release
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_press
</UL>

<P><STRONG><a name="[567]"></a>send_touch_click_event</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, window_touch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = send_touch_click_event &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Called By]<UL><LI><a href="#[568]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_release
<LI><a href="#[565]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_press
</UL>

<P><STRONG><a name="[15c]"></a>OTA_window_init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, ota_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = OTA_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_window.o(.constdata)
</UL>
<P><STRONG><a name="[15d]"></a>OTA_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ota_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> ota_window.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>OTA_window_display</STRONG> (Thumb, 264 bytes, Stack size 64 bytes, ota_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = OTA_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTickMS
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_font_updata_check
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_window.o(.constdata)
</UL>
<P><STRONG><a name="[15f]"></a>OTA_window_act</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ota_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = OTA_window_act &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_font_updata_check
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_window.o(.constdata)
</UL>
<P><STRONG><a name="[160]"></a>OTA_window_ble_connect_status</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, ota_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OTA_window_ble_connect_status &rArr; char_to_int
</UL>
<BR>[Calls]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ota_font_updata_check
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ota_window.o(.constdata)
</UL>
<P><STRONG><a name="[1d8]"></a>factory_test_uart_read_timer_handler</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = factory_test_uart_read_timer_handler &rArr; factory_test_data_handler &rArr; factory_test_adc &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.data)
</UL>
<P><STRONG><a name="[1d9]"></a>factory_test_adv_display_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = factory_test_adv_display_handler &rArr; oled_backlight_set &rArr; update_pwm
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_backlight_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.data)
</UL>
<P><STRONG><a name="[1da]"></a>factory_test_adv_stop_timer_handler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = factory_test_adv_stop_timer_handler &rArr; oled_deinit &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.data)
</UL>
<P><STRONG><a name="[1db]"></a>factory_test_sleep_timer_handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = factory_test_sleep_timer_handler &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>factory_test_task</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = factory_test_task &rArr; ble_init &rArr; app_le_gap_init &rArr; ble_advertise_param_init &rArr; calculate_crc16
</UL>
<BR>[Calls]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_init
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TP_enter_deep_sleep_mode
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;battery_init
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_hr_init
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;test_sc7a20_device
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sc7a20_enter_low_mode
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_irq_init
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_deinit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_init
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;low_power_motor_init
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[56d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_version
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.text)
</UL>
<P><STRONG><a name="[1a]"></a>free_task_function</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = free_task_function &rArr; factory_test_pin_status_get &rArr; RCC_PeriphClockCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;system_reset
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_pin_status_get
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_delay
</UL>
<BR>[Address Reference Count : 1]<UL><LI> factory_test.o(.text)
</UL>
<P><STRONG><a name="[56e]"></a>factory_test_data_handler</STRONG> (Thumb, 124 bytes, Stack size 112 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = factory_test_data_handler &rArr; factory_test_adc &rArr; battery_read &rArr; battery_data_handler &rArr; set_battery_info &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;le_adv_stop
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_set
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_timer_clear
<LI><a href="#[56c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_adc
<LI><a href="#[56f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_font_check
</UL>
<BR>[Called By]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_uart_read_timer_handler
</UL>

<P><STRONG><a name="[56f]"></a>factory_test_font_check</STRONG> (Thumb, 170 bytes, Stack size 56 bytes, factory_test.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = factory_test_font_check &rArr; block_spi_flash_crc16 &rArr; block_flash_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_send_data
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_crc16
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;block_spi_flash_read
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;char_to_int
</UL>
<BR>[Called By]<UL><LI><a href="#[56e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;factory_test_data_handler
</UL>

<P><STRONG><a name="[161]"></a>null_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, null_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> null_window.o(.constdata)
</UL>
<P><STRONG><a name="[162]"></a>null_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, null_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> null_window.o(.constdata)
</UL>
<P><STRONG><a name="[163]"></a>null_window_display</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, null_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> null_window.o(.constdata)
</UL>
<P><STRONG><a name="[164]"></a>woman_child_window_init</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = woman_child_window_init &rArr; woman_stage_calculate &rArr; time_to_sec &rArr; mktime &rArr; _tm_carry
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_stage_calculate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[165]"></a>woman_child_window_exit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, woman_child_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> woman_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[570]"></a>woman_child_window_display_yuejin</STRONG> (Thumb, 326 bytes, Stack size 176 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = woman_child_window_display_yuejin &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
</UL>

<P><STRONG><a name="[571]"></a>woman_child_window_display_pailuan</STRONG> (Thumb, 322 bytes, Stack size 176 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = woman_child_window_display_pailuan &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
</UL>

<P><STRONG><a name="[572]"></a>woman_child_window_display_anquan</STRONG> (Thumb, 414 bytes, Stack size 176 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552 + Unknown Stack Size
<LI>Call Chain = woman_child_window_display_anquan &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display
</UL>

<P><STRONG><a name="[166]"></a>woman_child_window_display</STRONG> (Thumb, 160 bytes, Stack size 128 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 680 + Unknown Stack Size
<LI>Call Chain = woman_child_window_display &rArr; woman_child_window_display_anquan &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[543]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_progress_bar_up
<LI><a href="#[572]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_anquan
<LI><a href="#[571]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_pailuan
<LI><a href="#[570]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_child_window_display_yuejin
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[167]"></a>woman_child_window_touch_move</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, woman_child_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = woman_child_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_child_window.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>woman_window_init</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, woman_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> woman_window.o(.constdata)
</UL>
<P><STRONG><a name="[169]"></a>woman_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, woman_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> woman_window.o(.constdata)
</UL>
<P><STRONG><a name="[16a]"></a>woman_window_display</STRONG> (Thumb, 170 bytes, Stack size 128 bytes, woman_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 504 + Unknown Stack Size
<LI>Call Chain = woman_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_window.o(.constdata)
</UL>
<P><STRONG><a name="[16b]"></a>woman_window_touch_click</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, woman_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_window.o(.constdata)
</UL>
<P><STRONG><a name="[16c]"></a>woman_window_touch_move</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, woman_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = woman_window_touch_move &rArr; window_move &rArr; window_move_handler &rArr; window_move_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[527]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_window_num
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_window.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>woman_alarm_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = woman_alarm_window_init &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[16e]"></a>woman_alarm_window_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = woman_alarm_window_exit &rArr; close_motor_msg &rArr; motor_power_off &rArr; power_analysis_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_motor_msg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[573]"></a>woman_alarm_window_display_yuejin</STRONG> (Thumb, 282 bytes, Stack size 168 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = woman_alarm_window_display_yuejin &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display
</UL>

<P><STRONG><a name="[574]"></a>woman_alarm_window_display_pailuan_start</STRONG> (Thumb, 278 bytes, Stack size 168 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = woman_alarm_window_display_pailuan_start &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display
</UL>

<P><STRONG><a name="[575]"></a>woman_alarm_window_display_pailuan_day</STRONG> (Thumb, 250 bytes, Stack size 152 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + Unknown Stack Size
<LI>Call Chain = woman_alarm_window_display_pailuan_day &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display
</UL>

<P><STRONG><a name="[576]"></a>woman_alarm_window_display_pailuan_end</STRONG> (Thumb, 342 bytes, Stack size 168 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = woman_alarm_window_display_pailuan_end &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_to_time
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2snprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display
</UL>

<P><STRONG><a name="[16f]"></a>woman_alarm_window_display</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, woman_alarm_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544 + Unknown Stack Size
<LI>Call Chain = woman_alarm_window_display &rArr; woman_alarm_window_display_pailuan_end &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[576]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_end
<LI><a href="#[575]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_day
<LI><a href="#[574]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_pailuan_start
<LI><a href="#[573]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;woman_alarm_window_display_yuejin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[170]"></a>woman_alarm_window_act</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, woman_alarm_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> woman_alarm_window.o(.constdata)
</UL>
<P><STRONG><a name="[578]"></a>language_self_window_display</STRONG> (Thumb, 164 bytes, Stack size 32 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = language_self_window_display &rArr; GUI_Font_pic_display_hcenter &rArr; _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_display_info
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display_hcenter
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_display
</UL>

<P><STRONG><a name="[171]"></a>language_window_init</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = language_window_init &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_display_switch_y_buf_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[172]"></a>language_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, language_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[173]"></a>language_window_display</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 400<LI>Call Chain = language_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display_hcenter
<LI><a href="#[578]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_self_window_display
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>language_window_touch_click</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 360<LI>Call Chain = language_window_touch_click &rArr; window_language_init &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay
<LI><a href="#[57a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_self_window_touch_click
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[175]"></a>language_window_touch_move</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = language_window_touch_move &rArr; self_window_touch_move &rArr; window_move_self &rArr; window_display_switch &rArr; ui_display_switch_y_buf_init &rArr; ui_display_block_set
</UL>
<BR>[Calls]<UL><LI><a href="#[541]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;self_window_touch_move
</UL>
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[176]"></a>language_window_key1_short</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, language_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> language_window.o(.constdata)
</UL>
<P><STRONG><a name="[57a]"></a>language_self_window_touch_click</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, language_window.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;language_window_touch_click
</UL>

<P><STRONG><a name="[177]"></a>app_language_window_init</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = app_language_window_init &rArr; open_window_act_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_language_window.o(.constdata)
</UL>
<P><STRONG><a name="[178]"></a>app_language_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, app_language_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> app_language_window.o(.constdata)
</UL>
<P><STRONG><a name="[179]"></a>app_language_window_display</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 408<LI>Call Chain = app_language_window_display &rArr; GUI_Font_Digit_DispStringAt_Hcenter &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_ID_String
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display_hcenter
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_clear_screen
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_language_window.o(.constdata)
</UL>
<P><STRONG><a name="[17a]"></a>app_language_window_act</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, app_language_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 352<LI>Call Chain = app_language_window_act &rArr; window_language_init &rArr; GUI_font_to_pic_init &rArr; sport_font_to_pic_init &rArr; GUI_Font_to_pic &rArr; GUI_Font_Digit_DispStringAt &rArr; _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_language_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_language_window.o(.constdata)
</UL>
<P><STRONG><a name="[17b]"></a>circle_menu_window_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, circle_menu_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = circle_menu_window_init &rArr; cirmenu_init
</UL>
<BR>[Calls]<UL><LI><a href="#[57b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[17c]"></a>circle_menu_window_exit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, circle_menu_window.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[17d]"></a>circle_menu_window_display</STRONG> (Thumb, 292 bytes, Stack size 48 bytes, circle_menu_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = circle_menu_window_display &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[57c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_get
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[17e]"></a>circle_menu_window_act</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, circle_menu_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = circle_menu_window_act &rArr; close_window_act_timer &rArr; sys_timer_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;close_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[180]"></a>circle_menu_window_touch_move</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, circle_menu_window.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = circle_menu_window_touch_move &rArr; send_motor_msg &rArr; disturb_check &rArr; sec_to_time &rArr; localtime &rArr; _localtime_r
</UL>
<BR>[Calls]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_motor_msg
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
<LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_update
<LI><a href="#[57f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_end
<LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_display
<LI><a href="#[57d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touch_move_get_start_coord
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;open_window_act_timer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[17f]"></a>circle_menu_window_touch_click</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, circle_menu_window.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_switch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> circle_menu_window.o(.constdata)
</UL>
<P><STRONG><a name="[581]"></a>GUI_Font_Digit_Get_len_</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = GUI_Font_Digit_Get_len_ &rArr; ui_font_utf8_to_unicode
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_Get_len
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
</UL>

<P><STRONG><a name="[582]"></a>_GUI_Font_pic_display</STRONG> (Thumb, 80 bytes, Stack size 32 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _GUI_Font_pic_display &rArr; ui_draw_picture_ex_hcenter &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex_hcenter
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[53f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display
<LI><a href="#[579]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_pic_display_hcenter
</UL>

<P><STRONG><a name="[583]"></a>_GUI_Font_Digit_DisplayAt</STRONG> (Thumb, 322 bytes, Stack size 72 bytes, gui_font_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = _GUI_Font_Digit_DisplayAt &rArr; ui_draw_buffer_bit &rArr; _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer_bit
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
</UL>
<BR>[Called By]<UL><LI><a href="#[586]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[585]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_AutoLine
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt_Hcenter
<LI><a href="#[52b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Font_Digit_DispStringAt
</UL>

<P><STRONG><a name="[587]"></a>_GUI_Picture_Digit_DisplayAt</STRONG> (Thumb, 152 bytes, Stack size 40 bytes, gui_picture_digit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = _GUI_Picture_Digit_DisplayAt &rArr; ui_draw_picture_ex &rArr; _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;oled_get_status
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>
<BR>[Called By]<UL><LI><a href="#[563]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Hcenter_Point
<LI><a href="#[588]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_AutoLine
<LI><a href="#[52d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt_Right
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Picture_Digit_DispStringAt
</UL>

<P><STRONG><a name="[186]"></a>_window_refresh</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, ui_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _window_refresh &rArr; send_window_event &rArr; set_window_timeout_timer &rArr; sys_timer_set
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;send_window_event
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[187]"></a>_window_display</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ui_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = _window_display &rArr; window_display &rArr; window_event_display &rArr; window_event_cb &rArr; check_window_event_exist
</UL>
<BR>[Calls]<UL><LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;window_display
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ui_lib.o(.constdata)
</UL>
<P><STRONG><a name="[5c4]"></a>ADC_GetKValue</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, adc_k_lib.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_GetKValue
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_CalibrationInit
</UL>

<P><STRONG><a name="[5c5]"></a>ADC_GetKVoltage</STRONG> (Thumb, 86 bytes, Stack size 0 bytes, adc_k_lib.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_GetVoltage
</UL>

<P><STRONG><a name="[5c7]"></a>get_gb2312_index</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = get_gb2312_index
</UL>
<BR>[Called By]<UL><LI><a href="#[55c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_Get_String_len
<LI><a href="#[5c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_GUI_HZ_DispStringAt
</UL>

<P><STRONG><a name="[5c6]"></a>_GUI_HZ_DispStringAt</STRONG> (Thumb, 746 bytes, Stack size 216 bytes, gui_font_unicode.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = _GUI_HZ_DispStringAt &rArr; ui_draw_buffer &rArr; _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_font_utf8_to_unicode
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_color
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
<LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer
<LI><a href="#[5c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_gb2312_index
</UL>
<BR>[Called By]<UL><LI><a href="#[533]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt
<LI><a href="#[52f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GUI_HZ_DispStringAt_AutoLine
</UL>

<P><STRONG><a name="[5cf]"></a>_ui_draw_point</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _ui_draw_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
</UL>

<P><STRONG><a name="[5d1]"></a>_ui_draw_point_AA</STRONG> (Thumb, 236 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ui_draw_point_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA_f
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
</UL>

<P><STRONG><a name="[5d4]"></a>_ui_draw_horizontal_line</STRONG> (Thumb, 350 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ui_draw_horizontal_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_fill_rectangle
<LI><a href="#[532]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_horizontal_line
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
</UL>

<P><STRONG><a name="[5d5]"></a>_ui_draw_vertical_line</STRONG> (Thumb, 202 bytes, Stack size 32 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = _ui_draw_vertical_line
</UL>
<BR>[Calls]<UL><LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[561]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_vertical_line
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_rectangle
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line_AA
<LI><a href="#[52a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_line
</UL>

<P><STRONG><a name="[5d9]"></a>_ui_draw_buffer</STRONG> (Thumb, 382 bytes, Stack size 80 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ui_draw_buffer
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_background_color
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_draw_mode
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer
</UL>

<P><STRONG><a name="[5dd]"></a>_ui_draw_buffer_part</STRONG> (Thumb, 394 bytes, Stack size 80 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _ui_draw_buffer_part
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_background_color
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_draw_mode
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[5c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer
</UL>

<P><STRONG><a name="[5de]"></a>_ui_draw_buffer_bit</STRONG> (Thumb, 794 bytes, Stack size 96 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ui_draw_buffer_bit
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_background_color
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_draw_mode
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer_bit
</UL>

<P><STRONG><a name="[5df]"></a>_ui_draw_buffer_bit_4</STRONG> (Thumb, 420 bytes, Stack size 64 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ui_draw_buffer_bit_4
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer_bit
</UL>

<P><STRONG><a name="[5e0]"></a>_ui_draw_buffer_bit_part_AA</STRONG> (Thumb, 832 bytes, Stack size 104 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ui_draw_buffer_bit_part_AA
</UL>
<BR>[Calls]<UL><LI><a href="#[5db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_background_color
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
<LI><a href="#[5dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_draw_mode
<LI><a href="#[5ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_y_pos
<LI><a href="#[5c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_set_display_x_pos
</UL>
<BR>[Called By]<UL><LI><a href="#[584]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_buffer_bit
</UL>

<P><STRONG><a name="[5e1]"></a>_ui_draw_picture_ex_point</STRONG> (Thumb, 442 bytes, Stack size 72 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = _ui_draw_picture_ex_point
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y_limit
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
</UL>

<P><STRONG><a name="[5e2]"></a>_ui_draw_picture_ex_point_part</STRONG> (Thumb, 382 bytes, Stack size 48 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _ui_draw_picture_ex_point_part
</UL>
<BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_get_color
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
</UL>

<P><STRONG><a name="[5e8]"></a>_ui_draw_picture_ex_point_AA</STRONG> (Thumb, 714 bytes, Stack size 96 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = _ui_draw_picture_ex_point_AA
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
</UL>

<P><STRONG><a name="[5e4]"></a>_ui_draw_picture_ex_point_part_AA</STRONG> (Thumb, 630 bytes, Stack size 64 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _ui_draw_picture_ex_point_part_AA
</UL>
<BR>[Called By]<UL><LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
</UL>

<P><STRONG><a name="[5e5]"></a>_ui_draw_picture_ex_point_A2_real</STRONG> (Thumb, 1158 bytes, Stack size 104 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Called By]<UL><LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_part
</UL>

<P><STRONG><a name="[5e3]"></a>_ui_draw_picture_ex_part</STRONG> (Thumb, 1142 bytes, Stack size 96 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ui_draw_picture_ex_part &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_set_ptr_center_default
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_A2_real
<LI><a href="#[5e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_part_AA
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_part
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>

<P><STRONG><a name="[5e7]"></a>_ui_draw_picture_ex</STRONG> (Thumb, 1150 bytes, Stack size 96 bytes, ui_draw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = _ui_draw_picture_ex &rArr; _ui_draw_picture_ex_point_A2_real
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[5e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_set_ptr_center_default
<LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
<LI><a href="#[5e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_A2_real
<LI><a href="#[5e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_AA
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point
</UL>
<BR>[Called By]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_ex
</UL>

<P><STRONG><a name="[5eb]"></a>_ui_draw_picture_cond</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_y01_limit
</UL>
<BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_cond
</UL>

<P><STRONG><a name="[5ed]"></a>_ui_draw_picture_cond_part</STRONG> (Thumb, 338 bytes, Stack size 72 bytes, ui_draw.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[5ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_picture_cond
</UL>

<P><STRONG><a name="[5d0]"></a>check_y_limit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_circle_AA
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
<LI><a href="#[5d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_point
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
<LI><a href="#[5d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_vertical_line
<LI><a href="#[5d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_horizontal_line
<LI><a href="#[5d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_point_AA
<LI><a href="#[5cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_point
</UL>

<P><STRONG><a name="[5da]"></a>check_y01_limit</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ui_draw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ui_draw_arc_AA
<LI><a href="#[5eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_cond
<LI><a href="#[5e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex
<LI><a href="#[5e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point_part
<LI><a href="#[5e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_picture_ex_point
<LI><a href="#[5df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit_4
<LI><a href="#[5de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer_bit
<LI><a href="#[5d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ui_draw_buffer
</UL>

<P><STRONG><a name="[5f0]"></a>ui_lib_calc_deg</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, ui_cirmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ui_lib_calc_deg
</UL>
<BR>[Called By]<UL><LI><a href="#[57e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_update
</UL>

<P><STRONG><a name="[5f1]"></a>cirmenu_move_display_start</STRONG> (Thumb, 436 bytes, Stack size 28 bytes, ui_cirmenu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = cirmenu_move_display_start
</UL>
<BR>[Called By]<UL><LI><a href="#[580]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cirmenu_move_display
</UL>

<P><STRONG><a name="[604]"></a>_tm_carry</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mktime.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _tm_carry
</UL>
<BR>[Called By]<UL><LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>

<P><STRONG><a name="[653]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[654]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
</UL>

<P><STRONG><a name="[645]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[652]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_drsb
<LI><a href="#[644]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[609]"></a>_fp_digits</STRONG> (Thumb, 432 bytes, Stack size 96 bytes, _printf_fp_dec.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_digits &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[60d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emul
<LI><a href="#[60c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_ediv
<LI><a href="#[60b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_d2e
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[60e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ll_udiv10
</UL>
<BR>[Called By]<UL><LI><a href="#[60f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_fp_dec_real
</UL>

<P><STRONG><a name="[1f]"></a>_printf_input_char</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, _printf_char_common.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> _printf_char_common.o(.text)
</UL>
<P><STRONG><a name="[20]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[616]"></a>_local_sscanf</STRONG> (Thumb, 60 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = _local_sscanf &rArr; _scanf_real &rArr; _scanf_really_real &rArr; _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[617]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[618]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>

<P><STRONG><a name="[61a]"></a>_fp_value</STRONG> (Thumb, 588 bytes, Stack size 96 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = _fp_value &rArr; _btod_etento &rArr; _btod_emul &rArr; _e2e
</UL>
<BR>[Calls]<UL><LI><a href="#[0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ieee_status
<LI><a href="#[61b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_emuld
<LI><a href="#[61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_edivd
<LI><a href="#[60a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_btod_etento
<LI><a href="#[606]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[61d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
